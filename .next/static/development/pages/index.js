(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["static/development/pages/index.js"],{

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _extends; });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcz9jMzFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZTtBQUNmO0FBQ0EsbUJBQW1CLHNCQUFzQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/extends.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _inheritsLoose; });\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcz83NDhlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _objectWithoutPropertiesLoose; });\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcz9jY2I1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsdUJBQXVCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\n");

/***/ }),

/***/ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ \"./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\");\n\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = Object(_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9kaXN0L2lzLXByb3AtdmFsaWQuYnJvd3Nlci5lc20uanM/ZjZlOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQXVDOztBQUV2QyxrN0hBQWs3SDs7QUFFbDdILFlBQVksZ0VBQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZSxvRUFBSyxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2lzLXByb3AtdmFsaWQvZGlzdC9pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciByZWFjdFByb3BzUmVnZXggPSAvXigoY2hpbGRyZW58ZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8a2V5fHJlZnxhdXRvRm9jdXN8ZGVmYXVsdFZhbHVlfGRlZmF1bHRDaGVja2VkfGlubmVySFRNTHxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmd8c3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nfHZhbHVlTGlua3xhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxmb3JtfGZvcm1BY3Rpb258Zm9ybUVuY1R5cGV8Zm9ybU1ldGhvZHxmb3JtTm9WYWxpZGF0ZXxmb3JtVGFyZ2V0fGZyYW1lQm9yZGVyfGhlYWRlcnN8aGVpZ2h0fGhpZGRlbnxoaWdofGhyZWZ8aHJlZkxhbmd8aHRtbEZvcnxodHRwRXF1aXZ8aWR8aW5wdXRNb2RlfGludGVncml0eXxpc3xrZXlQYXJhbXN8a2V5VHlwZXxraW5kfGxhYmVsfGxhbmd8bGlzdHxsb2FkaW5nfGxvb3B8bG93fG1hcmdpbkhlaWdodHxtYXJnaW5XaWR0aHxtYXh8bWF4TGVuZ3RofG1lZGlhfG1lZGlhR3JvdXB8bWV0aG9kfG1pbnxtaW5MZW5ndGh8bXVsdGlwbGV8bXV0ZWR8bmFtZXxub25jZXxub1ZhbGlkYXRlfG9wZW58b3B0aW11bXxwYXR0ZXJufHBsYWNlaG9sZGVyfHBsYXlzSW5saW5lfHBvc3RlcnxwcmVsb2FkfHByb2ZpbGV8cmFkaW9Hcm91cHxyZWFkT25seXxyZWZlcnJlclBvbGljeXxyZWx8cmVxdWlyZWR8cmV2ZXJzZWR8cm9sZXxyb3dzfHJvd1NwYW58c2FuZGJveHxzY29wZXxzY29wZWR8c2Nyb2xsaW5nfHNlYW1sZXNzfHNlbGVjdGVkfHNoYXBlfHNpemV8c2l6ZXN8c2xvdHxzcGFufHNwZWxsQ2hlY2t8c3JjfHNyY0RvY3xzcmNMYW5nfHNyY1NldHxzdGFydHxzdGVwfHN0eWxlfHN1bW1hcnl8dGFiSW5kZXh8dGFyZ2V0fHRpdGxlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGluZGV4ID0gbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (memoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanM/ZTJhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLHNFQUFPLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@popmotion/easing/dist/easing.es.js":
/*!**********************************************************!*\
  !*** ./node_modules/@popmotion/easing/dist/easing.es.js ***!
  \**********************************************************/
/*! exports provided: reversed, mirrored, createReversedEasing, createMirroredEasing, createExpoIn, createBackIn, createAnticipateEasing, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, bounceOut, bounceIn, bounceInOut, cubicBezier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reversed\", function() { return reversed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mirrored\", function() { return mirrored; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createReversedEasing\", function() { return createReversedEasing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMirroredEasing\", function() { return createMirroredEasing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createExpoIn\", function() { return createExpoIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBackIn\", function() { return createBackIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAnticipateEasing\", function() { return createAnticipateEasing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"linear\", function() { return linear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"easeIn\", function() { return easeIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"easeOut\", function() { return easeOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"easeInOut\", function() { return easeInOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"circIn\", function() { return circIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"circOut\", function() { return circOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"circInOut\", function() { return circInOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"backIn\", function() { return backIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"backOut\", function() { return backOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"backInOut\", function() { return backInOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"anticipate\", function() { return anticipate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bounceOut\", function() { return bounceOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bounceIn\", function() { return bounceIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bounceInOut\", function() { return bounceInOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cubicBezier\", function() { return cubicBezier; });\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar reversed = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrored = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createReversedEasing = reversed;\nvar createMirroredEasing = mirrored;\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipateEasing = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reversed(easeIn);\nvar easeInOut = /*#__PURE__*/mirrored(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reversed(circIn);\nvar circInOut = /*#__PURE__*/mirrored(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reversed(backIn);\nvar backInOut = /*#__PURE__*/mirrored(backIn);\nvar anticipate = /*#__PURE__*/createAnticipateEasing(DEFAULT_OVERSHOOT_STRENGTH);\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = function (p) {\n    return 1.0 - bounceOut(1.0 - p);\n};\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\nvar NEWTON_ITERATIONS = 8;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\nvar K_SPLINE_TABLE_SIZE = 11;\nvar K_SAMPLE_STEP_SIZE = 1.0 / (K_SPLINE_TABLE_SIZE - 1.0);\nvar FLOAT_32_SUPPORTED = typeof Float32Array !== 'undefined';\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    var sampleValues = FLOAT_32_SUPPORTED ? new Float32Array(K_SPLINE_TABLE_SIZE) : new Array(K_SPLINE_TABLE_SIZE);\n    var binarySubdivide = function (aX, aA, aB) {\n        var i = 0;\n        var currentX;\n        var currentT;\n        do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n                aB = currentT;\n            } else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    };\n    var newtonRaphsonIterate = function (aX, aGuessT) {\n        var i = 0;\n        var currentSlope = 0;\n        var currentX;\n        for (; i < NEWTON_ITERATIONS; ++i) {\n            currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n                return aGuessT;\n            }\n            currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    };\n    var calcSampleValues = function () {\n        for (var i = 0; i < K_SPLINE_TABLE_SIZE; ++i) {\n            sampleValues[i] = calcBezier(i * K_SAMPLE_STEP_SIZE, mX1, mX2);\n        }\n    };\n    var getTForX = function (aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = K_SPLINE_TABLE_SIZE - 1;\n        var dist = 0.0;\n        var guessForT = 0.0;\n        var initialSlope = 0.0;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += K_SAMPLE_STEP_SIZE;\n        }\n        --currentSample;\n        dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        guessForT = intervalStart + dist * K_SAMPLE_STEP_SIZE;\n        initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + K_SAMPLE_STEP_SIZE);\n        }\n    };\n    calcSampleValues();\n    var resolver = function (aX) {\n        var returnValue;\n        if (mX1 === mY1 && mX2 === mY2) {\n            returnValue = aX;\n        } else if (aX === 0) {\n            returnValue = 0;\n        } else if (aX === 1) {\n            returnValue = 1;\n        } else {\n            returnValue = calcBezier(getTForX(aX), mY1, mY2);\n        }\n        return returnValue;\n    };\n    return resolver;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@popmotion/easing/dist/easing.es.js\n");

/***/ }),

/***/ "./node_modules/@popmotion/popcorn/dist/popcorn.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@popmotion/popcorn/dist/popcorn.es.js ***!
  \************************************************************/
/*! exports provided: createAnticipateEasing, createBackIn, createExpoIn, cubicBezier, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, reversed, mirrored, angle, applyOffset, clamp, conditional, degreesToRadians, distance, interpolate, isPoint, isPoint3D, mix, mixArray, mixColor, mixComplex, mixObject, pipe, pointFromVector, progress, radiansToDegrees, smooth, smoothFrame, snap, springForce, springForceExpo, springForceLinear, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"angle\", function() { return angle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyOffset\", function() { return applyOffset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clamp\", function() { return clamp$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conditional\", function() { return conditional; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"degreesToRadians\", function() { return degreesToRadians; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distance\", function() { return distance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolate\", function() { return interpolate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPoint\", function() { return isPoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPoint3D\", function() { return isPoint3D; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mix\", function() { return mix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mixArray\", function() { return mixArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mixColor\", function() { return mixColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mixComplex\", function() { return mixComplex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mixObject\", function() { return mixObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pipe\", function() { return pipe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pointFromVector\", function() { return pointFromVector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"progress\", function() { return progress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"radiansToDegrees\", function() { return radiansToDegrees; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"smooth\", function() { return smooth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"smoothFrame\", function() { return smoothFrame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"snap\", function() { return snap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"springForce\", function() { return springForce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"springForceExpo\", function() { return springForceExpo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"springForceLinear\", function() { return springForceLinear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"steps\", function() { return steps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toDecimal\", function() { return toDecimal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"velocityPerFrame\", function() { return velocityPerFrame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"velocityPerSecond\", function() { return velocityPerSecond; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrap\", function() { return wrap$1; });\n/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-value-types */ \"./node_modules/style-value-types/dist/style-value-types.es.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ \"./node_modules/hey-listen/dist/hey-listen.es.js\");\n/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framesync */ \"./node_modules/framesync/dist/framesync.es.js\");\n/* harmony import */ var _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @popmotion/easing */ \"./node_modules/@popmotion/easing/dist/easing.es.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createAnticipateEasing\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"createAnticipateEasing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createBackIn\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"createBackIn\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createExpoIn\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"createExpoIn\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cubicBezier\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"cubicBezier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"linear\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"linear\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"easeIn\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"easeIn\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"easeOut\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"easeOut\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"easeInOut\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"easeInOut\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"circIn\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"circIn\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"circOut\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"circOut\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"circInOut\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"circInOut\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"backIn\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"backIn\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"backOut\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"backOut\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"backInOut\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"backInOut\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"anticipate\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"anticipate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"reversed\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"reversed\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mirrored\", function() { return _popmotion_easing__WEBPACK_IMPORTED_MODULE_3__[\"mirrored\"]; });\n\n\n\n\n\n\n\nvar zeroPoint = {\r\n    x: 0,\r\n    y: 0,\r\n    z: 0\r\n};\r\nvar isNum = function (v) { return typeof v === 'number'; };\n\nvar radiansToDegrees = (function (radians) { return (radians * 180) / Math.PI; });\n\nvar angle = (function (a, b) {\r\n    if (b === void 0) { b = zeroPoint; }\r\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\r\n});\n\nvar applyOffset = (function (from, to) {\r\n    var hasReceivedFrom = true;\r\n    if (to === undefined) {\r\n        to = from;\r\n        hasReceivedFrom = false;\r\n    }\r\n    return function (v) {\r\n        if (hasReceivedFrom) {\r\n            return v - from + to;\r\n        }\r\n        else {\r\n            from = v;\r\n            hasReceivedFrom = true;\r\n            return to;\r\n        }\r\n    };\r\n});\n\nvar curryRange = (function (func) { return function (min, max, v) { return (v !== undefined ? func(min, max, v) : function (cv) { return func(min, max, cv); }); }; });\n\nvar clamp = function (min, max, v) {\r\n    return Math.min(Math.max(v, min), max);\r\n};\r\nvar clamp$1 = curryRange(clamp);\n\nvar conditional = (function (check, apply) { return function (v) {\r\n    return check(v) ? apply(v) : v;\r\n}; });\n\nvar degreesToRadians = (function (degrees) { return (degrees * Math.PI) / 180; });\n\nvar isPoint = (function (point) {\r\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\r\n});\n\nvar isPoint3D = (function (point) {\r\n    return isPoint(point) && point.hasOwnProperty('z');\r\n});\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\r\nvar distance = (function (a, b) {\r\n    if (b === void 0) { b = zeroPoint; }\r\n    if (isNum(a) && isNum(b)) {\r\n        return distance1D(a, b);\r\n    }\r\n    else if (isPoint(a) && isPoint(b)) {\r\n        var xDelta = distance1D(a.x, b.x);\r\n        var yDelta = distance1D(a.y, b.y);\r\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\r\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\r\n    }\r\n    return 0;\r\n});\n\nvar progress = (function (from, to, value) {\r\n    var toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n});\n\nvar mix = (function (from, to, progress) {\r\n    return -progress * from + progress * to + from;\r\n});\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar mixLinearColor = function (from, to, v) {\r\n    var fromExpo = from * from;\r\n    var toExpo = to * to;\r\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\r\n};\r\nvar colorTypes = [style_value_types__WEBPACK_IMPORTED_MODULE_0__[\"hex\"], style_value_types__WEBPACK_IMPORTED_MODULE_0__[\"rgba\"], style_value_types__WEBPACK_IMPORTED_MODULE_0__[\"hsla\"]];\r\nvar getColorType = function (v) {\r\n    return colorTypes.find(function (type) { return type.test(v); });\r\n};\r\nvar notAnimatable = function (color$$1) {\r\n    return \"'\" + color$$1 + \"' is not an animatable color. Use the equivalent color code instead.\";\r\n};\r\nvar mixColor = (function (from, to) {\r\n    var fromColorType = getColorType(from);\r\n    var toColorType = getColorType(to);\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__[\"invariant\"])(!!fromColorType, notAnimatable(from));\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__[\"invariant\"])(!!toColorType, notAnimatable(to));\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__[\"invariant\"])(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\r\n    var fromColor = fromColorType.parse(from);\r\n    var toColor = toColorType.parse(to);\r\n    var blended = __assign({}, fromColor);\r\n    var mixFunc = fromColorType === style_value_types__WEBPACK_IMPORTED_MODULE_0__[\"hsla\"] ? mix : mixLinearColor;\r\n    return function (v) {\r\n        for (var key in blended) {\r\n            if (key !== 'alpha') {\r\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\r\n            }\r\n        }\r\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\r\n        return fromColorType.transform(blended);\r\n    };\r\n});\n\nvar combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\r\nvar pipe = (function () {\r\n    var transformers = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        transformers[_i] = arguments[_i];\r\n    }\r\n    return transformers.reduce(combineFunctions);\r\n});\n\nfunction getMixer(origin, target) {\r\n    if (isNum(origin)) {\r\n        return function (v) { return mix(origin, target, v); };\r\n    }\r\n    else if (style_value_types__WEBPACK_IMPORTED_MODULE_0__[\"color\"].test(origin)) {\r\n        return mixColor(origin, target);\r\n    }\r\n    else {\r\n        return mixComplex(origin, target);\r\n    }\r\n}\r\nvar mixArray = function (from, to) {\r\n    var output = from.slice();\r\n    var numValues = output.length;\r\n    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });\r\n    return function (v) {\r\n        for (var i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nvar mixObject = function (origin, target) {\r\n    var output = __assign({}, origin, target);\r\n    var blendValue = {};\r\n    for (var key in output) {\r\n        if (origin[key] !== undefined && target[key] !== undefined) {\r\n            blendValue[key] = getMixer(origin[key], target[key]);\r\n        }\r\n    }\r\n    return function (v) {\r\n        for (var key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nfunction analyse(value) {\r\n    var parsed = style_value_types__WEBPACK_IMPORTED_MODULE_0__[\"complex\"].parse(value);\r\n    var numValues = parsed.length;\r\n    var numNumbers = 0;\r\n    var numRGB = 0;\r\n    var numHSL = 0;\r\n    for (var i = 0; i < numValues; i++) {\r\n        if (numNumbers || typeof parsed[i] === 'number') {\r\n            numNumbers++;\r\n        }\r\n        else {\r\n            if (parsed[i].hue !== undefined) {\r\n                numHSL++;\r\n            }\r\n            else {\r\n                numRGB++;\r\n            }\r\n        }\r\n    }\r\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\r\n}\r\nvar mixComplex = function (origin, target) {\r\n    var template = style_value_types__WEBPACK_IMPORTED_MODULE_0__[\"complex\"].createTransformer(target);\r\n    var originStats = analyse(origin);\r\n    var targetStats = analyse(target);\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__[\"invariant\"])(originStats.numHSL === targetStats.numHSL &&\r\n        originStats.numRGB === targetStats.numRGB &&\r\n        originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\r\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\r\n};\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\r\nfunction detectMixerFactory(v) {\r\n    if (typeof v === 'number') {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof v === 'string') {\r\n        if (style_value_types__WEBPACK_IMPORTED_MODULE_0__[\"color\"].test(v)) {\r\n            return mixColor;\r\n        }\r\n        else {\r\n            return mixComplex;\r\n        }\r\n    }\r\n    else if (Array.isArray(v)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof v === 'object') {\r\n        return mixObject;\r\n    }\r\n}\r\nfunction createMixers(output, ease, customMixer) {\r\n    var mixers = [];\r\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\r\n    var numMixers = output.length - 1;\r\n    for (var i = 0; i < numMixers; i++) {\r\n        var mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\nfunction fastInterpolate(_a, _b) {\r\n    var from = _a[0], to = _a[1];\r\n    var mixer = _b[0];\r\n    return function (v) { return mixer(progress(from, to, v)); };\r\n}\r\nfunction slowInterpolate(input, mixers) {\r\n    var inputLength = input.length;\r\n    var lastInputIndex = inputLength - 1;\r\n    return function (v) {\r\n        var mixerIndex = 0;\r\n        var foundMixerIndex = false;\r\n        if (v <= input[0]) {\r\n            foundMixerIndex = true;\r\n        }\r\n        else if (v >= input[lastInputIndex]) {\r\n            mixerIndex = lastInputIndex - 1;\r\n            foundMixerIndex = true;\r\n        }\r\n        if (!foundMixerIndex) {\r\n            var i = 1;\r\n            for (; i < inputLength; i++) {\r\n                if (input[i] > v || i === lastInputIndex) {\r\n                    break;\r\n                }\r\n            }\r\n            mixerIndex = i - 1;\r\n        }\r\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\r\n        return mixers[mixerIndex](progressInRange);\r\n    };\r\n}\r\nfunction interpolate(input, output, _a) {\r\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, clamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\r\n    var inputLength = input.length;\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__[\"invariant\"])(inputLength === output.length, 'Both input and output ranges must be the same length');\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__[\"invariant\"])(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [].concat(input);\r\n        output = [].concat(output);\r\n        input.reverse();\r\n        output.reverse();\r\n    }\r\n    var mixers = createMixers(output, ease, mixer);\r\n    var interpolator = inputLength === 2\r\n        ? fastInterpolate(input, mixers)\r\n        : slowInterpolate(input, mixers);\r\n    return clamp\r\n        ? pipe(clamp$1(input[0], input[inputLength - 1]), interpolator)\r\n        : interpolator;\r\n}\n\nvar pointFromVector = (function (origin, angle, distance) {\r\n    angle = degreesToRadians(angle);\r\n    return {\r\n        x: distance * Math.cos(angle) + origin.x,\r\n        y: distance * Math.sin(angle) + origin.y\r\n    };\r\n});\n\nvar toDecimal = (function (num, precision) {\r\n    if (precision === void 0) { precision = 2; }\r\n    precision = Math.pow(10, precision);\r\n    return Math.round(num * precision) / precision;\r\n});\n\nvar smoothFrame = (function (prevValue, nextValue, duration, smoothing) {\r\n    if (smoothing === void 0) { smoothing = 0; }\r\n    return toDecimal(prevValue +\r\n        (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));\r\n});\n\nvar smooth = (function (strength) {\r\n    if (strength === void 0) { strength = 50; }\r\n    var previousValue = 0;\r\n    var lastUpdated = 0;\r\n    return function (v) {\r\n        var currentFramestamp = Object(framesync__WEBPACK_IMPORTED_MODULE_2__[\"getFrameData\"])().timestamp;\r\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\r\n        var newValue = timeDelta\r\n            ? smoothFrame(previousValue, v, timeDelta, strength)\r\n            : previousValue;\r\n        lastUpdated = currentFramestamp;\r\n        previousValue = newValue;\r\n        return newValue;\r\n    };\r\n});\n\nvar snap = (function (points) {\r\n    if (typeof points === 'number') {\r\n        return function (v) { return Math.round(v / points) * points; };\r\n    }\r\n    else {\r\n        var i_1 = 0;\r\n        var numPoints_1 = points.length;\r\n        return function (v) {\r\n            var lastDistance = Math.abs(points[0] - v);\r\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\r\n                var point = points[i_1];\r\n                var distance = Math.abs(point - v);\r\n                if (distance === 0)\r\n                    return point;\r\n                if (distance > lastDistance)\r\n                    return points[i_1 - 1];\r\n                if (i_1 === numPoints_1 - 1)\r\n                    return point;\r\n                lastDistance = distance;\r\n            }\r\n        };\r\n    }\r\n});\n\nvar identity = function (v) { return v; };\r\nvar springForce = function (alterDisplacement) {\r\n    if (alterDisplacement === void 0) { alterDisplacement = identity; }\r\n    return curryRange(function (constant, origin, v) {\r\n        var displacement = origin - v;\r\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\r\n        return displacement <= 0\r\n            ? origin + springModifiedDisplacement\r\n            : origin - springModifiedDisplacement;\r\n    });\r\n};\r\nvar springForceLinear = springForce();\r\nvar springForceExpo = springForce(Math.sqrt);\n\nvar velocityPerFrame = (function (xps, frameDuration) {\r\n    return isNum(xps) ? xps / (1000 / frameDuration) : 0;\r\n});\n\nvar velocityPerSecond = (function (velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n});\n\nvar wrap = function (min, max, v) {\r\n    var rangeSize = max - min;\r\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\r\n};\r\nvar wrap$1 = curryRange(wrap);\n\nvar clampProgress = clamp$1(0, 1);\r\nvar steps = (function (steps, direction) {\r\n    if (direction === void 0) { direction = 'end'; }\r\n    return function (progress) {\r\n        progress =\r\n            direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\r\n        var expanded = progress * steps;\r\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\r\n        return clampProgress(rounded / steps);\r\n    };\r\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@popmotion/popcorn/dist/popcorn.es.js\n");

/***/ }),

/***/ "./node_modules/framer-motion/dist/framer-motion.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/framer-motion/dist/framer-motion.es.js ***!
  \*************************************************************/
/*! exports provided: AnimatePresence, AnimationControls, DragControls, MotionContext, MotionPluginContext, MotionPlugins, MotionValue, Point, ReducedMotion, UnstableSyncLayout, animationControls, createMotionComponent, isValidMotionProp, motion, motionValue, transform, unwrapMotionValue, useAnimatedState, useAnimation, useCycle, useDomEvent, useDragControls, useElementScroll, useExternalRef, useGestures, useInvertedScale, useMotionValue, usePanGesture, usePresence, useReducedMotion, useSpring, useTapGesture, useTransform, useViewportScroll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnimatePresence\", function() { return AnimatePresence; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnimationControls\", function() { return AnimationControls; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DragControls\", function() { return DragControls; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MotionContext\", function() { return MotionContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MotionPluginContext\", function() { return MotionPluginContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MotionPlugins\", function() { return MotionPlugins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MotionValue\", function() { return MotionValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Point\", function() { return Point; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReducedMotion\", function() { return ReducedMotion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnstableSyncLayout\", function() { return UnstableSyncLayout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"animationControls\", function() { return animationControls; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMotionComponent\", function() { return createMotionComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidMotionProp\", function() { return isValidMotionProp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"motion\", function() { return motion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"motionValue\", function() { return motionValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transform\", function() { return transform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unwrapMotionValue\", function() { return unwrapMotionValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useAnimatedState\", function() { return useAnimatedState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useAnimation\", function() { return useAnimation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useCycle\", function() { return useCycle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useDomEvent\", function() { return useDomEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useDragControls\", function() { return useDragControls; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useElementScroll\", function() { return useElementScroll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useExternalRef\", function() { return useExternalRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useGestures\", function() { return useGestures; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useInvertedScale\", function() { return useInvertedScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMotionValue\", function() { return useMotionValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"usePanGesture\", function() { return usePanGesture; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"usePresence\", function() { return usePresence; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useReducedMotion\", function() { return useReducedMotion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useSpring\", function() { return useSpring; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useTapGesture\", function() { return useTapGesture; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useTransform\", function() { return useTransform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useViewportScroll\", function() { return useViewportScroll; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framesync */ \"./node_modules/framesync/dist/framesync.es.js\");\n/* harmony import */ var _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @popmotion/popcorn */ \"./node_modules/@popmotion/popcorn/dist/popcorn.es.js\");\n/* harmony import */ var stylefire__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! stylefire */ \"./node_modules/stylefire/dist/stylefire.es.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! hey-listen */ \"./node_modules/hey-listen/dist/hey-listen.es.js\");\n/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! style-value-types */ \"./node_modules/style-value-types/dist/style-value-types.es.js\");\n/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! popmotion */ \"./node_modules/popmotion/dist/popmotion.es.js\");\n/* harmony import */ var _popmotion_easing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @popmotion/easing */ \"./node_modules/@popmotion/easing/dist/easing.es.js\");\n\n\n\n\n\n\n\n\n\n\n\nvar isFloat = function (value) {\r\n    return !isNaN(parseFloat(value));\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nvar MotionValue = /** @class */ (function () {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    function MotionValue(init, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, transformer = _b.transformer, parent = _b.parent;\r\n        /**\r\n         * Duration, in milliseconds, since last updating frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.timeDelta = 0;\r\n        /**\r\n         * Timestamp of the last time this `MotionValue` was updated.\r\n         *\r\n         * @internal\r\n         */\r\n        this.lastUpdated = 0;\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = false;\r\n        this.updateAndNotify = function (v, render) {\r\n            if (render === void 0) { render = true; }\r\n            _this.prev = _this.current;\r\n            _this.current = _this.transformer ? _this.transformer(v) : v;\r\n            if (_this.updateSubscribers && _this.prev !== _this.current) {\r\n                _this.updateSubscribers.forEach(_this.notifySubscriber);\r\n            }\r\n            if (_this.children) {\r\n                _this.children.forEach(_this.setChild);\r\n            }\r\n            if (render && _this.renderSubscribers) {\r\n                _this.renderSubscribers.forEach(_this.notifySubscriber);\r\n            }\r\n            // Update timestamp\r\n            var _a = Object(framesync__WEBPACK_IMPORTED_MODULE_2__[\"getFrameData\"])(), delta = _a.delta, timestamp = _a.timestamp;\r\n            if (_this.lastUpdated !== timestamp) {\r\n                _this.timeDelta = delta;\r\n                _this.lastUpdated = timestamp;\r\n                framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].postRender(_this.scheduleVelocityCheck);\r\n            }\r\n        };\r\n        /**\r\n         * Notify a subscriber with the latest value.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @param subscriber - The subscriber to notify.\r\n         *\r\n         * @internal\r\n         */\r\n        this.notifySubscriber = function (subscriber) {\r\n            subscriber(_this.current);\r\n        };\r\n        /**\r\n         * Schedule a velocity check for the next frame.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.scheduleVelocityCheck = function () { return framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].postRender(_this.velocityCheck); };\r\n        /**\r\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\r\n         * This ensures velocity calculations return `0`.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.velocityCheck = function (_a) {\r\n            var timestamp = _a.timestamp;\r\n            if (timestamp !== _this.lastUpdated) {\r\n                _this.prev = _this.current;\r\n            }\r\n        };\r\n        /**\r\n         * Updates child `MotionValue`.\r\n         *\r\n         * @param child - Child `MotionValue`.\r\n         *\r\n         * @internal\r\n         */\r\n        this.setChild = function (child) { return child.set(_this.current); };\r\n        this.parent = parent;\r\n        this.transformer = transformer;\r\n        this.set(init, false);\r\n        this.canTrackVelocity = isFloat(this.current);\r\n    }\r\n    /**\r\n     * Creates a new `MotionValue` that's subscribed to the output of this one.\r\n     *\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.addChild = function (config) {\r\n        if (config === void 0) { config = {}; }\r\n        var child = new MotionValue(this.current, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ parent: this }, config));\r\n        if (!this.children)\r\n            this.children = new Set();\r\n        this.children.add(child);\r\n        return child;\r\n    };\r\n    /**\r\n     * Stops a `MotionValue` from being subscribed to this one.\r\n     *\r\n     * @param child - The subscribed `MotionValue`\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.removeChild = function (child) {\r\n        if (!this.children) {\r\n            return;\r\n        }\r\n        this.children.delete(child);\r\n    };\r\n    /**\r\n     * Subscribes a subscriber function to a subscription list.\r\n     *\r\n     * @param subscriptions - A `Set` of subscribers.\r\n     * @param subscription - A subscriber function.\r\n     */\r\n    MotionValue.prototype.subscribeTo = function (subscriptions, subscription) {\r\n        var _this = this;\r\n        var updateSubscriber = function () { return subscription(_this.current); };\r\n        subscriptions.add(updateSubscriber);\r\n        return function () { return subscriptions.delete(updateSubscriber); };\r\n    };\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * @library\r\n     *\r\n     * ```jsx\r\n     * function MyComponent() {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.onChange(updateOpacity)\r\n     *     const unsubscribeY = y.onChange(updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <Frame x={x} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @motion\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.onChange(updateOpacity)\r\n     *     const unsubscribeY = y.onChange(updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <motion.div style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @internalremarks\r\n     *\r\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\r\n     *\r\n     * ```jsx\r\n     * useOnChange(x, () => {})\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.onChange = function (subscription) {\r\n        if (!this.updateSubscribers)\r\n            this.updateSubscribers = new Set();\r\n        return this.subscribeTo(this.updateSubscribers, subscription);\r\n    };\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` requests a render.\r\n     *\r\n     * @param subscriber - A function that's provided the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.onRenderRequest = function (subscription) {\r\n        if (!this.renderSubscribers)\r\n            this.renderSubscribers = new Set();\r\n        // Render immediately\r\n        this.notifySubscriber(subscription);\r\n        return this.subscribeTo(this.renderSubscribers, subscription);\r\n    };\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.attach = function (passiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n    };\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.set = function (v, render) {\r\n        if (render === void 0) { render = true; }\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.get = function () {\r\n        return this.current;\r\n    };\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.getVelocity = function () {\r\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\r\n        return this.canTrackVelocity\r\n            ? // These casts could be avoided if parseFloat would be typed better\r\n                Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_3__[\"velocityPerSecond\"])(parseFloat(this.current) -\r\n                    parseFloat(this.prev), this.timeDelta)\r\n            : 0;\r\n    };\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.start = function (animation) {\r\n        var _this = this;\r\n        this.stop();\r\n        return new Promise(function (resolve) {\r\n            _this.stopAnimation = animation(resolve);\r\n        }).then(function () { return _this.clearAnimation(); });\r\n    };\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.stop = function () {\r\n        if (this.stopAnimation)\r\n            this.stopAnimation();\r\n        this.clearAnimation();\r\n    };\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.isAnimating = function () {\r\n        return !!this.stopAnimation;\r\n    };\r\n    MotionValue.prototype.clearAnimation = function () {\r\n        this.stopAnimation = null;\r\n    };\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.destroy = function () {\r\n        this.updateSubscribers && this.updateSubscribers.clear();\r\n        this.renderSubscribers && this.renderSubscribers.clear();\r\n        this.parent && this.parent.removeChild(this);\r\n        this.stop();\r\n    };\r\n    return MotionValue;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nfunction motionValue(init, opts) {\r\n    return new MotionValue(init, opts);\r\n}\n\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\r\nfunction useConstant(init) {\r\n    var ref = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);\r\n    if (ref.current === null) {\r\n        ref.current = init();\r\n    }\r\n    return ref.current;\r\n}\n\nvar isMotionValue = function (value) {\r\n    return value instanceof MotionValue;\r\n};\n\n// Creating a styler factory for the `onUpdate` prop allows all values\r\n// to fire and the `onUpdate` prop will only fire once per frame\r\nvar updateStyler = Object(stylefire__WEBPACK_IMPORTED_MODULE_4__[\"createStylerFactory\"])({\r\n    onRead: function () { return null; },\r\n    onRender: function (state, _a) {\r\n        var onUpdate = _a.onUpdate;\r\n        return onUpdate(state);\r\n    },\r\n});\r\nvar MotionValuesMap = /** @class */ (function () {\r\n    function MotionValuesMap() {\r\n        this.hasMounted = false;\r\n        this.values = new Map();\r\n        this.unsubscribers = new Map();\r\n    }\r\n    MotionValuesMap.prototype.has = function (key) {\r\n        return this.values.has(key);\r\n    };\r\n    MotionValuesMap.prototype.set = function (key, value) {\r\n        this.values.set(key, value);\r\n        if (this.hasMounted) {\r\n            this.bindValueToOutput(key, value);\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.get = function (key, defaultValue) {\r\n        var value = this.values.get(key);\r\n        if (value === undefined && defaultValue !== undefined) {\r\n            value = new MotionValue(defaultValue);\r\n            this.set(key, value);\r\n        }\r\n        return value;\r\n    };\r\n    MotionValuesMap.prototype.forEach = function (callback) {\r\n        return this.values.forEach(callback);\r\n    };\r\n    MotionValuesMap.prototype.bindValueToOutput = function (key, value) {\r\n        var _this = this;\r\n        var onRender = function (v) { return _this.output && _this.output(key, v); };\r\n        var unsubscribeOnRender = value.onRenderRequest(onRender);\r\n        var onChange = function (v) {\r\n            _this.onUpdate && _this.onUpdate.set(key, v);\r\n        };\r\n        var unsubscribeOnChange = value.onChange(onChange);\r\n        if (this.unsubscribers.has(key)) {\r\n            this.unsubscribers.get(key)();\r\n        }\r\n        this.unsubscribers.set(key, function () {\r\n            unsubscribeOnRender();\r\n            unsubscribeOnChange();\r\n        });\r\n    };\r\n    MotionValuesMap.prototype.setOnUpdate = function (onUpdate) {\r\n        this.onUpdate = undefined;\r\n        if (onUpdate) {\r\n            this.onUpdate = updateStyler({ onUpdate: onUpdate });\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.setTransformTemplate = function (transformTemplate) {\r\n        if (this.transformTemplate !== transformTemplate) {\r\n            this.transformTemplate = transformTemplate;\r\n            this.updateTransformTemplate();\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.getTransformTemplate = function () {\r\n        return this.transformTemplate;\r\n    };\r\n    MotionValuesMap.prototype.updateTransformTemplate = function () {\r\n        if (this.output) {\r\n            this.output(\"transform\", this.transformTemplate);\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.mount = function (output) {\r\n        var _this = this;\r\n        this.hasMounted = true;\r\n        if (output)\r\n            this.output = output;\r\n        this.values.forEach(function (value, key) { return _this.bindValueToOutput(key, value); });\r\n        this.updateTransformTemplate();\r\n    };\r\n    MotionValuesMap.prototype.unmount = function () {\r\n        var _this = this;\r\n        this.values.forEach(function (_value, key) {\r\n            var unsubscribe = _this.unsubscribers.get(key);\r\n            unsubscribe && unsubscribe();\r\n        });\r\n    };\r\n    return MotionValuesMap;\r\n}());\r\nvar specialMotionValueProps = new Set([\"dragOriginX\", \"dragOriginY\"]);\r\nvar useMotionValues = function (props) {\r\n    var motionValues = useConstant(function () {\r\n        var map = new MotionValuesMap();\r\n        /**\r\n         * Loop through every prop and add any detected `MotionValue`s. This is SVG-specific\r\n         * code that should be extracted, perhaps considered hollistically with `useMotionStyles`.\r\n         *\r\n         * <motion.circle cx={motionValue(0)} />\r\n         */\r\n        for (var key in props) {\r\n            if (isMotionValue(props[key]) &&\r\n                !specialMotionValueProps.has(key)) {\r\n                map.set(key, props[key]);\r\n            }\r\n        }\r\n        return map;\r\n    });\r\n    motionValues.setOnUpdate(props.onUpdate);\r\n    motionValues.setTransformTemplate(props.transformTemplate);\r\n    return motionValues;\r\n};\n\nvar session = null;\r\nvar syncRenderSession = {\r\n    isOpen: function () { return session !== null; },\r\n    open: function () {\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(!session, \"Sync render session already open\");\r\n        session = [];\r\n    },\r\n    flush: function () {\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(session !== null, \"No sync render session found\");\r\n        session && session.forEach(function (styler) { return styler.render(); });\r\n        session = null;\r\n    },\r\n    push: function (styler) {\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(session !== null, \"No sync render session found\");\r\n        session && session.push(styler);\r\n    },\r\n};\n\n/**\r\n * `useEffect` gets resolved bottom-up. We defer some optional functionality to child\r\n * components, so to ensure everything runs correctly we export the ref-binding logic\r\n * to a new component rather than in `useMotionValues`.\r\n */\r\nvar MountComponent = function (_a) {\r\n    var ref = _a.innerRef, values = _a.values, isStatic = _a.isStatic;\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(ref.current instanceof Element, \"No `ref` found. Ensure components created with `motion.custom` forward refs using `React.forwardRef`\");\r\n        var domStyler = Object(stylefire__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(ref.current, {\r\n            preparseOutput: false,\r\n            enableHardwareAcceleration: !isStatic,\r\n        });\r\n        values.mount(function (key, value) {\r\n            domStyler.set(key, value);\r\n            if (syncRenderSession.isOpen()) {\r\n                syncRenderSession.push(domStyler);\r\n            }\r\n        });\r\n        return function () { return values.unmount(); };\r\n    }, []);\r\n    return null;\r\n};\r\nvar Mount = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"memo\"])(MountComponent);\n\nvar createValueResolver = function (resolver) { return function (values) {\r\n    var resolvedValues = {};\r\n    values.forEach(function (value, key) { return (resolvedValues[key] = resolver(value)); });\r\n    return resolvedValues;\r\n}; };\r\nvar resolveCurrent = createValueResolver(function (value) { return value.get(); });\n\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\r\nvar isTransformOriginProp = function (key) { return transformOriginProps.has(key); };\r\nvar buildStyleAttr = function (values, styleProp, isStatic) {\r\n    var motionValueStyles = resolveCurrent(values);\r\n    var transformTemplate = values.getTransformTemplate();\r\n    if (transformTemplate) {\r\n        // If `transform` has been manually set as a string, pass that through the template\r\n        // otherwise pass it forward to Stylefire's style property builder\r\n        motionValueStyles.transform = styleProp.transform\r\n            ? transformTemplate({}, styleProp.transform)\r\n            : transformTemplate;\r\n    }\r\n    return Object(stylefire__WEBPACK_IMPORTED_MODULE_4__[\"buildStyleProperty\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, styleProp), motionValueStyles), !isStatic);\r\n};\r\nvar useMotionStyles = function (values, styleProp, isStatic, transformValues) {\r\n    if (styleProp === void 0) { styleProp = {}; }\r\n    var style = {};\r\n    var prevMotionStyles = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])({}).current;\r\n    for (var key in styleProp) {\r\n        var thisStyle = styleProp[key];\r\n        if (isMotionValue(thisStyle)) {\r\n            // If this is a motion value, add it to our MotionValuesMap\r\n            values.set(key, thisStyle);\r\n        }\r\n        else if (!isStatic &&\r\n            (Object(stylefire__WEBPACK_IMPORTED_MODULE_4__[\"isTransformProp\"])(key) || isTransformOriginProp(key))) {\r\n            // Or if it's a transform prop, create a motion value (or update an existing one)\r\n            // to ensure Stylefire can reconcile all the transform values together.\r\n            // A further iteration on this would be to create a single styler per component that gets\r\n            // used in the DOM renderer's buildStyleAttr *and* animations, then we would only\r\n            // have to convert animating values to `MotionValues` (we could probably remove this entire function).\r\n            // The only architectural consideration is to allow Stylefire to have elements mounted after\r\n            // a styler is created.\r\n            if (!values.has(key)) {\r\n                // If it doesn't exist as a motion value, create it\r\n                values.set(key, motionValue(thisStyle));\r\n            }\r\n            else {\r\n                // Otherwise only update it if it's changed from a previous render\r\n                if (thisStyle !== prevMotionStyles[key]) {\r\n                    var value = values.get(key);\r\n                    value.set(thisStyle);\r\n                }\r\n            }\r\n            prevMotionStyles[key] = thisStyle;\r\n        }\r\n        else {\r\n            style[key] = thisStyle;\r\n        }\r\n    }\r\n    return transformValues ? transformValues(style) : style;\r\n};\n\nvar isKeyframesTarget = function (v) {\r\n    return Array.isArray(v);\r\n};\n\nvar isCustomValue = function (v) {\r\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\r\n};\r\nvar resolveFinalValueInKeyframes = function (v) {\r\n    // TODO maybe throw if v.length - 1 is placeholder token?\r\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\r\n};\n\nvar auto = {\r\n    test: function (v) { return v === \"auto\"; },\r\n    parse: function (v) { return v; },\r\n};\r\nvar dimensionTypes = [style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"number\"], style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"px\"], style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"percent\"], style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"degrees\"], style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"vw\"], style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"vh\"], auto];\r\nvar valueTypes = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spreadArrays\"])(dimensionTypes, [style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"color\"], style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"complex\"]]);\r\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\r\nvar getDimensionValueType = function (v) {\r\n    return dimensionTypes.find(testValueType(v));\r\n};\r\nvar getValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\nvar underDampedSpring = function () { return ({\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restDelta: 0.5,\r\n    restSpeed: 10,\r\n}); };\r\nvar overDampedSpring = function (to) { return ({\r\n    type: \"spring\",\r\n    stiffness: 700,\r\n    damping: to === 0 ? 100 : 35,\r\n}); };\r\nvar linearTween = function () { return ({\r\n    ease: \"linear\",\r\n    duration: 0.3,\r\n}); };\r\nvar keyframes = function (values) { return ({\r\n    type: \"keyframes\",\r\n    duration: 0.8,\r\n    values: values,\r\n}); };\r\nvar defaultTransitions = {\r\n    x: underDampedSpring,\r\n    y: underDampedSpring,\r\n    z: underDampedSpring,\r\n    rotate: underDampedSpring,\r\n    rotateX: underDampedSpring,\r\n    rotateY: underDampedSpring,\r\n    rotateZ: underDampedSpring,\r\n    scaleX: overDampedSpring,\r\n    scaleY: overDampedSpring,\r\n    scale: overDampedSpring,\r\n    opacity: linearTween,\r\n    backgroundColor: linearTween,\r\n    color: linearTween,\r\n    default: overDampedSpring,\r\n};\r\nvar getDefaultTransition = function (valueKey, to) {\r\n    var transitionFactory;\r\n    if (isKeyframesTarget(to)) {\r\n        transitionFactory = keyframes;\r\n    }\r\n    else {\r\n        transitionFactory =\r\n            defaultTransitions[valueKey] || defaultTransitions.default;\r\n    }\r\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ to: to }, transitionFactory(to));\r\n};\n\n/**\r\n * A Popmotion action that accepts a single `to` prop. When it starts, it immediately\r\n * updates with `to` and then completes. By using this we can compose instant transitions\r\n * in with the same logic that applies `delay` or returns a `Promise` etc.\r\n *\r\n * Accepting `duration` is a little bit of a hack that simply defers the completetion of\r\n * the animation until after the duration finishes. This is for situations when you're **only**\r\n * animating non-animatable values and then setting something on `transitionEnd`. Really\r\n * you want this to fire after the \"animation\" finishes, rather than instantly.\r\n *\r\n * ```\r\n * animate={{\r\n *   display: 'block',\r\n *   transitionEnd: { display: 'none' }\r\n * }}\r\n * ```\r\n */\r\nvar just = function (_a) {\r\n    var to = _a.to, duration = _a.duration;\r\n    return Object(popmotion__WEBPACK_IMPORTED_MODULE_7__[\"action\"])(function (_a) {\r\n        var update = _a.update, complete = _a.complete;\r\n        update(to);\r\n        duration ? Object(popmotion__WEBPACK_IMPORTED_MODULE_7__[\"delay\"])(duration).start({ complete: complete }) : complete();\r\n    });\r\n};\n\nvar easingDefinitionToFunction = function (definition) {\r\n    if (Array.isArray(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\r\n        var x1 = definition[0], y1 = definition[1], x2 = definition[2], y2 = definition[3];\r\n        return Object(_popmotion_easing__WEBPACK_IMPORTED_MODULE_8__[\"cubicBezier\"])(x1, y1, x2, y2);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        // Else lookup from table\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(_popmotion_easing__WEBPACK_IMPORTED_MODULE_8__[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\r\n        return _popmotion_easing__WEBPACK_IMPORTED_MODULE_8__[definition];\r\n    }\r\n    return definition;\r\n};\r\nvar isEasingArray = function (ease) {\r\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n};\n\nvar isDurationAnimation = function (v) {\r\n    return v.hasOwnProperty(\"duration\") || v.hasOwnProperty(\"repeatDelay\");\r\n};\n\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\r\nvar isAnimatable = function (key, value) {\r\n    // If the list of keys tat might be non-animatable grows, replace with Set\r\n    if (key === \"zIndex\")\r\n        return false;\r\n    // If it's a number or a keyframes array, we can animate it. We might at some point\r\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\r\n    // but for now lets leave it like this for performance reasons\r\n    if (typeof value === \"number\" || Array.isArray(value))\r\n        return true;\r\n    if (typeof value === \"string\" && // It's animatable if we have a string\r\n        style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"complex\"].test(value) && // And it contains numbers and/or colors\r\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\n\n/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\r\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nvar transitions = { tween: popmotion__WEBPACK_IMPORTED_MODULE_7__[\"tween\"], spring: popmotion__WEBPACK_IMPORTED_MODULE_7__[\"spring\"], keyframes: popmotion__WEBPACK_IMPORTED_MODULE_7__[\"keyframes\"], inertia: popmotion__WEBPACK_IMPORTED_MODULE_7__[\"inertia\"], just: just };\r\nvar transitionOptionParser = {\r\n    tween: function (opts) {\r\n        if (opts.ease) {\r\n            var ease = isEasingArray(opts.ease) ? opts.ease[0] : opts.ease;\r\n            opts.ease = easingDefinitionToFunction(ease);\r\n        }\r\n        return opts;\r\n    },\r\n    keyframes: function (_a) {\r\n        var from = _a.from, to = _a.to, velocity = _a.velocity, opts = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"from\", \"to\", \"velocity\"]);\r\n        if (opts.values && opts.values[0] === null) {\r\n            var values = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spreadArrays\"])(opts.values);\r\n            values[0] = from;\r\n            opts.values = values;\r\n        }\r\n        if (opts.ease) {\r\n            opts.easings = isEasingArray(opts.ease)\r\n                ? opts.ease.map(easingDefinitionToFunction)\r\n                : easingDefinitionToFunction(opts.ease);\r\n        }\r\n        opts.ease = _popmotion_easing__WEBPACK_IMPORTED_MODULE_8__[\"linear\"];\r\n        return opts;\r\n    },\r\n};\r\nvar isTransitionDefined = function (_a) {\r\n    var when = _a.when, delay = _a.delay, delayChildren = _a.delayChildren, staggerChildren = _a.staggerChildren, staggerDirection = _a.staggerDirection, transition = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\"]);\r\n    return Object.keys(transition).length;\r\n};\r\nvar getTransitionDefinition = function (key, to, transitionDefinition) {\r\n    var delay = transitionDefinition ? transitionDefinition.delay : 0;\r\n    // If no object, return default transition\r\n    // A better way to handle this would be to deconstruct out all the shared Orchestration props\r\n    // and see if there's any props remaining\r\n    if (transitionDefinition === undefined ||\r\n        !isTransitionDefined(transitionDefinition)) {\r\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ delay: delay }, getDefaultTransition(key, to));\r\n    }\r\n    var valueTransitionDefinition = transitionDefinition[key] ||\r\n        transitionDefinition.default ||\r\n        transitionDefinition;\r\n    if (valueTransitionDefinition.type === false) {\r\n        return {\r\n            delay: valueTransitionDefinition.hasOwnProperty(\"delay\")\r\n                ? valueTransitionDefinition.delay\r\n                : delay,\r\n            to: isKeyframesTarget(to)\r\n                ? to[to.length - 1]\r\n                : to,\r\n            type: \"just\",\r\n        };\r\n    }\r\n    else if (isKeyframesTarget(to)) {\r\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ values: to, duration: 0.8, delay: delay, ease: \"linear\" }, valueTransitionDefinition), { \r\n            // This animation must be keyframes if we're animating through an array\r\n            type: \"keyframes\" });\r\n    }\r\n    else {\r\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ type: \"tween\", to: to,\r\n            delay: delay }, valueTransitionDefinition);\r\n    }\r\n};\r\nvar preprocessOptions = function (type, opts) {\r\n    return transitionOptionParser[type]\r\n        ? transitionOptionParser[type](opts)\r\n        : opts;\r\n};\r\nvar getAnimation = function (key, value, target, transition) {\r\n    var origin = value.get();\r\n    var isOriginAnimatable = isAnimatable(key, origin);\r\n    var isTargetAnimatable = isAnimatable(key, target);\r\n    // TODO we could probably improve this check to ensure both values are of the same type -\r\n    // for instance 100 to #fff. This might live better in Popmotion.\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"warning\"])(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \" + target + \". \\\"\" + origin + \"\\\" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\r\n    // Parse the `transition` prop and return options for the Popmotion animation\r\n    var _a = getTransitionDefinition(key, target, transition), _b = _a.type, type = _b === void 0 ? \"tween\" : _b, transitionDefinition = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"type\"]);\r\n    // If this is an animatable pair of values, return an animation, otherwise use `just`\r\n    var actionFactory = isOriginAnimatable && isTargetAnimatable\r\n        ? transitions[type]\r\n        : just;\r\n    var opts = preprocessOptions(type, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ from: origin, velocity: value.getVelocity() }, transitionDefinition));\r\n    // Convert duration from Framer Motion's seconds into Popmotion's milliseconds\r\n    if (isDurationAnimation(opts)) {\r\n        if (opts.duration) {\r\n            opts.duration = secondsToMilliseconds(opts.duration);\r\n        }\r\n        if (opts.repeatDelay) {\r\n            opts.repeatDelay = secondsToMilliseconds(opts.repeatDelay);\r\n        }\r\n    }\r\n    return [actionFactory, opts];\r\n};\r\n/**\r\n * Start animation on a value. This function completely encapsulates Popmotion-specific logic.\r\n *\r\n * @internal\r\n */\r\nfunction startAnimation(key, value, target, _a) {\r\n    var _b = _a.delay, delay$1 = _b === void 0 ? 0 : _b, transition = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"delay\"]);\r\n    return value.start(function (complete) {\r\n        var activeAnimation;\r\n        var _a = getAnimation(key, value, target, transition), animationFactory = _a[0], _b = _a[1], valueDelay = _b.delay, options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_b, [\"delay\"]);\r\n        if (valueDelay !== undefined) {\r\n            delay$1 = valueDelay;\r\n        }\r\n        var animate = function () {\r\n            var animation = animationFactory(options);\r\n            // Bind animation opts to animation\r\n            activeAnimation = animation.start({\r\n                update: function (v) { return value.set(v); },\r\n                complete: complete,\r\n            });\r\n        };\r\n        // If we're delaying this animation, only resolve it **after** the delay to\r\n        // ensure the value's resolve velocity is up-to-date.\r\n        if (delay$1) {\r\n            activeAnimation = Object(popmotion__WEBPACK_IMPORTED_MODULE_7__[\"delay\"])(secondsToMilliseconds(delay$1)).start({\r\n                complete: animate,\r\n            });\r\n        }\r\n        else {\r\n            animate();\r\n        }\r\n        return function () {\r\n            if (activeAnimation)\r\n                activeAnimation.stop();\r\n        };\r\n    });\r\n}\n\n/**\r\n * Get the current value of every `MotionValue`\r\n * @param values -\r\n */\r\nvar getCurrent = function (values) {\r\n    var current = {};\r\n    values.forEach(function (value, key) { return (current[key] = value.get()); });\r\n    return current;\r\n};\r\n/**\r\n * Get the current velocity of every `MotionValue`\r\n * @param values -\r\n */\r\nvar getVelocity = function (values) {\r\n    var velocity = {};\r\n    values.forEach(function (value, key) { return (velocity[key] = value.getVelocity()); });\r\n    return velocity;\r\n};\r\n/**\r\n * Check if value is a function that returns a `Target`. A generic typeof === 'function'\r\n * check, just helps with typing.\r\n * @param p -\r\n */\r\nvar isTargetResolver = function (p) {\r\n    return typeof p === \"function\";\r\n};\r\n/**\r\n * Check if value is a list of variant labels\r\n * @param v -\r\n */\r\nvar isVariantLabels = function (v) { return Array.isArray(v); };\r\n/**\r\n * Check if value is a numerical string, ie \"100\" or \"100px\"\r\n */\r\nvar isNumericalString = function (v) { return /^\\d*\\.?\\d+$/.test(v); };\r\n/**\r\n * Control animations for a single component\r\n *\r\n * @internal\r\n */\r\nvar ValueAnimationControls = /** @class */ (function () {\r\n    function ValueAnimationControls(_a) {\r\n        var _this = this;\r\n        var values = _a.values, readValueFromSource = _a.readValueFromSource, makeTargetAnimatable = _a.makeTargetAnimatable;\r\n        /**\r\n         * A reference to the component's latest props. We could probably ditch this in\r\n         * favour to a reference to the `custom` prop now we don't send all props through\r\n         * to target resolvers.\r\n         */\r\n        this.props = {};\r\n        /**\r\n         * The component's variants, as provided by `variants`\r\n         */\r\n        this.variants = {};\r\n        /**\r\n         * A set of values that we animate back to when a value is cleared of all overrides.\r\n         */\r\n        this.baseTarget = {};\r\n        /**\r\n         * A series of target overrides that we can animate to/from when overrides are set/cleared.\r\n         */\r\n        this.overrides = [];\r\n        /**\r\n         * A series of target overrides as they were originally resolved.\r\n         */\r\n        this.resolvedOverrides = [];\r\n        /**\r\n         * A Set of currently active override indexes\r\n         */\r\n        this.activeOverrides = new Set();\r\n        /**\r\n         * A Set of value keys that are currently animating.\r\n         */\r\n        this.isAnimating = new Set();\r\n        /**\r\n         * Check if the associated `MotionValueMap` has a key with the provided string.\r\n         * Pre-bound to the class so we can provide directly to the `filter` in `checkForNewValues`.\r\n         */\r\n        this.hasValue = function (key) { return !_this.values.has(key); };\r\n        this.values = values;\r\n        this.readValueFromSource = readValueFromSource;\r\n        this.makeTargetAnimatable = makeTargetAnimatable;\r\n        this.values.forEach(function (value, key) { return (_this.baseTarget[key] = value.get()); });\r\n    }\r\n    /**\r\n     * Set the reference to the component's props.\r\n     * @param props -\r\n     */\r\n    ValueAnimationControls.prototype.setProps = function (props) {\r\n        this.props = props;\r\n    };\r\n    /**\r\n     * Set the reference to the component's variants\r\n     * @param variants -\r\n     */\r\n    ValueAnimationControls.prototype.setVariants = function (variants) {\r\n        if (variants)\r\n            this.variants = variants;\r\n    };\r\n    /**\r\n     * Set the component's default transition\r\n     * @param transition -\r\n     */\r\n    ValueAnimationControls.prototype.setDefaultTransition = function (transition) {\r\n        if (transition)\r\n            this.defaultTransition = transition;\r\n    };\r\n    /**\r\n     * Set motion values without animation.\r\n     *\r\n     * @param definition -\r\n     * @param isActive -\r\n     */\r\n    ValueAnimationControls.prototype.setValues = function (definition, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.isActive, isActive = _c === void 0 ? new Set() : _c, priority = _b.priority;\r\n        var _d = this.resolveVariant(definition), target = _d.target, transitionEnd = _d.transitionEnd;\r\n        target = this.transformValues(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, target), transitionEnd));\r\n        return Object.keys(target).forEach(function (key) {\r\n            if (isActive.has(key))\r\n                return;\r\n            isActive.add(key);\r\n            if (target) {\r\n                var targetValue = resolveFinalValueInKeyframes(target[key]);\r\n                if (_this.values.has(key)) {\r\n                    var value = _this.values.get(key);\r\n                    value && value.set(targetValue);\r\n                }\r\n                else {\r\n                    _this.values.set(key, motionValue(targetValue));\r\n                }\r\n                if (!priority)\r\n                    _this.baseTarget[key] = targetValue;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Allows `transformValues` to be set by a component that allows us to\r\n     * transform the values in a given `Target`. This allows Framer Library\r\n     * to extend Framer Motion to animate `Color` variables etc. Currently we have\r\n     * to manually support these extended types here in Framer Motion.\r\n     *\r\n     * @param values -\r\n     */\r\n    ValueAnimationControls.prototype.transformValues = function (values) {\r\n        var transformValues = this.props.transformValues;\r\n        return transformValues ? transformValues(values) : values;\r\n    };\r\n    /**\r\n     * Check a `Target` for new values we haven't animated yet, and add them\r\n     * to the `MotionValueMap`.\r\n     *\r\n     * Currently there's functionality here that is DOM-specific, we should allow\r\n     * this functionality to be injected by the factory that creates DOM-specific\r\n     * components.\r\n     *\r\n     * @param target -\r\n     */\r\n    ValueAnimationControls.prototype.checkForNewValues = function (target) {\r\n        var newValueKeys = Object.keys(target).filter(this.hasValue);\r\n        var numNewValues = newValueKeys.length;\r\n        if (!numNewValues)\r\n            return;\r\n        for (var i = 0; i < numNewValues; i++) {\r\n            var key = newValueKeys[i];\r\n            var targetValue = target[key];\r\n            var value = null;\r\n            // If this is a keyframes value, we can attempt to use the first value in the\r\n            // array as that's going to be the first value of the animation anyway\r\n            if (Array.isArray(targetValue)) {\r\n                value = targetValue[0];\r\n            }\r\n            // If it isn't a keyframes or the first keyframes value was set as `null`, read the\r\n            // value from the DOM. It might be worth investigating whether to check props (for SVG)\r\n            // or props.style (for HTML) if the value exists there before attempting to read.\r\n            if (value === null) {\r\n                value = this.readValueFromSource(key);\r\n                Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(value !== null, \"No initial value for \\\"\" + key + \"\\\" can be inferred. Ensure an initial value for \\\"\" + key + \"\\\" is defined on the component.\");\r\n            }\r\n            if (typeof value === \"string\" && isNumericalString(value)) {\r\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\r\n                value = parseFloat(value);\r\n            }\r\n            else if (!getValueType(value) && style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"complex\"].test(targetValue)) {\r\n                // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\r\n                value = style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"complex\"].getAnimatableNone(targetValue);\r\n            }\r\n            this.values.set(key, motionValue(value));\r\n            this.baseTarget[key] = value;\r\n        }\r\n    };\r\n    /**\r\n     * Resolve a variant from its label or resolver into an actual `Target` we can animate to.\r\n     * @param variant -\r\n     */\r\n    ValueAnimationControls.prototype.resolveVariant = function (variant) {\r\n        if (!variant) {\r\n            return {\r\n                target: undefined,\r\n                transition: undefined,\r\n                transitionEnd: undefined,\r\n            };\r\n        }\r\n        if (isTargetResolver(variant)) {\r\n            // resolve current and velocity\r\n            variant = variant(this.props.custom, getCurrent(this.values), getVelocity(this.values));\r\n        }\r\n        var _a = variant.transition, transition = _a === void 0 ? this.defaultTransition : _a, transitionEnd = variant.transitionEnd, target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(variant, [\"transition\", \"transitionEnd\"]);\r\n        return { transition: transition, transitionEnd: transitionEnd, target: target };\r\n    };\r\n    /**\r\n     * Get the highest active override priority index\r\n     */\r\n    ValueAnimationControls.prototype.getHighestPriority = function () {\r\n        if (!this.activeOverrides.size)\r\n            return 0;\r\n        return Math.max.apply(Math, Array.from(this.activeOverrides));\r\n    };\r\n    /**\r\n     * Set an override. We add this layer of indirection so if, for instance, a tap gesture\r\n     * starts and overrides a hover gesture, when we clear the tap gesture and fallback to the\r\n     * hover gesture, if that hover gesture has changed in the meantime we can go to that rather\r\n     * than the one that was resolved when the hover gesture animation started.\r\n     *\r\n     * @param definition -\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.setOverride = function (definition, overrideIndex) {\r\n        this.overrides[overrideIndex] = definition;\r\n        if (this.children) {\r\n            this.children.forEach(function (child) {\r\n                return child.setOverride(definition, overrideIndex);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Start an override animation.\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.startOverride = function (overrideIndex) {\r\n        var override = this.overrides[overrideIndex];\r\n        if (override) {\r\n            return this.start(override, { priority: overrideIndex });\r\n        }\r\n    };\r\n    /**\r\n     * Clear an override. We check every value we animated to in this override to see if\r\n     * its present on any lower-priority overrides. If not, we animate it back to its base target.\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.clearOverride = function (overrideIndex) {\r\n        var _this = this;\r\n        if (this.children) {\r\n            this.children.forEach(function (child) { return child.clearOverride(overrideIndex); });\r\n        }\r\n        var override = this.overrides[overrideIndex];\r\n        if (!override)\r\n            return;\r\n        this.activeOverrides.delete(overrideIndex);\r\n        var highest = this.getHighestPriority();\r\n        this.resetIsAnimating();\r\n        if (highest) {\r\n            var highestOverride = this.overrides[highest];\r\n            highestOverride && this.startOverride(highest);\r\n        }\r\n        // Figure out which remaining values were affected by the override and animate those\r\n        var overrideTarget = this.resolvedOverrides[overrideIndex];\r\n        if (!overrideTarget)\r\n            return;\r\n        var remainingValues = {};\r\n        for (var key in this.baseTarget) {\r\n            if (overrideTarget[key] !== undefined) {\r\n                remainingValues[key] = this.baseTarget[key];\r\n            }\r\n        }\r\n        this.onStart();\r\n        this.animate(remainingValues).then(function () { return _this.onComplete(); });\r\n    };\r\n    /**\r\n     * Apply a target/variant without any animation\r\n     */\r\n    ValueAnimationControls.prototype.apply = function (definition) {\r\n        if (Array.isArray(definition)) {\r\n            return this.applyVariantLabels(definition);\r\n        }\r\n        else if (typeof definition === \"string\") {\r\n            return this.applyVariantLabels([definition]);\r\n        }\r\n        else {\r\n            this.setValues(definition);\r\n        }\r\n    };\r\n    /**\r\n     * Apply variant labels without animation\r\n     */\r\n    ValueAnimationControls.prototype.applyVariantLabels = function (variantLabelList) {\r\n        var _this = this;\r\n        var isActive = new Set();\r\n        var reversedList = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spreadArrays\"])(variantLabelList).reverse();\r\n        reversedList.forEach(function (key) {\r\n            var _a = _this.resolveVariant(_this.variants[key]), target = _a.target, transitionEnd = _a.transitionEnd;\r\n            if (transitionEnd) {\r\n                _this.setValues(transitionEnd, { isActive: isActive });\r\n            }\r\n            if (target) {\r\n                _this.setValues(target, { isActive: isActive });\r\n            }\r\n            if (_this.children && _this.children.size) {\r\n                _this.children.forEach(function (child) {\r\n                    return child.applyVariantLabels(variantLabelList);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    ValueAnimationControls.prototype.start = function (definition, opts) {\r\n        var _this = this;\r\n        if (opts === void 0) { opts = {}; }\r\n        if (opts.priority) {\r\n            this.activeOverrides.add(opts.priority);\r\n        }\r\n        this.resetIsAnimating(opts.priority);\r\n        var animation;\r\n        if (isVariantLabels(definition)) {\r\n            animation = this.animateVariantLabels(definition, opts);\r\n        }\r\n        else if (typeof definition === \"string\") {\r\n            animation = this.animateVariant(definition, opts);\r\n        }\r\n        else {\r\n            animation = this.animate(definition, opts);\r\n        }\r\n        this.onStart();\r\n        return animation.then(function () { return _this.onComplete(); });\r\n    };\r\n    ValueAnimationControls.prototype.animate = function (animationDefinition, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.delay, delay = _c === void 0 ? 0 : _c, _d = _b.priority, priority = _d === void 0 ? 0 : _d, transitionOverride = _b.transitionOverride;\r\n        var _e = this.resolveVariant(animationDefinition), target = _e.target, transition = _e.transition, transitionEnd = _e.transitionEnd;\r\n        if (transitionOverride) {\r\n            transition = transitionOverride;\r\n        }\r\n        if (!target)\r\n            return Promise.resolve();\r\n        target = this.transformValues(target);\r\n        if (transitionEnd) {\r\n            transitionEnd = this.transformValues(transitionEnd);\r\n        }\r\n        this.checkForNewValues(target);\r\n        if (this.makeTargetAnimatable) {\r\n            var animatable = this.makeTargetAnimatable(target, transitionEnd);\r\n            target = animatable.target;\r\n            transitionEnd = animatable.transitionEnd;\r\n        }\r\n        if (priority) {\r\n            this.resolvedOverrides[priority] = target;\r\n        }\r\n        this.checkForNewValues(target);\r\n        var animations = [];\r\n        for (var key in target) {\r\n            var value = this.values.get(key);\r\n            if (!value || !target || target[key] === undefined)\r\n                continue;\r\n            var valueTarget = target[key];\r\n            if (!priority) {\r\n                this.baseTarget[key] = resolveFinalValueInKeyframes(valueTarget);\r\n            }\r\n            if (this.isAnimating.has(key))\r\n                continue;\r\n            this.isAnimating.add(key);\r\n            animations.push(startAnimation(key, value, valueTarget, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ delay: delay }, transition)));\r\n        }\r\n        var allAnimations = Promise.all(animations);\r\n        return transitionEnd\r\n            ? allAnimations.then(function () {\r\n                _this.setValues(transitionEnd, { priority: priority });\r\n            })\r\n            : allAnimations;\r\n    };\r\n    ValueAnimationControls.prototype.animateVariantLabels = function (variantLabels, opts) {\r\n        var _this = this;\r\n        var animations = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spreadArrays\"])(variantLabels).reverse()\r\n            .map(function (label) { return _this.animateVariant(label, opts); });\r\n        return Promise.all(animations);\r\n    };\r\n    ValueAnimationControls.prototype.animateVariant = function (variantLabel, opts) {\r\n        var _this = this;\r\n        var when = false;\r\n        var delayChildren = 0;\r\n        var staggerChildren = 0;\r\n        var staggerDirection = 1;\r\n        var priority = (opts && opts.priority) || 0;\r\n        var variant = this.variants[variantLabel];\r\n        var getAnimations = variant\r\n            ? function () { return _this.animate(variant, opts); }\r\n            : function () { return Promise.resolve(); };\r\n        var getChildrenAnimations = this.children\r\n            ? function () {\r\n                return _this.animateChildren(variantLabel, delayChildren, staggerChildren, staggerDirection, priority);\r\n            }\r\n            : function () { return Promise.resolve(); };\r\n        if (variant && this.children) {\r\n            var transition = this.resolveVariant(variant).transition;\r\n            if (transition) {\r\n                when = transition.when || when;\r\n                delayChildren = transition.delayChildren || delayChildren;\r\n                staggerChildren = transition.staggerChildren || staggerChildren;\r\n                staggerDirection =\r\n                    transition.staggerDirection || staggerDirection;\r\n            }\r\n        }\r\n        if (when) {\r\n            var _a = when === \"beforeChildren\"\r\n                ? [getAnimations, getChildrenAnimations]\r\n                : [getChildrenAnimations, getAnimations], first = _a[0], last = _a[1];\r\n            return first().then(last);\r\n        }\r\n        else {\r\n            return Promise.all([getAnimations(), getChildrenAnimations()]);\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.animateChildren = function (variantLabel, delayChildren, staggerChildren, staggerDirection, priority) {\r\n        if (delayChildren === void 0) { delayChildren = 0; }\r\n        if (staggerChildren === void 0) { staggerChildren = 0; }\r\n        if (staggerDirection === void 0) { staggerDirection = 1; }\r\n        if (priority === void 0) { priority = 0; }\r\n        if (!this.children) {\r\n            return Promise.resolve();\r\n        }\r\n        var animations = [];\r\n        var maxStaggerDuration = (this.children.size - 1) * staggerChildren;\r\n        var generateStaggerDuration = staggerDirection === 1\r\n            ? function (i) { return i * staggerChildren; }\r\n            : function (i) { return maxStaggerDuration - i * staggerChildren; };\r\n        Array.from(this.children).forEach(function (childControls, i) {\r\n            var animation = childControls.animateVariant(variantLabel, {\r\n                priority: priority,\r\n                delay: delayChildren + generateStaggerDuration(i),\r\n            });\r\n            animations.push(animation);\r\n        });\r\n        return Promise.all(animations);\r\n    };\r\n    ValueAnimationControls.prototype.onStart = function () {\r\n        var onAnimationStart = this.props.onAnimationStart;\r\n        onAnimationStart && onAnimationStart();\r\n    };\r\n    ValueAnimationControls.prototype.onComplete = function () {\r\n        var onAnimationComplete = this.props.onAnimationComplete;\r\n        onAnimationComplete && onAnimationComplete();\r\n    };\r\n    ValueAnimationControls.prototype.checkOverrideIsAnimating = function (priority) {\r\n        var numOverrides = this.overrides.length;\r\n        for (var i = priority + 1; i < numOverrides; i++) {\r\n            var resolvedOverride = this.resolvedOverrides[i];\r\n            if (resolvedOverride) {\r\n                for (var key in resolvedOverride) {\r\n                    this.isAnimating.add(key);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.resetIsAnimating = function (priority) {\r\n        if (priority === void 0) { priority = 0; }\r\n        this.isAnimating.clear();\r\n        // If this isn't the highest priority gesture, block the animation\r\n        // of anything that's currently being animated\r\n        if (priority < this.getHighestPriority()) {\r\n            this.checkOverrideIsAnimating(priority);\r\n        }\r\n        if (this.children) {\r\n            this.children.forEach(function (child) { return child.resetIsAnimating(priority); });\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.stop = function () {\r\n        this.values.forEach(function (value) { return value.stop(); });\r\n    };\r\n    /**\r\n     * Add the controls of a child component.\r\n     * @param controls -\r\n     */\r\n    ValueAnimationControls.prototype.addChild = function (controls) {\r\n        if (!this.children) {\r\n            this.children = new Set();\r\n        }\r\n        this.children.add(controls);\r\n        // We set child overrides when `setOverride` is called, but also have to do it here\r\n        // as the first time `setOverride` is called all the children might not have been added yet.\r\n        this.overrides.forEach(function (override, i) {\r\n            override && controls.setOverride(override, i);\r\n        });\r\n    };\r\n    ValueAnimationControls.prototype.removeChild = function (controls) {\r\n        if (!this.children) {\r\n            return;\r\n        }\r\n        this.children.delete(controls);\r\n    };\r\n    ValueAnimationControls.prototype.resetChildren = function () {\r\n        if (this.children)\r\n            this.children.clear();\r\n    };\r\n    return ValueAnimationControls;\r\n}());\n\n/**\r\n * Use callback either only on the initial render or on all renders. In concurrent mode\r\n * the \"initial\" render might run multiple times\r\n *\r\n * @param callback - Callback to run\r\n * @param isInitialOnly - Set to `true` to only run on initial render, or `false` for all renders. Defaults to `false`.\r\n *\r\n * @public\r\n */\r\nfunction useInitialOrEveryRender(callback, isInitialOnly) {\r\n    if (isInitialOnly === void 0) { isInitialOnly = false; }\r\n    var isInitialRender = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(true);\r\n    if (!isInitialOnly || (isInitialOnly && isInitialRender.current)) {\r\n        callback();\r\n    }\r\n    isInitialRender.current = false;\r\n}\n\n/**\r\n * Control animations on one or more components.\r\n *\r\n * @public\r\n */\r\nvar AnimationControls = /** @class */ (function () {\r\n    function AnimationControls() {\r\n        /**\r\n         * Track whether the host component has mounted.\r\n         *\r\n         * @internal\r\n         */\r\n        this.hasMounted = false;\r\n        /**\r\n         * Pending animations that are started before a component is mounted.\r\n         *\r\n         * @internal\r\n         */\r\n        this.pendingAnimations = [];\r\n        /**\r\n         * A collection of linked component animation controls.\r\n         *\r\n         * @internal\r\n         */\r\n        this.componentControls = new Set();\r\n    }\r\n    /**\r\n     * Set variants on this and all child components.\r\n     *\r\n     * @param variants - The variants to set\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.setVariants = function (variants) {\r\n        this.variants = variants;\r\n        this.componentControls.forEach(function (controls) {\r\n            return controls.setVariants(variants);\r\n        });\r\n    };\r\n    /**\r\n     * Set a default transition on this and all child components\r\n     *\r\n     * @param transition - The default transition to set\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.setDefaultTransition = function (transition) {\r\n        this.defaultTransition = transition;\r\n        this.componentControls.forEach(function (controls) {\r\n            return controls.setDefaultTransition(transition);\r\n        });\r\n    };\r\n    /**\r\n     * Subscribes a component's animation controls to this.\r\n     *\r\n     * @param controls - The controls to subscribe\r\n     * @returns An unsubscribe function.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.subscribe = function (controls) {\r\n        var _this = this;\r\n        this.componentControls.add(controls);\r\n        if (this.variants)\r\n            controls.setVariants(this.variants);\r\n        if (this.defaultTransition)\r\n            controls.setDefaultTransition(this.defaultTransition);\r\n        return function () { return _this.componentControls.delete(controls); };\r\n    };\r\n    /**\r\n     * Starts an animation on all linked components.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * controls.start(\"variantLabel\")\r\n     * controls.start({\r\n     *   x: 0,\r\n     *   transition: { duration: 1 }\r\n     * })\r\n     * ```\r\n     *\r\n     * @param definition - Properties or variant label to animate to\r\n     * @param transition - Optional `transtion` to apply to a variant\r\n     * @returns - A `Promise` that resolves when all animations have completed.\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.start = function (definition, transitionOverride) {\r\n        var _this = this;\r\n        if (this.hasMounted) {\r\n            var animations_1 = [];\r\n            this.componentControls.forEach(function (controls) {\r\n                var animation = controls.start(definition, {\r\n                    transitionOverride: transitionOverride,\r\n                });\r\n                animations_1.push(animation);\r\n            });\r\n            return Promise.all(animations_1);\r\n        }\r\n        else {\r\n            return new Promise(function (resolve) {\r\n                _this.pendingAnimations.push({\r\n                    animation: [definition, transitionOverride],\r\n                    resolve: resolve,\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Instantly set to a set of properties or a variant.\r\n     *\r\n     * ```jsx\r\n     * // With properties\r\n     * controls.set({ opacity: 0 })\r\n     *\r\n     * // With variants\r\n     * controls.set(\"hidden\")\r\n     * ```\r\n     *\r\n     * @internalremarks\r\n     * We could perform a similar trick to `.start` where this can be called before mount\r\n     * and we maintain a list of of pending actions that get applied on mount. But the\r\n     * expectation of `set` is that it happens synchronously and this would be difficult\r\n     * to do before any children have even attached themselves. It's also poor practise\r\n     * and we should discourage render-synchronous `.start` calls rather than lean into this.\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.set = function (definition) {\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(this.hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\r\n        return this.componentControls.forEach(function (controls) {\r\n            return controls.apply(definition);\r\n        });\r\n    };\r\n    /**\r\n     * Stops animations on all linked components.\r\n     *\r\n     * ```jsx\r\n     * controls.stop()\r\n     * ```\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.stop = function () {\r\n        this.componentControls.forEach(function (controls) { return controls.stop(); });\r\n    };\r\n    /**\r\n     * Initialises the animation controls.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.mount = function () {\r\n        var _this = this;\r\n        this.hasMounted = true;\r\n        this.pendingAnimations.forEach(function (_a) {\r\n            var animation = _a.animation, resolve = _a.resolve;\r\n            return _this.start.apply(_this, animation).then(resolve);\r\n        });\r\n    };\r\n    /**\r\n     * Stops all child animations when the host component unmounts.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.unmount = function () {\r\n        this.hasMounted = false;\r\n        this.stop();\r\n    };\r\n    return AnimationControls;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nvar animationControls = function () { return new AnimationControls(); };\n\nvar PresenceContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createContext\"])(null);\n\n/**\r\n * @internal\r\n */\r\nvar MotionContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createContext\"])({\r\n    static: false,\r\n});\r\nvar isVariantLabel = function (v) {\r\n    return typeof v === \"string\" || Array.isArray(v);\r\n};\r\nvar isAnimationControls = function (v) {\r\n    return v instanceof AnimationControls;\r\n};\r\n/**\r\n * Set up the context for children motion components.\r\n *\r\n * We also use this opportunity to apply `initial` values\r\n */\r\nvar useMotionContext = function (parentContext, controls, values, isStatic, _a) {\r\n    if (isStatic === void 0) { isStatic = false; }\r\n    var initial = _a.initial, animate = _a.animate, variants = _a.variants, whileTap = _a.whileTap, whileHover = _a.whileHover;\r\n    var _b;\r\n    var presenceContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(PresenceContext);\r\n    // Override initial with that from a parent context, if defined\r\n    if (((_b = presenceContext) === null || _b === void 0 ? void 0 : _b.initial) !== undefined) {\r\n        initial = presenceContext.initial;\r\n    }\r\n    var initialState;\r\n    if (initial === false && !isAnimationControls(animate)) {\r\n        initialState = animate;\r\n    }\r\n    else if (typeof initial !== \"boolean\") {\r\n        initialState = initial;\r\n    }\r\n    // Track mounted status so children can detect whether they were present during their\r\n    // parent's first render\r\n    var hasMounted = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(false);\r\n    // We propagate this component's ValueAnimationControls *if* we're being provided variants,\r\n    // if we're being used to control variants, or if we're being passed animation controls.\r\n    // Otherwise this component should be \"invisible\" to variant propagation. This is a slight concession\r\n    // to Framer X where every `Frame` is a `motion` component and it might be if we change that in the future\r\n    // that this restriction is removed.\r\n    var shouldPropagateControls = variants ||\r\n        isVariantLabel(animate) ||\r\n        isVariantLabel(whileTap) ||\r\n        isVariantLabel(whileHover) ||\r\n        isAnimationControls(animate);\r\n    // If this component's `initial` prop is a variant label, propagate it. Otherwise pass the parent's.\r\n    var targetInitial = isVariantLabel(initialState)\r\n        ? initialState\r\n        : parentContext.initial;\r\n    // If this is a variant tree we need to propagate the `animate` prop in case new children are added after\r\n    // the tree initially animates.\r\n    var targetAnimate = isVariantLabel(animate)\r\n        ? animate\r\n        : parentContext.animate;\r\n    // Only allow `initial` to trigger context re-renders if this is a `static` component (ie we're on the Framer canvas)\r\n    // or in another non-animation/interaction environment.\r\n    var initialDependency = isStatic ? targetInitial : null;\r\n    // Only allow `animate` to trigger context re-renders if it's a variant label. If this is an array of\r\n    // variant labels there's probably an optimisation to deep-compare but it might be an over-optimisation.\r\n    // We want to do this as we rely on React's component rendering order each render cycle to determine\r\n    // the new order of any child components for the `staggerChildren` functionality.\r\n    var animateDependency = shouldPropagateControls && isVariantLabel(targetAnimate)\r\n        ? targetAnimate\r\n        : null;\r\n    // The context to provide to the child. We `useMemo` because although `controls` and `initial` are\r\n    // unlikely to change, by making the context an object it'll be considered a new value every render.\r\n    // So all child motion components will re-render as a result.\r\n    var context = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useMemo\"])(function () { return ({\r\n        controls: shouldPropagateControls\r\n            ? controls\r\n            : parentContext.controls,\r\n        initial: targetInitial,\r\n        animate: targetAnimate,\r\n        values: values,\r\n        hasMounted: hasMounted,\r\n        isReducedMotion: parentContext.isReducedMotion,\r\n    }); }, [initialDependency, animateDependency, parentContext.isReducedMotion]);\r\n    // Update the `static` property every render. This is unlikely to change but also essentially free.\r\n    context.static = isStatic;\r\n    // Set initial state. If this is a static component (ie in Framer canvas), respond to updates\r\n    // in `initial`.\r\n    useInitialOrEveryRender(function () {\r\n        var initialToApply = initialState || parentContext.initial;\r\n        initialToApply && controls.apply(initialToApply);\r\n    }, !isStatic);\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        hasMounted.current = true;\r\n    }, []);\r\n    return context;\r\n};\n\n/**\r\n * Creates an imperative set of controls to trigger animations.\r\n *\r\n * This allows a consolidated, uniform API for animations, to be triggered by other APIs like the `animate` prop, or the gesture handlers.\r\n *\r\n * @param values\r\n * @param props\r\n * @param ref\r\n * @param subscribeToParentControls\r\n *\r\n * @internal\r\n */\r\nfunction useValueAnimationControls(config, props, subscribeToParentControls) {\r\n    var variants = props.variants, transition = props.transition;\r\n    var parentControls = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionContext).controls;\r\n    var presenceContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(PresenceContext);\r\n    var controls = useConstant(function () { return new ValueAnimationControls(config); });\r\n    // Reset and resubscribe children every render to ensure stagger order is correct\r\n    if (!presenceContext || presenceContext.isPresent) {\r\n        controls.resetChildren();\r\n        controls.setProps(props);\r\n        controls.setVariants(variants);\r\n        controls.setDefaultTransition(transition);\r\n    }\r\n    // We have to subscribe to the parent controls within a useEffect rather than during render,\r\n    // as\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        if (subscribeToParentControls && parentControls) {\r\n            parentControls.addChild(controls);\r\n        }\r\n    });\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        return function () {\r\n            // Remove reference to onAnimationComplete from controls. All the MotionValues\r\n            // are unsubscribed from this component separately. We let animations run out\r\n            // as they might be animating other components.\r\n            var onAnimationComplete = props.onAnimationComplete, unmountProps = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(props, [\"onAnimationComplete\"]);\r\n            controls.setProps(unmountProps);\r\n            parentControls && parentControls.removeChild(controls);\r\n        };\r\n    }, []);\r\n    return controls;\r\n}\n\nvar checkShouldInheritVariant = function (_a) {\r\n    var animate = _a.animate, variants = _a.variants, _b = _a.inherit, inherit = _b === void 0 ? true : _b;\r\n    return (inherit &&\r\n        !!variants &&\r\n        (!animate || animate instanceof AnimationControls));\r\n};\n\n/**\r\n * Uses the ref that is passed in, or creates a new one\r\n * @param external - External ref\r\n * @internal\r\n */\r\nfunction useExternalRef(externalRef) {\r\n    // We're conditionally calling `useRef` here which is sort of naughty as hooks\r\n    // shouldn't be called conditionally. However, Framer Motion will break if this\r\n    // condition changes anyway. It might be possible to use an invariant here to\r\n    // make it explicit, but I expect changing `ref` is not normal behaviour.\r\n    var ref = !externalRef || typeof externalRef === \"function\"\r\n        ? Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null)\r\n        : externalRef;\r\n    // Handle `ref` functions. Again, calling the hook conditionally is kind of naughty\r\n    // but `ref` types changing between renders would break Motion anyway. If we receive\r\n    // bug reports about this, we should track the provided ref and throw an invariant\r\n    // rather than move the conditional to inside the useEffect as this will be fired\r\n    // for every Frame component within Framer.\r\n    if (externalRef && typeof externalRef === \"function\") {\r\n        Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n            externalRef(ref.current);\r\n            return function () { return externalRef(null); };\r\n        }, []);\r\n    }\r\n    return ref;\r\n}\n\n/**\r\n * @internal\r\n */\r\nvar createMotionComponent = function (_a) {\r\n    var getValueControlsConfig = _a.getValueControlsConfig, loadFunctionalityComponents = _a.loadFunctionalityComponents, renderComponent = _a.renderComponent;\r\n    function MotionComponent(props, externalRef) {\r\n        var ref = useExternalRef(externalRef);\r\n        var parentContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionContext);\r\n        var isStatic = parentContext.static || props.static || false;\r\n        var values = useMotionValues(props);\r\n        var style = useMotionStyles(values, props.style, isStatic, props.transformValues);\r\n        var shouldInheritVariant = checkShouldInheritVariant(props);\r\n        var controlsConfig = useConstant(function () {\r\n            return getValueControlsConfig(ref, values);\r\n        });\r\n        var controls = useValueAnimationControls(controlsConfig, props, shouldInheritVariant);\r\n        var context = useMotionContext(parentContext, controls, values, isStatic, props);\r\n        var functionality = isStatic\r\n            ? null\r\n            : loadFunctionalityComponents(ref, values, props, parentContext, controls, shouldInheritVariant);\r\n        var renderedComponent = renderComponent(ref, style, values, props, isStatic);\r\n        return (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(react__WEBPACK_IMPORTED_MODULE_1__[\"Fragment\"], null,\r\n            Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(MotionContext.Provider, { value: context }, renderedComponent),\r\n            Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(react__WEBPACK_IMPORTED_MODULE_1__[\"Fragment\"], null,\r\n                Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(Mount, { innerRef: ref, values: values, isStatic: isStatic }),\r\n                functionality)));\r\n    }\r\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"forwardRef\"])(MotionComponent);\r\n};\n\n/**\r\n * @internal\r\n */\r\nvar htmlElements = [\r\n    \"a\",\r\n    \"abbr\",\r\n    \"address\",\r\n    \"area\",\r\n    \"article\",\r\n    \"aside\",\r\n    \"audio\",\r\n    \"b\",\r\n    \"base\",\r\n    \"bdi\",\r\n    \"bdo\",\r\n    \"big\",\r\n    \"blockquote\",\r\n    \"body\",\r\n    \"br\",\r\n    \"button\",\r\n    \"canvas\",\r\n    \"caption\",\r\n    \"cite\",\r\n    \"code\",\r\n    \"col\",\r\n    \"colgroup\",\r\n    \"data\",\r\n    \"datalist\",\r\n    \"dd\",\r\n    \"del\",\r\n    \"details\",\r\n    \"dfn\",\r\n    \"dialog\",\r\n    \"div\",\r\n    \"dl\",\r\n    \"dt\",\r\n    \"em\",\r\n    \"embed\",\r\n    \"fieldset\",\r\n    \"figcaption\",\r\n    \"figure\",\r\n    \"footer\",\r\n    \"form\",\r\n    \"h1\",\r\n    \"h2\",\r\n    \"h3\",\r\n    \"h4\",\r\n    \"h5\",\r\n    \"h6\",\r\n    \"head\",\r\n    \"header\",\r\n    \"hgroup\",\r\n    \"hr\",\r\n    \"html\",\r\n    \"i\",\r\n    \"iframe\",\r\n    \"img\",\r\n    \"input\",\r\n    \"ins\",\r\n    \"kbd\",\r\n    \"keygen\",\r\n    \"label\",\r\n    \"legend\",\r\n    \"li\",\r\n    \"link\",\r\n    \"main\",\r\n    \"map\",\r\n    \"mark\",\r\n    \"menu\",\r\n    \"menuitem\",\r\n    \"meta\",\r\n    \"meter\",\r\n    \"nav\",\r\n    \"noscript\",\r\n    \"object\",\r\n    \"ol\",\r\n    \"optgroup\",\r\n    \"option\",\r\n    \"output\",\r\n    \"p\",\r\n    \"param\",\r\n    \"picture\",\r\n    \"pre\",\r\n    \"progress\",\r\n    \"q\",\r\n    \"rp\",\r\n    \"rt\",\r\n    \"ruby\",\r\n    \"s\",\r\n    \"samp\",\r\n    \"script\",\r\n    \"section\",\r\n    \"select\",\r\n    \"small\",\r\n    \"source\",\r\n    \"span\",\r\n    \"strong\",\r\n    \"style\",\r\n    \"sub\",\r\n    \"summary\",\r\n    \"sup\",\r\n    \"table\",\r\n    \"tbody\",\r\n    \"td\",\r\n    \"textarea\",\r\n    \"tfoot\",\r\n    \"th\",\r\n    \"thead\",\r\n    \"time\",\r\n    \"title\",\r\n    \"tr\",\r\n    \"track\",\r\n    \"u\",\r\n    \"ul\",\r\n    \"var\",\r\n    \"video\",\r\n    \"wbr\",\r\n    \"webview\",\r\n];\r\n/**\r\n * @internal\r\n */\r\nvar svgElements = [\r\n    \"animate\",\r\n    \"circle\",\r\n    \"clipPath\",\r\n    \"defs\",\r\n    \"desc\",\r\n    \"ellipse\",\r\n    \"feBlend\",\r\n    \"feColorMatrix\",\r\n    \"feComponentTransfer\",\r\n    \"feComposite\",\r\n    \"feConvolveMatrix\",\r\n    \"feDiffuseLighting\",\r\n    \"feDisplacementMap\",\r\n    \"feDistantLight\",\r\n    \"feDropShadow\",\r\n    \"feFlood\",\r\n    \"feFuncA\",\r\n    \"feFuncB\",\r\n    \"feFuncG\",\r\n    \"feFuncR\",\r\n    \"feGaussianBlur\",\r\n    \"feImage\",\r\n    \"feMerge\",\r\n    \"feMergeNode\",\r\n    \"feMorphology\",\r\n    \"feOffset\",\r\n    \"fePointLight\",\r\n    \"feSpecularLighting\",\r\n    \"feSpotLight\",\r\n    \"feTile\",\r\n    \"feTurbulence\",\r\n    \"filter\",\r\n    \"foreignObject\",\r\n    \"g\",\r\n    \"image\",\r\n    \"line\",\r\n    \"linearGradient\",\r\n    \"marker\",\r\n    \"mask\",\r\n    \"metadata\",\r\n    \"path\",\r\n    \"pattern\",\r\n    \"polygon\",\r\n    \"polyline\",\r\n    \"radialGradient\",\r\n    \"rect\",\r\n    \"stop\",\r\n    \"svg\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"text\",\r\n    \"textPath\",\r\n    \"tspan\",\r\n    \"use\",\r\n    \"view\",\r\n];\n\n/**\r\n * @internal\r\n */\r\nvar MotionPluginContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createContext\"])({\r\n    transformPagePoint: function (p) { return p; },\r\n});\r\n/**\r\n * @remarks For now I think this should remain a private API for our own use\r\n * until we can figure out a nicer way of allowing people to add these\r\n *\r\n * @internal\r\n */\r\nfunction MotionPlugins(_a) {\r\n    var children = _a.children, props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"children\"]);\r\n    var pluginContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionPluginContext);\r\n    var value = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, pluginContext)).current;\r\n    // Mutative to prevent triggering rerenders in all listening\r\n    // components every time this component renders\r\n    for (var key in props) {\r\n        value[key] = props[key];\r\n    }\r\n    return (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(MotionPluginContext.Provider, { value: value }, children));\r\n}\n\nfunction useUnmountEffect(callback) {\r\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () { return function () { return callback(); }; }, []);\r\n}\n\nfunction addDomEvent(target, eventName, handler, options) {\r\n    if (!handler)\r\n        return;\r\n    target.addEventListener(eventName, handler, options);\r\n    return function () { return target.removeEventListener(eventName, handler, options); };\r\n}\r\n/**\r\n * Attaches an event listener directly to the provided DOM element.\r\n *\r\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\r\n * event handlers.\r\n *\r\n * ```jsx\r\n * const ref = useRef(null)\r\n *\r\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\r\n *\r\n * return <div ref={ref} />\r\n * ```\r\n *\r\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\r\n * @param eventName - Name of the event you want listen for.\r\n * @param handler - Function to fire when receiving the event.\r\n * @param options - Options to pass to `Event.addEventListener`.\r\n *\r\n * @public\r\n */\r\nfunction useDomEvent(ref, eventName, handler, options) {\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        var element = ref.current;\r\n        if (handler && element) {\r\n            return addDomEvent(element, eventName, handler, options);\r\n        }\r\n    }, [ref, eventName, handler, options]);\r\n}\n\nfunction isMouseEvent(event) {\r\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\r\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\r\n        return !!(event.pointerType === \"mouse\");\r\n    }\r\n    return event instanceof MouseEvent;\r\n}\r\nfunction isTouchEvent(event) {\r\n    var hasTouches = !!event.touches;\r\n    return hasTouches;\r\n}\n\n/**\r\n * Filters out events not attached to the primary pointer (currently left mouse button)\r\n * @param eventHandler\r\n */\r\nfunction filterPrimaryPointer(eventHandler) {\r\n    if (!eventHandler)\r\n        return undefined;\r\n    return function (event) {\r\n        var isMouseEvent = event instanceof MouseEvent;\r\n        var isPrimaryPointer = !isMouseEvent ||\r\n            (isMouseEvent && event.button === 0);\r\n        if (isPrimaryPointer) {\r\n            eventHandler(event);\r\n        }\r\n    };\r\n}\r\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\r\nfunction pointFromTouch(e) {\r\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\r\n    var _a = primaryTouch || defaultPagePoint, pageX = _a.pageX, pageY = _a.pageY;\r\n    return { x: pageX, y: pageY };\r\n}\r\nfunction pointFromMouse(_a) {\r\n    var _b = _a.pageX, pageX = _b === void 0 ? 0 : _b, _c = _a.pageY, pageY = _c === void 0 ? 0 : _c;\r\n    return { x: pageX, y: pageY };\r\n}\r\nfunction extractEventInfo(event) {\r\n    return {\r\n        point: isTouchEvent(event)\r\n            ? pointFromTouch(event)\r\n            : pointFromMouse(event),\r\n    };\r\n}\r\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\r\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\r\n    if (!handler)\r\n        return;\r\n    var listener = function (event) { return handler(event, extractEventInfo(event)); };\r\n    return shouldFilterPrimaryPointer\r\n        ? filterPrimaryPointer(listener)\r\n        : listener;\r\n};\n\nvar isBrowser = typeof window !== \"undefined\";\r\n// We check for event support via functions in case they've been mocked by a testing suite.\r\nvar supportsPointerEvents = function () {\r\n    return isBrowser && window.onpointerdown === null;\r\n};\r\nvar supportsTouchEvents = function () {\r\n    return isBrowser && window.ontouchstart === null;\r\n};\r\nvar supportsMouseEvents = function () {\r\n    return isBrowser && window.onmousedown === null;\r\n};\n\nvar mouseEventNames = {\r\n    pointerdown: \"mousedown\",\r\n    pointermove: \"mousemove\",\r\n    pointerup: \"mouseup\",\r\n    pointercancel: \"mousecancel\",\r\n    pointerover: \"mouseover\",\r\n    pointerout: \"mouseout\",\r\n    pointerenter: \"mouseenter\",\r\n    pointerleave: \"mouseleave\",\r\n};\r\nvar touchEventNames = {\r\n    pointerdown: \"touchstart\",\r\n    pointermove: \"touchmove\",\r\n    pointerup: \"touchend\",\r\n    pointercancel: \"touchcancel\",\r\n};\r\nfunction getPointerEventName(name) {\r\n    if (supportsPointerEvents()) {\r\n        return name;\r\n    }\r\n    else if (supportsTouchEvents()) {\r\n        return touchEventNames[name];\r\n    }\r\n    else if (supportsMouseEvents()) {\r\n        return mouseEventNames[name];\r\n    }\r\n    return name;\r\n}\r\nfunction addPointerEvent(target, eventName, handler, options) {\r\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\r\n}\r\nfunction usePointerEvent(ref, eventName, handler, options) {\r\n    return useDomEvent(ref, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\r\n}\n\n/** @public */\r\nvar Point;\r\n(function (Point) {\r\n    /** @beta */\r\n    Point.subtract = function (a, b) {\r\n        return { x: a.x - b.x, y: a.y - b.y };\r\n    };\r\n    /** @beta */\r\n    Point.relativeTo = function (idOrElem) {\r\n        var elem;\r\n        var getElem = function () {\r\n            // Caching element here could be leaky because of React lifecycle\r\n            if (elem !== undefined)\r\n                return elem;\r\n            if (typeof idOrElem === \"string\") {\r\n                elem = document.getElementById(idOrElem);\r\n            }\r\n            else {\r\n                elem = idOrElem;\r\n            }\r\n            return elem;\r\n        };\r\n        return function (_a) {\r\n            var x = _a.x, y = _a.y;\r\n            var localElem = getElem();\r\n            if (!localElem)\r\n                return undefined;\r\n            var rect = localElem.getBoundingClientRect();\r\n            return {\r\n                x: x - rect.left - window.scrollX,\r\n                y: y - rect.top - window.scrollY,\r\n            };\r\n        };\r\n    };\r\n})(Point || (Point = {}));\n\nvar isViewportScrollBlocked = false;\r\nvar isBrowser$1 = typeof window !== \"undefined\";\r\nif (isBrowser$1) {\r\n    document.addEventListener(\"touchmove\", function (event) {\r\n        if (isViewportScrollBlocked) {\r\n            event.preventDefault();\r\n        }\r\n    }, { passive: false });\r\n}\r\nvar blockViewportScroll = function () { return (isViewportScrollBlocked = true); };\r\nvar unblockViewportScroll = function () { return (isViewportScrollBlocked = false); };\n\n/**\r\n * @internal\r\n */\r\nvar PanSession = /** @class */ (function () {\r\n    function PanSession(event, handlers, _a) {\r\n        var _this = this;\r\n        var transformPagePoint = (_a === void 0 ? {} : _a).transformPagePoint;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        this.updatePoint = function () {\r\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\r\n                return;\r\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\r\n            var isPanStarted = _this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursoe.\r\n            var isDistancePastThreshold = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_3__[\"distance\"])(info.offset, { x: 0, y: 0 }) >= 3;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            var point = info.point;\r\n            var timestamp = Object(framesync__WEBPACK_IMPORTED_MODULE_2__[\"getFrameData\"])().timestamp;\r\n            _this.history.push(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, point), { timestamp: timestamp }));\r\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(_this.lastMoveEvent, info);\r\n                _this.startEvent = _this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(_this.lastMoveEvent, info);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (isTouchEvent(event) && event.touches.length > 1)\r\n            return;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        var info = extractEventInfo(event);\r\n        var initialInfo = transformPoint(info, this.transformPagePoint);\r\n        var point = initialInfo.point;\r\n        var timestamp = Object(framesync__WEBPACK_IMPORTED_MODULE_2__[\"getFrameData\"])().timestamp;\r\n        this.history = [Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, point), { timestamp: timestamp })];\r\n        var onSessionStart = handlers.onSessionStart;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        var removeOnPointerMove = addPointerEvent(window, \"pointermove\", function (event, info) { return _this.handlePointerMove(event, info); });\r\n        var removeOnPointerUp = addPointerEvent(window, \"pointerup\", function (event, info) { return _this.handlePointerUp(event, info); });\r\n        this.removeListeners = function () {\r\n            removeOnPointerMove && removeOnPointerMove();\r\n            removeOnPointerUp && removeOnPointerUp();\r\n        };\r\n    }\r\n    PanSession.prototype.handlePointerMove = function (event, info) {\r\n        this.lastMoveEvent = event;\r\n        this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\r\n        // Because Safari doesn't trigger mouseup events when it's above a `<select>`\r\n        if (isMouseEvent(event) && event.buttons === 0) {\r\n            this.handlePointerUp(event, info);\r\n            return;\r\n        }\r\n        // Throttle mouse move event to once per frame\r\n        framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(this.updatePoint, true);\r\n    };\r\n    PanSession.prototype.handlePointerUp = function (event, info) {\r\n        this.end();\r\n        var onEnd = this.handlers.onEnd;\r\n        if (!onEnd)\r\n            return;\r\n        var panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\r\n        onEnd && onEnd(event, panInfo);\r\n    };\r\n    PanSession.prototype.updateHandlers = function (handlers) {\r\n        this.handlers = handlers;\r\n    };\r\n    PanSession.prototype.end = function () {\r\n        this.removeListeners && this.removeListeners();\r\n        framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(this.updatePoint);\r\n        unblockViewportScroll();\r\n    };\r\n    return PanSession;\r\n}());\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction getPanInfo(_a, history) {\r\n    var point = _a.point;\r\n    return {\r\n        point: point,\r\n        delta: Point.subtract(point, lastDevicePoint(history)),\r\n        offset: Point.subtract(point, startDevicePoint(history)),\r\n        velocity: getVelocity$1(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity$1(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var i = history.length - 1;\r\n    var timestampedPoint = null;\r\n    var lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\n\n/**\r\n *\r\n * @param handlers -\r\n * @param ref -\r\n *\r\n * @internalremarks\r\n * Currently this sets new pan gesture functions every render. The memo route has been explored\r\n * in the past but ultimately we're still creating new functions every render. An optimisation\r\n * to explore is creating the pan gestures and loading them into a `ref`.\r\n *\r\n * @internal\r\n */\r\nfunction usePanGesture(_a, ref) {\r\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart;\r\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\r\n    var panSession = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);\r\n    var transformPagePoint = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionPluginContext).transformPagePoint;\r\n    var handlers = {\r\n        onSessionStart: onPanSessionStart,\r\n        onStart: onPanStart,\r\n        onMove: onPan,\r\n        onEnd: function (event, info) {\r\n            panSession.current = null;\r\n            onPanEnd && onPanEnd(event, info);\r\n        },\r\n    };\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        if (panSession.current !== null) {\r\n            panSession.current.updateHandlers(handlers);\r\n        }\r\n    });\r\n    function onPointerDown(event) {\r\n        panSession.current = new PanSession(event, handlers, {\r\n            transformPagePoint: transformPagePoint,\r\n        });\r\n    }\r\n    usePointerEvent(ref, \"pointerdown\", hasPanEvents && onPointerDown);\r\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\r\n}\n\n/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\r\nvar isNodeOrChild = function (parent, child) {\r\n    if (!child) {\r\n        return false;\r\n    }\r\n    else if (parent === child) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isNodeOrChild(parent, child.parentElement);\r\n    }\r\n};\n\nvar order = [\"whileHover\", \"whileTap\", \"whileDrag\"];\r\nvar getGesturePriority = function (gesture) {\r\n    return order.indexOf(gesture) + 1;\r\n};\n\nfunction createLock(name) {\r\n    var lock = null;\r\n    return function () {\r\n        var openLock = function () {\r\n            lock = null;\r\n        };\r\n        if (lock === null) {\r\n            lock = name;\r\n            return openLock;\r\n        }\r\n        return false;\r\n    };\r\n}\r\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\r\nvar globalVerticalLock = createLock(\"dragVertical\");\r\nfunction getGlobalLock(drag) {\r\n    var lock = false;\r\n    if (drag === \"y\") {\r\n        lock = globalVerticalLock();\r\n    }\r\n    else if (drag === \"x\") {\r\n        lock = globalHorizontalLock();\r\n    }\r\n    else {\r\n        var openHorizontal_1 = globalHorizontalLock();\r\n        var openVertical_1 = globalVerticalLock();\r\n        if (openHorizontal_1 && openVertical_1) {\r\n            lock = function () {\r\n                openHorizontal_1();\r\n                openVertical_1();\r\n            };\r\n        }\r\n        else {\r\n            // Release the locks because we don't use them\r\n            if (openHorizontal_1)\r\n                openHorizontal_1();\r\n            if (openVertical_1)\r\n                openVertical_1();\r\n        }\r\n    }\r\n    return lock;\r\n}\n\nvar tapGesturePriority = getGesturePriority(\"whileTap\");\r\n/**\r\n * @param handlers -\r\n * @internal\r\n */\r\nfunction useTapGesture(_a, ref) {\r\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, controls = _a.controls;\r\n    var hasTapListeners = onTap || onTapStart || onTapCancel || whileTap;\r\n    var isTapping = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(false);\r\n    var cancelPointerEventListener = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);\r\n    function removePointerUp() {\r\n        cancelPointerEventListener.current &&\r\n            cancelPointerEventListener.current();\r\n        cancelPointerEventListener.current = null;\r\n    }\r\n    if (whileTap && controls) {\r\n        controls.setOverride(whileTap, tapGesturePriority);\r\n    }\r\n    // We load this event handler into a ref so we can later refer to\r\n    // onPointerUp.current which will always have reference to the latest props\r\n    var onPointerUp = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);\r\n    onPointerUp.current = function (event, info) {\r\n        var element = ref.current;\r\n        removePointerUp();\r\n        if (!isTapping.current || !element)\r\n            return;\r\n        isTapping.current = false;\r\n        if (controls && whileTap) {\r\n            controls.clearOverride(tapGesturePriority);\r\n        }\r\n        // Check the gesture lock - if we get it, it means no drag gesture is active\r\n        // and we can safely fire the tap gesture.\r\n        var openGestureLock = getGlobalLock(true);\r\n        if (!openGestureLock)\r\n            return;\r\n        openGestureLock();\r\n        if (!isNodeOrChild(element, event.target)) {\r\n            onTapCancel && onTapCancel(event, info);\r\n        }\r\n        else {\r\n            onTap && onTap(event, info);\r\n        }\r\n    };\r\n    function onPointerDown(event, info) {\r\n        removePointerUp();\r\n        cancelPointerEventListener.current = addPointerEvent(window, \"pointerup\", function (event, info) { return onPointerUp.current(event, info); });\r\n        var element = ref.current;\r\n        if (!element || isTapping.current)\r\n            return;\r\n        isTapping.current = true;\r\n        onTapStart && onTapStart(event, info);\r\n        if (controls && whileTap) {\r\n            controls.startOverride(tapGesturePriority);\r\n        }\r\n    }\r\n    usePointerEvent(ref, \"pointerdown\", hasTapListeners ? onPointerDown : undefined);\r\n    useUnmountEffect(removePointerUp);\r\n}\n\nvar hoverPriority = getGesturePriority(\"whileHover\");\r\nvar filterTouch = function (listener) { return function (event, info) {\r\n    if (isMouseEvent(event))\r\n        listener(event, info);\r\n}; };\r\n/**\r\n *\r\n * @param props\r\n * @param ref\r\n * @internal\r\n */\r\nfunction useHoverGesture(_a, ref) {\r\n    var whileHover = _a.whileHover, onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, controls = _a.controls;\r\n    if (whileHover && controls) {\r\n        controls.setOverride(whileHover, hoverPriority);\r\n    }\r\n    usePointerEvent(ref, \"pointerenter\", filterTouch(function (event, info) {\r\n        if (onHoverStart)\r\n            onHoverStart(event, info);\r\n        if (whileHover && controls) {\r\n            controls.startOverride(hoverPriority);\r\n        }\r\n    }));\r\n    usePointerEvent(ref, \"pointerleave\", filterTouch(function (event, info) {\r\n        if (onHoverEnd)\r\n            onHoverEnd(event, info);\r\n        if (whileHover && controls) {\r\n            controls.clearOverride(hoverPriority);\r\n        }\r\n    }));\r\n}\n\n/**\r\n * Add pan and tap gesture recognition to an element.\r\n *\r\n * @param props - Gesture event handlers\r\n * @param ref - React `ref` containing a DOM `Element`\r\n * @public\r\n */\r\nfunction useGestures(props, ref) {\r\n    usePanGesture(props, ref);\r\n    useTapGesture(props, ref);\r\n    useHoverGesture(props, ref);\r\n}\n\nvar makeRenderlessComponent = function (hook) { return function (props) {\r\n    hook(props);\r\n    return null;\r\n}; };\n\nvar gestureProps = [\r\n    \"onPan\",\r\n    \"onPanStart\",\r\n    \"onPanEnd\",\r\n    \"onPanSessionStart\",\r\n    \"onTap\",\r\n    \"onTapStart\",\r\n    \"onTapCancel\",\r\n    \"whileTap\",\r\n    \"whileHover\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n];\r\nvar Gestures = {\r\n    key: \"gestures\",\r\n    shouldRender: function (props) {\r\n        return gestureProps.some(function (key) { return props.hasOwnProperty(key); });\r\n    },\r\n    Component: makeRenderlessComponent(function (_a) {\r\n        var innerRef = _a.innerRef, props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"innerRef\"]);\r\n        useGestures(props, innerRef);\r\n    }),\r\n};\n\nvar isRefObject = function (ref) {\r\n    return typeof ref === \"object\" && ref.hasOwnProperty(\"current\");\r\n};\n\nvar noop = function (v) { return v; };\r\nvar ComponentDragControls = /** @class */ (function () {\r\n    function ComponentDragControls(_a) {\r\n        var ref = _a.ref, values = _a.values, controls = _a.controls;\r\n        /**\r\n         * Track whether we're currently dragging.\r\n         *\r\n         * @internal\r\n         */\r\n        this.isDragging = false;\r\n        /**\r\n         * The current direction of drag, or `null` if both.\r\n         *\r\n         * @internal\r\n         */\r\n        this.currentDirection = null;\r\n        /**\r\n         * The permitted t/r/b/l boundaries of travel, in pixels.\r\n         *\r\n         * @internal\r\n         */\r\n        this.constraints = false;\r\n        /**\r\n         * A reference to the host component's latest props.\r\n         *\r\n         * @internal\r\n         */\r\n        this.props = {\r\n            transformPagePoint: noop,\r\n        };\r\n        /**\r\n         * References to the MotionValues used for tracking the current dragged point.\r\n         *\r\n         * @internal\r\n         */\r\n        this.point = {};\r\n        /**\r\n         * The origin point for the current drag gesture.\r\n         *\r\n         * @internal\r\n         */\r\n        this.origin = {\r\n            x: motionValue(0),\r\n            y: motionValue(0),\r\n        };\r\n        // This is a reference to the global drag gesture lock, ensuring only one component\r\n        // can \"capture\" the drag of one or both axes.\r\n        // TODO: Look into moving this into pansession?\r\n        this.openGlobalLock = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.panSession = null;\r\n        /**\r\n         * A reference to the previous constraints bounding box\r\n         *\r\n         * @internal\r\n         */\r\n        this.prevConstraintsBox = {\r\n            width: 0,\r\n            height: 0,\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.ref = ref;\r\n        this.values = values;\r\n        this.controls = controls;\r\n    }\r\n    /**\r\n     * Start dragging the host component.\r\n     *\r\n     * @param event - The originating pointer event.\r\n     * @param options -\r\n     *\r\n     * @public\r\n     */\r\n    ComponentDragControls.prototype.start = function (originEvent, _a) {\r\n        var _this = this;\r\n        var _b = (_a === void 0 ? {} : _a).snapToCursor, snapToCursor = _b === void 0 ? false : _b;\r\n        snapToCursor && this.snapToCursor(originEvent);\r\n        var onSessionStart = function () {\r\n            // Initiate viewport scroll blocking on touch start. This is a very aggressive approach\r\n            // which has come out of the difficulty in us being able to do this once a scroll gesture\r\n            // has initiated in mobile browsers. This means if there's a horizontally-scrolling carousel\r\n            // on a page we can't let a user scroll the page itself from it. Ideally what we'd do is\r\n            // trigger this once we've got a scroll direction determined. This approach sort-of worked\r\n            // but if the component was dragged too far in a single frame page scrolling would initiate.\r\n            blockViewportScroll();\r\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\r\n            // the component.\r\n            bothAxis(function (axis) {\r\n                var axisPoint = _this.point[axis];\r\n                axisPoint && axisPoint.stop();\r\n            });\r\n        };\r\n        var onStart = function (event, info) {\r\n            // If constraints are an element, resolve them again in case they've updated.\r\n            if (_this.constraintsNeedResolution) {\r\n                var _a = _this.props, dragConstraints = _a.dragConstraints, transformPagePoint_1 = _a.transformPagePoint;\r\n                _this.constraints = calculateConstraintsFromDom(dragConstraints, _this.ref, _this.point, transformPagePoint_1);\r\n                _this.applyConstraintsToPoint();\r\n            }\r\n            // Set point origin and stop any existing animations.\r\n            bothAxis(function (axis) {\r\n                var axisPoint = _this.point[axis];\r\n                if (!axisPoint)\r\n                    return;\r\n                _this.origin[axis].set(axisPoint.get());\r\n            });\r\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\r\n            var _b = _this.props, drag = _b.drag, dragPropagation = _b.dragPropagation;\r\n            if (drag && !dragPropagation) {\r\n                if (_this.openGlobalLock)\r\n                    _this.openGlobalLock();\r\n                _this.openGlobalLock = getGlobalLock(drag);\r\n                if (!_this.openGlobalLock)\r\n                    return;\r\n            }\r\n            _this.isDragging = true;\r\n            _this.currentDirection = null;\r\n            var onDragStart = _this.props.onDragStart;\r\n            onDragStart &&\r\n                onDragStart(event, convertPanToDrag(info, _this.point));\r\n        };\r\n        var onMove = function (event, info) {\r\n            var _a = _this.props, dragPropagation = _a.dragPropagation, dragDirectionLock = _a.dragDirectionLock;\r\n            // If we didn't successfully receive the gesture lock, early return.\r\n            if (!dragPropagation && !_this.openGlobalLock)\r\n                return;\r\n            var offset = info.offset;\r\n            // Attempt to detect drag direction if directionLock is true\r\n            if (dragDirectionLock && _this.currentDirection === null) {\r\n                _this.currentDirection = getCurrentDirection(offset);\r\n                // If we've successfully set a direction, notify listener\r\n                if (_this.currentDirection !== null) {\r\n                    var onDirectionLock = _this.props.onDirectionLock;\r\n                    onDirectionLock && onDirectionLock(_this.currentDirection);\r\n                }\r\n                return;\r\n            }\r\n            _this.updatePoint(\"x\", offset);\r\n            _this.updatePoint(\"y\", offset);\r\n            var onDrag = _this.props.onDrag;\r\n            onDrag && onDrag(event, convertPanToDrag(info, _this.point));\r\n        };\r\n        var onEnd = function (event, info) {\r\n            _this.stop(event, info);\r\n        };\r\n        var transformPagePoint = this.props.transformPagePoint;\r\n        this.panSession = new PanSession(originEvent, {\r\n            onSessionStart: onSessionStart,\r\n            onStart: onStart,\r\n            onMove: onMove,\r\n            onEnd: onEnd,\r\n        }, { transformPagePoint: transformPagePoint });\r\n    };\r\n    ComponentDragControls.prototype.cancelDrag = function () {\r\n        unblockViewportScroll();\r\n        this.isDragging = false;\r\n        this.panSession && this.panSession.end();\r\n        this.panSession = null;\r\n        if (!this.props.dragPropagation && this.openGlobalLock) {\r\n            this.openGlobalLock();\r\n            this.openGlobalLock = null;\r\n        }\r\n    };\r\n    ComponentDragControls.prototype.stop = function (event, info) {\r\n        var _a;\r\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\r\n        this.panSession = null;\r\n        var isDragging = this.isDragging;\r\n        this.cancelDrag();\r\n        if (!isDragging)\r\n            return;\r\n        var _b = this.props, dragMomentum = _b.dragMomentum, dragElastic = _b.dragElastic, onDragEnd = _b.onDragEnd;\r\n        if (dragMomentum || dragElastic) {\r\n            var velocity = info.velocity;\r\n            this.animateDragEnd(velocity);\r\n        }\r\n        else {\r\n            this.recordBoxInfo(this.constraints);\r\n        }\r\n        onDragEnd && onDragEnd(event, convertPanToDrag(info, this.point));\r\n    };\r\n    ComponentDragControls.prototype.recordBoxInfo = function (constraints) {\r\n        if (constraints) {\r\n            var right = constraints.right, left = constraints.left, bottom = constraints.bottom, top_1 = constraints.top;\r\n            this.prevConstraintsBox.width = (right || 0) - (left || 0);\r\n            this.prevConstraintsBox.height = (bottom || 0) - (top_1 || 0);\r\n        }\r\n        if (this.point.x)\r\n            this.prevConstraintsBox.x = this.point.x.get();\r\n        if (this.point.y)\r\n            this.prevConstraintsBox.y = this.point.y.get();\r\n    };\r\n    ComponentDragControls.prototype.snapToCursor = function (event) {\r\n        var _this = this;\r\n        var transformPagePoint = this.props.transformPagePoint;\r\n        var point = extractEventInfo(event).point;\r\n        var boundingBox = getBoundingBox(this.ref, transformPagePoint);\r\n        var center = {\r\n            x: boundingBox.width / 2 + boundingBox.left + window.scrollX,\r\n            y: boundingBox.height / 2 + boundingBox.top + window.scrollY,\r\n        };\r\n        var offset = {\r\n            x: point.x - center.x,\r\n            y: point.y - center.y,\r\n        };\r\n        bothAxis(function (axis) {\r\n            var point = _this.point[axis];\r\n            if (!point)\r\n                return;\r\n            _this.origin[axis].set(point.get());\r\n        });\r\n        this.updatePoint(\"x\", offset);\r\n        this.updatePoint(\"y\", offset);\r\n    };\r\n    ComponentDragControls.prototype.setPoint = function (axis, value) {\r\n        this.point[axis] = value;\r\n    };\r\n    ComponentDragControls.prototype.updatePoint = function (axis, offset) {\r\n        var _a = this.props, drag = _a.drag, dragElastic = _a.dragElastic;\r\n        var axisPoint = this.point[axis];\r\n        // If we're not dragging this axis, do an early return.\r\n        if (!shouldDrag(axis, drag, this.currentDirection) || !axisPoint)\r\n            return;\r\n        var current = applyConstraints(axis, this.origin[axis].get() + offset[axis], this.constraints, dragElastic);\r\n        axisPoint.set(current);\r\n    };\r\n    ComponentDragControls.prototype.updateProps = function (_a) {\r\n        var _this = this;\r\n        var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? true : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\r\n        this.props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ drag: drag,\r\n            dragDirectionLock: dragDirectionLock,\r\n            dragPropagation: dragPropagation,\r\n            dragConstraints: dragConstraints,\r\n            dragElastic: dragElastic,\r\n            dragMomentum: dragMomentum }, remainingProps);\r\n        var _dragValueX = remainingProps._dragValueX, _dragValueY = remainingProps._dragValueY, dragOriginX = remainingProps.dragOriginX, dragOriginY = remainingProps.dragOriginY;\r\n        if (dragOriginX)\r\n            this.origin.x = dragOriginX;\r\n        if (dragOriginY)\r\n            this.origin.y = dragOriginY;\r\n        // Get the `MotionValue` for both draggable axes, or create them if they don't already\r\n        // exist on this component.\r\n        bothAxis(function (axis) {\r\n            if (!shouldDrag(axis, drag, _this.currentDirection))\r\n                return;\r\n            var defaultValue = axis === \"x\" ? _dragValueX : _dragValueY;\r\n            _this.setPoint(axis, defaultValue || _this.values.get(axis, 0));\r\n        });\r\n        // If `dragConstraints` is a React `ref`, we should resolve the constraints once the\r\n        // component has rendered.\r\n        this.constraintsNeedResolution = isRefObject(dragConstraints);\r\n        this.constraints = this.constraintsNeedResolution\r\n            ? this.constraints || false\r\n            : dragConstraints;\r\n    };\r\n    ComponentDragControls.prototype.applyConstraintsToPoint = function (constraints) {\r\n        var _this = this;\r\n        if (constraints === void 0) { constraints = this.constraints; }\r\n        return bothAxis(function (axis) {\r\n            var axisPoint = _this.point[axis];\r\n            axisPoint &&\r\n                !axisPoint.isAnimating() &&\r\n                applyConstraints(axis, axisPoint, constraints, 0);\r\n        });\r\n    };\r\n    ComponentDragControls.prototype.animateDragEnd = function (velocity) {\r\n        var _this = this;\r\n        var _a = this.props, drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, _dragValueX = _a._dragValueX, _dragValueY = _a._dragValueY, _dragTransitionControls = _a._dragTransitionControls;\r\n        var momentumAnimations = bothAxis(function (axis) {\r\n            var _a;\r\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\r\n                return;\r\n            }\r\n            var transition = _this.constraints\r\n                ? getConstraints(axis, _this.constraints)\r\n                : {};\r\n            /**\r\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n             * using the value of `dragElastic`.\r\n             */\r\n            var bounceStiffness = dragElastic ? 200 : 1000000;\r\n            var bounceDamping = dragElastic ? 40 : 10000000;\r\n            var animationControls = _dragTransitionControls || _this.controls;\r\n            var inertia = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,\r\n                bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1 }, dragTransition), transition);\r\n            var externalAxisMotionValue = axis === \"x\" ? _dragValueX : _dragValueY;\r\n            // If we're not animating on an externally-provided `MotionValue` we can use the\r\n            // component's animation controls which will handle interactions with whileHover (etc),\r\n            // otherwise we just have to animate the `MotionValue` itself.\r\n            return externalAxisMotionValue\r\n                ? startAnimation(axis, externalAxisMotionValue, 0, inertia)\r\n                : animationControls.start((_a = {},\r\n                    _a[axis] = 0,\r\n                    _a.transition = inertia,\r\n                    _a));\r\n        });\r\n        // Run all animations and then resolve the new drag constraints.\r\n        return Promise.all(momentumAnimations).then(function () {\r\n            _this.recordBoxInfo(_this.constraints);\r\n            _this.scalePoint();\r\n            var onDragTransitionEnd = _this.props.onDragTransitionEnd;\r\n            onDragTransitionEnd && onDragTransitionEnd();\r\n        });\r\n    };\r\n    ComponentDragControls.prototype.scalePoint = function () {\r\n        var _this = this;\r\n        var _a = this.props, dragConstraints = _a.dragConstraints, transformPagePoint = _a.transformPagePoint;\r\n        if (!isRefObject(dragConstraints))\r\n            return;\r\n        var constraintsBox = getBoundingBox(dragConstraints, transformPagePoint);\r\n        var draggableBox = getBoundingBox(this.ref, transformPagePoint);\r\n        // Scale a point relative to the transformation of a constraints-providing element.\r\n        var scaleAxisPoint = function (axis, dimension) {\r\n            var pointToScale = _this.point[axis];\r\n            if (!pointToScale)\r\n                return;\r\n            // Stop any current animations as they bug out if you resize during one\r\n            if (pointToScale.isAnimating()) {\r\n                pointToScale.stop();\r\n                _this.recordBoxInfo();\r\n                return;\r\n            }\r\n            // If the previous dimension was `0` (default), set `scale` to `1` to prevent\r\n            // divide by zero errors.\r\n            var scale = _this.prevConstraintsBox[dimension]\r\n                ? (constraintsBox[dimension] - draggableBox[dimension]) /\r\n                    _this.prevConstraintsBox[dimension]\r\n                : 1;\r\n            pointToScale.set(_this.prevConstraintsBox[axis] * scale);\r\n        };\r\n        scaleAxisPoint(\"x\", \"width\");\r\n        scaleAxisPoint(\"y\", \"height\");\r\n    };\r\n    ComponentDragControls.prototype.mount = function (element) {\r\n        var _this = this;\r\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\r\n            var _a = _this.props, drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\r\n            drag && dragListener && _this.start(event);\r\n        });\r\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\r\n            return _this.scalePoint();\r\n        });\r\n        if (this.constraintsNeedResolution) {\r\n            var _a = this.props, dragConstraints = _a.dragConstraints, transformPagePoint = _a.transformPagePoint;\r\n            var constraints = calculateConstraintsFromDom(dragConstraints, this.ref, this.point, transformPagePoint);\r\n            this.applyConstraintsToPoint(constraints);\r\n            this.recordBoxInfo(constraints);\r\n        }\r\n        else if (!this.isDragging && this.constraints) {\r\n            this.applyConstraintsToPoint();\r\n        }\r\n        return function () {\r\n            stopPointerListener && stopPointerListener();\r\n            stopResizeListener && stopResizeListener();\r\n            _this.cancelDrag();\r\n        };\r\n    };\r\n    return ComponentDragControls;\r\n}());\r\n// Call a handler once for each axis\r\nfunction bothAxis(handler) {\r\n    return [handler(\"x\"), handler(\"y\")];\r\n}\r\nfunction convertPanToDrag(info, point) {\r\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, info), { point: {\r\n            x: point.x ? point.x.get() : 0,\r\n            y: point.y ? point.y.get() : 0,\r\n        } });\r\n}\r\nfunction getConstraints(axis, _a) {\r\n    var top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left;\r\n    if (axis === \"x\") {\r\n        return { min: left, max: right };\r\n    }\r\n    else {\r\n        return { min: top, max: bottom };\r\n    }\r\n}\r\nfunction shouldDrag(direction, drag, currentDirection) {\r\n    return ((drag === true || drag === direction) &&\r\n        (currentDirection === null || currentDirection === direction));\r\n}\r\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\r\nfunction getCurrentDirection(offset, lockThreshold) {\r\n    if (lockThreshold === void 0) { lockThreshold = 10; }\r\n    var direction = null;\r\n    if (Math.abs(offset.y) > lockThreshold) {\r\n        direction = \"y\";\r\n    }\r\n    else if (Math.abs(offset.x) > lockThreshold) {\r\n        direction = \"x\";\r\n    }\r\n    return direction;\r\n}\r\n/**\r\n * Takes a parent Element and a draggable Element and returns pixel-based drag constraints.\r\n *\r\n * @param constraintsRef\r\n * @param draggableRef\r\n */\r\nfunction calculateConstraintsFromDom(constraintsRef, draggableRef, point, transformPagePoint) {\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(constraintsRef.current !== null && draggableRef.current !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\r\n    var parentBoundingBox = getBoundingBox(constraintsRef, transformPagePoint);\r\n    var draggableBoundingBox = getBoundingBox(draggableRef, transformPagePoint);\r\n    var left = parentBoundingBox.left -\r\n        draggableBoundingBox.left +\r\n        getCurrentOffset(point.x);\r\n    var top = parentBoundingBox.top -\r\n        draggableBoundingBox.top +\r\n        getCurrentOffset(point.y);\r\n    var right = parentBoundingBox.width - draggableBoundingBox.width + left;\r\n    var bottom = parentBoundingBox.height - draggableBoundingBox.height + top;\r\n    return { top: top, left: left, right: right, bottom: bottom };\r\n}\r\nfunction getBoundingBox(ref, transformPagePoint) {\r\n    var rect = ref.current.getBoundingClientRect();\r\n    var _a = transformPagePoint({\r\n        x: rect.left,\r\n        y: rect.top,\r\n    }), left = _a.x, top = _a.y;\r\n    var _b = transformPagePoint({\r\n        x: rect.width,\r\n        y: rect.height,\r\n    }), width = _b.x, height = _b.y;\r\n    return { left: left, top: top, width: width, height: height };\r\n}\r\nfunction getCurrentOffset(point) {\r\n    return point ? point.get() : 0;\r\n}\r\nfunction applyConstraints(axis, value, constraints, dragElastic) {\r\n    var constrainedValue = value instanceof MotionValue ? value.get() : value;\r\n    if (!constraints) {\r\n        return constrainedValue;\r\n    }\r\n    var _a = getConstraints(axis, constraints), min = _a.min, max = _a.max;\r\n    if (min !== undefined && constrainedValue < min) {\r\n        constrainedValue = dragElastic\r\n            ? applyOverdrag(min, constrainedValue, dragElastic)\r\n            : Math.max(min, constrainedValue);\r\n    }\r\n    else if (max !== undefined && constrainedValue > max) {\r\n        constrainedValue = dragElastic\r\n            ? applyOverdrag(max, constrainedValue, dragElastic)\r\n            : Math.min(max, constrainedValue);\r\n    }\r\n    if (value instanceof MotionValue) {\r\n        value.set(constrainedValue);\r\n    }\r\n    return constrainedValue;\r\n}\r\nfunction applyOverdrag(origin, current, dragElastic) {\r\n    var dragFactor = typeof dragElastic === \"number\" ? dragElastic : 0.35;\r\n    return Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_3__[\"mix\"])(origin, current, dragFactor);\r\n}\n\n/**\r\n * A hook that allows an element to be dragged.\r\n *\r\n * @param param\r\n * @param ref\r\n * @param values\r\n * @param controls\r\n *\r\n * @internal\r\n */\r\nfunction useDrag(props, ref, values, controls) {\r\n    var groupDragControls = props.dragControls;\r\n    var transformPagePoint = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionPluginContext).transformPagePoint;\r\n    var dragControls = useConstant(function () { return new ComponentDragControls({ ref: ref, values: values, controls: controls }); });\r\n    dragControls.updateProps(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, props), { transformPagePoint: transformPagePoint }));\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () { return dragControls.mount(ref.current); }, []);\r\n}\n\nvar Drag = {\r\n    key: \"drag\",\r\n    shouldRender: function (props) { return !!props.drag; },\r\n    Component: makeRenderlessComponent(function (_a) {\r\n        var innerRef = _a.innerRef, values = _a.values, controls = _a.controls, props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"innerRef\", \"values\", \"controls\"]);\r\n        return useDrag(props, innerRef, values, controls);\r\n    }),\r\n};\n\nfunction isCSSVariable(value) {\r\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\r\n}\r\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\r\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\r\nfunction parseCSSVariable(current) {\r\n    var match = cssVariableRegex.exec(current);\r\n    if (!match)\r\n        return [,];\r\n    var token = match[1], fallback = match[2];\r\n    return [token, fallback];\r\n}\r\nvar maxDepth = 4;\r\nfunction getVariableValue(current, element, depth) {\r\n    if (depth === void 0) { depth = 1; }\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\r\n    var _a = parseCSSVariable(current), token = _a[0], fallback = _a[1];\r\n    // No CSS variable detected\r\n    if (!token)\r\n        return;\r\n    // Attempt to read this CSS variable off the element\r\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\r\n    if (resolved) {\r\n        return resolved;\r\n    }\r\n    else if (isCSSVariable(fallback)) {\r\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\r\n        return getVariableValue(fallback, element, depth + 1);\r\n    }\r\n    else {\r\n        return fallback;\r\n    }\r\n}\r\n/**\r\n * Resolve CSS variables from\r\n *\r\n * @internal\r\n */\r\nfunction resolveCSSVariables(values, ref, _a, transitionEnd) {\r\n    var target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, []);\r\n    var element = ref.current;\r\n    if (!(element instanceof HTMLElement))\r\n        return { target: target, transitionEnd: transitionEnd };\r\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\r\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\r\n    if (transitionEnd) {\r\n        transitionEnd = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, transitionEnd);\r\n    }\r\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\r\n    values.forEach(function (value) {\r\n        var current = value.get();\r\n        if (!isCSSVariable(current))\r\n            return;\r\n        var resolved = getVariableValue(current, element);\r\n        if (resolved)\r\n            value.set(resolved);\r\n    });\r\n    // Cycle through every target property and resolve CSS variables. Currently\r\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\r\n    for (var key in target) {\r\n        var current = target[key];\r\n        if (!isCSSVariable(current))\r\n            continue;\r\n        var resolved = getVariableValue(current, element);\r\n        if (!resolved)\r\n            continue;\r\n        // Clone target if it hasn't already been\r\n        target[key] = resolved;\r\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\r\n        // CSS variable. This will ensure that after the animation the component will reflect\r\n        // changes in the value of the CSS variable.\r\n        if (transitionEnd && transitionEnd[key] === undefined) {\r\n            transitionEnd[key] = current;\r\n        }\r\n    }\r\n    return { target: target, transitionEnd: transitionEnd };\r\n}\n\nvar positionalKeys = new Set([\r\n    \"width\",\r\n    \"height\",\r\n    \"top\",\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    \"x\",\r\n    \"y\",\r\n]);\r\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\r\nvar hasPositionalKey = function (target) {\r\n    return Object.keys(target).some(isPositionalKey);\r\n};\r\nvar setAndResetVelocity = function (value, to) {\r\n    // Looks odd but setting it twice doesn't render, it'll just\r\n    // set both prev and current to the latest value\r\n    value.set(to, false);\r\n    value.set(to);\r\n};\r\nvar isNumOrPxType = function (v) {\r\n    return v === style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"number\"] || v === style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"px\"];\r\n};\r\nvar BoundingBoxDimension;\r\n(function (BoundingBoxDimension) {\r\n    BoundingBoxDimension[\"width\"] = \"width\";\r\n    BoundingBoxDimension[\"height\"] = \"height\";\r\n    BoundingBoxDimension[\"left\"] = \"left\";\r\n    BoundingBoxDimension[\"right\"] = \"right\";\r\n    BoundingBoxDimension[\"top\"] = \"top\";\r\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\r\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\r\nvar getPosFromMatrix = function (matrix, pos) {\r\n    return parseFloat(matrix.split(\", \")[pos]);\r\n};\r\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\r\n    var transform = _a.transform;\r\n    if (transform === \"none\" || !transform)\r\n        return 0;\r\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\r\n    if (matrix3d) {\r\n        return getPosFromMatrix(matrix3d[1], pos3);\r\n    }\r\n    else {\r\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\r\n        if (matrix) {\r\n            return getPosFromMatrix(matrix[1], pos2);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n}; };\r\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\r\nvar nonTranslationalTransformKeys = stylefire__WEBPACK_IMPORTED_MODULE_4__[\"transformProps\"].filter(function (key) { return !transformKeys.has(key); });\r\nfunction removeNonTranslationalTransform(values, elementStyler) {\r\n    var removedTransforms = [];\r\n    nonTranslationalTransformKeys.forEach(function (key) {\r\n        var value = values.get(key);\r\n        if (value !== undefined) {\r\n            removedTransforms.push([key, value.get()]);\r\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n    });\r\n    // Apply changes to element before measurement\r\n    if (removedTransforms.length)\r\n        elementStyler.render();\r\n    return removedTransforms;\r\n}\r\nvar positionalValues = {\r\n    // Dimensions\r\n    width: function (_a) {\r\n        var width = _a.width;\r\n        return width;\r\n    },\r\n    height: function (_a) {\r\n        var height = _a.height;\r\n        return height;\r\n    },\r\n    top: function (_bbox, _a) {\r\n        var top = _a.top;\r\n        return parseFloat(top);\r\n    },\r\n    left: function (_bbox, _a) {\r\n        var left = _a.left;\r\n        return parseFloat(left);\r\n    },\r\n    bottom: function (_a, _b) {\r\n        var height = _a.height;\r\n        var top = _b.top;\r\n        return parseFloat(top) + height;\r\n    },\r\n    right: function (_a, _b) {\r\n        var width = _a.width;\r\n        var left = _b.left;\r\n        return parseFloat(left) + width;\r\n    },\r\n    // Transform\r\n    x: getTranslateFromMatrix(4, 13),\r\n    y: getTranslateFromMatrix(5, 14),\r\n};\r\nvar convertChangedValueTypes = function (target, values, element, elementStyler, changedKeys) {\r\n    var originBbox = element.getBoundingClientRect();\r\n    var elementComputedStyle = getComputedStyle(element);\r\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\r\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\r\n    // If the element is currently set to display: \"none\", make it visible before\r\n    // measuring the target bounding box\r\n    if (display === \"none\") {\r\n        elementStyler.set(\"display\", target.display || \"block\");\r\n    }\r\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\r\n    elementStyler.render();\r\n    var targetBbox = element.getBoundingClientRect();\r\n    changedKeys.forEach(function (key) {\r\n        // Restore styles to their **calculated computed style**, not their actual\r\n        // originally set style. This allows us to animate between equivalent pixel units.\r\n        var value = values.get(key);\r\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\r\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\r\n    });\r\n    return target;\r\n};\r\nvar checkAndConvertChangedValueTypes = function (values, ref, target, transitionEnd) {\r\n    if (transitionEnd === void 0) { transitionEnd = {}; }\r\n    target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, target);\r\n    transitionEnd = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, transitionEnd);\r\n    var element = ref.current;\r\n    var elementStyler = Object(stylefire__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(element);\r\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\r\n    // We want to remove any transform values that could affect the element's bounding box before\r\n    // it's measured. We'll reapply these later.\r\n    var removedTransformValues = [];\r\n    var hasAttemptedToRemoveTransformValues = false;\r\n    var changedValueTypeKeys = targetPositionalKeys.reduce(function (acc, key) {\r\n        var value = values.get(key);\r\n        if (!value)\r\n            return acc;\r\n        var from = value.get();\r\n        var to = target[key];\r\n        var fromType = getDimensionValueType(from);\r\n        var toType;\r\n        // TODO: The current implementation of this basically throws an error\r\n        // if you try and do value conversion via keyframes. There's probably\r\n        // a way of doing this but the performance implications would need greater scrutiny,\r\n        // as it'd be doing multiple resize-remeasure operations.\r\n        if (isKeyframesTarget(to)) {\r\n            var numKeyframes = to.length;\r\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\r\n                if (!toType) {\r\n                    toType = getDimensionValueType(to[i]);\r\n                    Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(toType === fromType ||\r\n                        (isNumOrPxType(fromType) &&\r\n                            isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\r\n                }\r\n                else {\r\n                    Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(getDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            toType = getDimensionValueType(to);\r\n        }\r\n        if (fromType !== toType) {\r\n            // If they're both just number or px, convert them both to numbers rather than\r\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\r\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\r\n                var current = value.get();\r\n                if (typeof current === \"string\") {\r\n                    value.set(parseFloat(current));\r\n                }\r\n                if (typeof to === \"string\") {\r\n                    target[key] = parseFloat(to);\r\n                }\r\n                else if (Array.isArray(to) && toType === style_value_types__WEBPACK_IMPORTED_MODULE_6__[\"px\"]) {\r\n                    target[key] = to.map(parseFloat);\r\n                }\r\n            }\r\n            else {\r\n                // If we're going to do value conversion via DOM measurements, we first\r\n                // need to remove non-positional transform values that could affect the bbox measurements.\r\n                if (!hasAttemptedToRemoveTransformValues) {\r\n                    removedTransformValues = removeNonTranslationalTransform(values, elementStyler);\r\n                    hasAttemptedToRemoveTransformValues = true;\r\n                }\r\n                acc.push(key);\r\n                transitionEnd[key] =\r\n                    transitionEnd[key] !== undefined\r\n                        ? transitionEnd[key]\r\n                        : target[key];\r\n                setAndResetVelocity(value, to);\r\n            }\r\n        }\r\n        return acc;\r\n    }, []);\r\n    if (changedValueTypeKeys.length) {\r\n        var convertedTarget = convertChangedValueTypes(target, values, element, elementStyler, changedValueTypeKeys);\r\n        // If we removed transform values, reapply them before the next render\r\n        if (removedTransformValues.length) {\r\n            removedTransformValues.forEach(function (_a) {\r\n                var key = _a[0], value = _a[1];\r\n                values.get(key).set(value);\r\n            });\r\n        }\r\n        // Reapply original values\r\n        elementStyler.render();\r\n        return { target: convertedTarget, transitionEnd: transitionEnd };\r\n    }\r\n    else {\r\n        return { target: target, transitionEnd: transitionEnd };\r\n    }\r\n};\r\n/**\r\n * Convert value types for x/y/width/height/top/left/bottom/right\r\n *\r\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\r\n *\r\n * @param values\r\n * @param ref\r\n * @param target\r\n * @param transitionEnd\r\n * @internal\r\n */\r\nfunction unitConversion(values, ref, target, transitionEnd) {\r\n    return hasPositionalKey(target)\r\n        ? checkAndConvertChangedValueTypes(values, ref, target, transitionEnd)\r\n        : { target: target, transitionEnd: transitionEnd };\r\n}\n\nvar parseDomVariant = function (values, ref) {\r\n    return function (target, transitionEnd) {\r\n        var resolved = resolveCSSVariables(values, ref, target, transitionEnd);\r\n        target = resolved.target;\r\n        transitionEnd = resolved.transitionEnd;\r\n        return unitConversion(values, ref, target, transitionEnd);\r\n    };\r\n};\n\nfunction useForceUpdate() {\r\n    var _a = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(0), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\r\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useCallback\"])(function () { return setForcedRenderCount(forcedRenderCount + 1); }, [\r\n        forcedRenderCount,\r\n    ]);\r\n}\n\nvar SyncLayoutContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createContext\"])(null);\r\n/**\r\n * When layout changes happen asynchronously to their instigating render (ie when exiting\r\n * children of `AnimatePresence` are removed), `SyncLayout` can wrap parent and sibling\r\n * components that need to animate as a result of this layout change.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = ({ isVisible }) => {\r\n *   return (\r\n *     <SyncLayout>\r\n *       <AnimatePresence>\r\n *         {isVisible && (\r\n *           <motion.div exit={{ opacity: 0 }} />\r\n *         )}\r\n *       </AnimatePresence>\r\n *       <motion.div positionTransition />\r\n *     </SyncLayout>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * The way this component works is by memoising a function and passing it down via context.\r\n * The function, when called, updates the local state, which is used to invalidate the\r\n * memoisation cache. A new function is called, performing a synced re-render of components\r\n * that are using the SyncLayoutContext.\r\n *\r\n * @internal\r\n */\r\nvar UnstableSyncLayout = function (_a) {\r\n    var children = _a.children;\r\n    var forceUpdate = useForceUpdate();\r\n    return (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(SyncLayoutContext.Provider, { value: forceUpdate }, children));\r\n};\n\nvar _a;\r\nvar StepName;\r\n(function (StepName) {\r\n    StepName[\"Prepare\"] = \"prepare\";\r\n    StepName[\"Read\"] = \"read\";\r\n    StepName[\"Render\"] = \"render\";\r\n})(StepName || (StepName = {}));\r\nvar stepOrder = [StepName.Prepare, StepName.Read, StepName.Render];\r\nvar jobs = stepOrder.reduce(function (acc, key) {\r\n    acc[key] = [];\r\n    return acc;\r\n}, {});\r\nvar jobsNeedProcessing = false;\r\nfunction flushCallbackList(list) {\r\n    var numJobs = list.length;\r\n    for (var i = 0; i < numJobs; i++) {\r\n        list[i]();\r\n    }\r\n    list.length = 0;\r\n}\r\nfunction flushAllJobs() {\r\n    if (!jobsNeedProcessing)\r\n        return;\r\n    flushCallbackList(jobs.prepare);\r\n    flushCallbackList(jobs.read);\r\n    flushCallbackList(jobs.render);\r\n    jobsNeedProcessing = false;\r\n}\r\n// Note: The approach of schedulng jobs during the render step is incompatible with concurrent mode\r\n// where multiple renders might happen without a DOM update. This would result in unneccessary batched\r\n// jobs. But this was already a problem with our previous approach to positionTransition.\r\n// Hopefully the React team offer a getSnapshotBeforeUpdate-esque hook and we can move to that.\r\nvar createUseSyncEffect = function (stepName) { return function (callback) {\r\n    if (!callback)\r\n        return;\r\n    jobsNeedProcessing = true;\r\n    jobs[stepName].push(callback);\r\n}; };\r\nvar layoutSync = (_a = {},\r\n    _a[StepName.Prepare] = createUseSyncEffect(StepName.Prepare),\r\n    _a[StepName.Read] = createUseSyncEffect(StepName.Read),\r\n    _a[StepName.Render] = createUseSyncEffect(StepName.Render),\r\n    _a.flush = flushAllJobs,\r\n    _a);\n\nfunction isHTMLElement(element) {\r\n    return element instanceof HTMLElement;\r\n}\n\nvar defaultLayoutTransition = {\r\n    duration: 0.8,\r\n    ease: [0.45, 0.05, 0.19, 1.0],\r\n};\r\nvar defaultPositionTransition = underDampedSpring();\r\nfunction getDefaultLayoutTransition(isPositionOnly) {\r\n    return isPositionOnly ? defaultPositionTransition : defaultLayoutTransition;\r\n}\r\nfunction isResolver(transition) {\r\n    return typeof transition === \"function\";\r\n}\r\nvar axisLabels = {\r\n    x: {\r\n        id: \"x\",\r\n        size: \"width\",\r\n        min: \"left\",\r\n        max: \"right\",\r\n        origin: \"originX\",\r\n    },\r\n    y: {\r\n        id: \"y\",\r\n        size: \"height\",\r\n        min: \"top\",\r\n        max: \"bottom\",\r\n        origin: \"originY\",\r\n    },\r\n};\r\nfunction centerOf(min, max) {\r\n    return (min + max) / 2;\r\n}\r\nfunction calcAxisDelta(prev, next, names) {\r\n    var _a;\r\n    var sizeDelta = prev[names.size] - next[names.size];\r\n    var origin = 0.5;\r\n    // If the element has changed size we want to check whether either side is in\r\n    // the same position before/after the layout transition. If so, we can anchor\r\n    // the element to that position and only animate its size.\r\n    if (sizeDelta) {\r\n        if (prev[names.min] === next[names.min]) {\r\n            origin = 0;\r\n        }\r\n        else if (prev[names.max] === next[names.max]) {\r\n            origin = 1;\r\n        }\r\n    }\r\n    var delta = (_a = {},\r\n        _a[names.size] = sizeDelta,\r\n        _a[names.origin] = origin,\r\n        _a[names.id] = \r\n        // Only measure a position delta if we haven't anchored to one side\r\n        origin === 0.5\r\n            ? centerOf(prev[names.min], prev[names.max]) -\r\n                centerOf(next[names.min], next[names.max])\r\n            : 0,\r\n        _a);\r\n    return delta;\r\n}\r\nfunction calcDelta(prev, next) {\r\n    var delta = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, calcAxisDelta(prev, next, axisLabels.x)), calcAxisDelta(prev, next, axisLabels.y));\r\n    return delta;\r\n}\r\nvar offset = {\r\n    getLayout: function (_a) {\r\n        var offset = _a.offset;\r\n        return offset;\r\n    },\r\n    measure: function (element) {\r\n        var offsetLeft = element.offsetLeft, offsetTop = element.offsetTop, offsetWidth = element.offsetWidth, offsetHeight = element.offsetHeight;\r\n        return {\r\n            left: offsetLeft,\r\n            top: offsetTop,\r\n            right: offsetLeft + offsetWidth,\r\n            bottom: offsetTop + offsetHeight,\r\n            width: offsetWidth,\r\n            height: offsetHeight,\r\n        };\r\n    },\r\n};\r\nvar boundingBox = {\r\n    getLayout: function (_a) {\r\n        var boundingBox = _a.boundingBox;\r\n        return boundingBox;\r\n    },\r\n    measure: function (element) {\r\n        var _a = element.getBoundingClientRect(), left = _a.left, top = _a.top, width = _a.width, height = _a.height, right = _a.right, bottom = _a.bottom;\r\n        return { left: left, top: top, width: width, height: height, right: right, bottom: bottom };\r\n    },\r\n};\r\nfunction readPositionStyle(element) {\r\n    return window.getComputedStyle(element).position;\r\n}\r\nfunction getLayoutType(prev, next, isPositionOnly) {\r\n    return isPositionOnly && prev === next ? offset : boundingBox;\r\n}\r\nfunction isSizeKey(key) {\r\n    return key === \"width\" || key === \"height\";\r\n}\r\nfunction getTransition(_a) {\r\n    var layoutTransition = _a.layoutTransition, positionTransition = _a.positionTransition;\r\n    return layoutTransition || positionTransition;\r\n}\r\nvar LayoutAnimation = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(LayoutAnimation, _super);\r\n    function LayoutAnimation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // Measure the current state of the DOM before it's updated, and schedule checks to see\r\n    // if it's changed as a result of a React render.\r\n    LayoutAnimation.prototype.getSnapshotBeforeUpdate = function () {\r\n        var _a = this.props, innerRef = _a.innerRef, positionTransition = _a.positionTransition, values = _a.values, controls = _a.controls;\r\n        var element = innerRef.current;\r\n        if (!isHTMLElement(element))\r\n            return;\r\n        var layoutTransition = getTransition(this.props);\r\n        var isPositionOnly = !!positionTransition;\r\n        var positionStyle = readPositionStyle(element);\r\n        var prev = {\r\n            offset: offset.measure(element),\r\n            boundingBox: boundingBox.measure(element),\r\n        };\r\n        var transform;\r\n        var next;\r\n        var compare;\r\n        // We split the unsetting, read and reapplication of the `transform` style prop into\r\n        // different steps via useSyncEffect. Multiple components might all be doing the same\r\n        // thing and by splitting these jobs and flushing them in batches we prevent layout thrashing.\r\n        layoutSync.prepare(function () {\r\n            // Unset the transform of all layoutTransition components so we can accurately measure\r\n            // the target bounding box\r\n            transform = element.style.transform;\r\n            element.style.transform = \"\";\r\n        });\r\n        layoutSync.read(function () {\r\n            // Read the target VisualInfo of all layoutTransition components\r\n            next = {\r\n                offset: offset.measure(element),\r\n                boundingBox: boundingBox.measure(element),\r\n            };\r\n            var nextPosition = readPositionStyle(element);\r\n            compare = getLayoutType(positionStyle, nextPosition, isPositionOnly);\r\n        });\r\n        layoutSync.render(function () {\r\n            // Reverse the layout delta of all newly laid-out layoutTransition components into their\r\n            // prev visual state and then animate them into their new one using transforms.\r\n            var prevLayout = compare.getLayout(prev);\r\n            var nextLayout = compare.getLayout(next);\r\n            var delta = calcDelta(prevLayout, nextLayout);\r\n            var hasAnyChanged = delta.x || delta.y || delta.width || delta.height;\r\n            if (!hasAnyChanged) {\r\n                // If layout hasn't changed, reapply the transform and get out of here.\r\n                transform && (element.style.transform = transform);\r\n                return;\r\n            }\r\n            Object(stylefire__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(element).set({\r\n                originX: delta.originX,\r\n                originY: delta.originY,\r\n            });\r\n            syncRenderSession.open();\r\n            var target = {};\r\n            var transition = {};\r\n            var transitionDefinition = isResolver(layoutTransition)\r\n                ? layoutTransition({ delta: delta })\r\n                : layoutTransition;\r\n            function makeTransition(layoutKey, transformKey, targetValue, visualOrigin) {\r\n                // If this dimension hasn't changed, early return\r\n                var deltaKey = isSizeKey(layoutKey) ? layoutKey : transformKey;\r\n                if (!delta[deltaKey])\r\n                    return;\r\n                var baseTransition = typeof transitionDefinition === \"boolean\"\r\n                    ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, getDefaultLayoutTransition(isPositionOnly)) : transitionDefinition;\r\n                var value = values.get(transformKey, targetValue);\r\n                var velocity = value.getVelocity();\r\n                transition[transformKey] = baseTransition[transformKey]\r\n                    ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, baseTransition[transformKey]) : Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, baseTransition);\r\n                if (transition[transformKey].velocity === undefined) {\r\n                    transition[transformKey].velocity = velocity || 0;\r\n                }\r\n                // The target value of all transforms is the default value of that prop (ie x = 0, scaleX = 1)\r\n                // This is because we're inverting the layout change with `transform` and then animating to `transform: none`\r\n                target[transformKey] = targetValue;\r\n                var offsetToApply = !isSizeKey(layoutKey) && compare === offset\r\n                    ? value.get()\r\n                    : 0;\r\n                value.set(visualOrigin + offsetToApply);\r\n            }\r\n            makeTransition(\"left\", \"x\", 0, delta.x);\r\n            makeTransition(\"top\", \"y\", 0, delta.y);\r\n            if (!isPositionOnly) {\r\n                makeTransition(\"width\", \"scaleX\", 1, prev.boundingBox.width / next.boundingBox.width);\r\n                makeTransition(\"height\", \"scaleY\", 1, prev.boundingBox.height / next.boundingBox.height);\r\n            }\r\n            target.transition = transition;\r\n            // Only start the transition if `transitionDefinition` isn't `false`. Otherwise we want\r\n            // to leave the values in their newly-inverted state and let the user cope with the rest.\r\n            transitionDefinition && controls.start(target);\r\n            // Force a render to ensure there's no visual flickering\r\n            syncRenderSession.flush();\r\n        });\r\n        return null;\r\n    };\r\n    LayoutAnimation.prototype.componentDidUpdate = function () {\r\n        layoutSync.flush();\r\n    };\r\n    LayoutAnimation.prototype.render = function () {\r\n        return null;\r\n    };\r\n    LayoutAnimation.contextType = SyncLayoutContext;\r\n    return LayoutAnimation;\r\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]));\r\nvar Layout = {\r\n    key: \"layout\",\r\n    shouldRender: function (_a) {\r\n        var positionTransition = _a.positionTransition, layoutTransition = _a.layoutTransition;\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(!(positionTransition && layoutTransition), \"Don't set both positionTransition and layoutTransition on the same component\");\r\n        return (typeof window !== \"undefined\" &&\r\n            !!(positionTransition || layoutTransition));\r\n    },\r\n    Component: LayoutAnimation,\r\n};\n\n/**\r\n * A list of all valid MotionProps\r\n *\r\n * @internalremarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nvar validMotionProps = new Set([\r\n    \"initial\",\r\n    \"animate\",\r\n    \"exit\",\r\n    \"style\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"transformValues\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"static\",\r\n    \"positionTransition\",\r\n    \"layoutTransition\",\r\n    \"onAnimationStart\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"drag\",\r\n    \"dragControls\",\r\n    \"dragListener\",\r\n    \"dragConstraints\",\r\n    \"dragDirectionLock\",\r\n    \"dragElastic\",\r\n    \"dragMomentum\",\r\n    \"dragPropagation\",\r\n    \"dragTransition\",\r\n    \"_dragValueX\",\r\n    \"_dragValueY\",\r\n    \"_dragTransitionControls\",\r\n    \"dragOriginX\",\r\n    \"dragOriginY\",\r\n    \"onPan\",\r\n    \"onPanStart\",\r\n    \"onPanEnd\",\r\n    \"onPanSessionStart\",\r\n    \"onTap\",\r\n    \"onTapStart\",\r\n    \"onTapCancel\",\r\n    \"whileHover\",\r\n    \"whileTap\",\r\n    \"onHoverEnd\",\r\n    \"onHoverStart\",\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return validMotionProps.has(key);\r\n}\n\nvar AnimatePropType;\r\n(function (AnimatePropType) {\r\n    AnimatePropType[\"Target\"] = \"Target\";\r\n    AnimatePropType[\"VariantLabel\"] = \"VariantLabel\";\r\n    AnimatePropType[\"AnimationSubscription\"] = \"AnimationSubscription\";\r\n})(AnimatePropType || (AnimatePropType = {}));\n\nfunction shallowCompare(next, prev) {\r\n    if (prev === null)\r\n        return false;\r\n    var prevLength = prev.length;\r\n    if (prevLength !== next.length)\r\n        return false;\r\n    for (var i = 0; i < prevLength; i++) {\r\n        if (prev[i] !== next[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\n\nvar hasUpdated = function (prev, next) {\r\n    return (next !== undefined &&\r\n        (Array.isArray(prev) && Array.isArray(next)\r\n            ? !shallowCompare(next, prev)\r\n            : prev !== next));\r\n};\r\nfunction targetWithoutTransition(_a, mergeTransitionEnd) {\r\n    if (mergeTransitionEnd === void 0) { mergeTransitionEnd = false; }\r\n    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"transition\", \"transitionEnd\"]);\r\n    return mergeTransitionEnd\r\n        ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, target), transitionEnd)\r\n        : target;\r\n}\r\n/**\r\n * Handle the `animate` prop when its an object of values, ie:\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ opacity: 1 }} />\r\n * ```\r\n *\r\n * @internalremarks\r\n * It might be worth consolidating this with `use-variants`\r\n *\r\n * ```jsx\r\n * <motion.div animate=\"visible\" />\r\n * ```\r\n *\r\n * @param target\r\n * @param controls\r\n * @param values\r\n * @param transition\r\n *\r\n * @internal\r\n */\r\nfunction useAnimateProp(targetAndTransition, controls, values, defaultTransition) {\r\n    var isInitialRender = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(true);\r\n    var prevValues = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);\r\n    if (!prevValues.current) {\r\n        prevValues.current = targetWithoutTransition(targetAndTransition, true);\r\n    }\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        var targetToAnimate = {};\r\n        // These are the values we're actually animating\r\n        var animatingTarget = targetWithoutTransition(targetAndTransition);\r\n        // This is the target as it'll be once transitionEnd values are applied\r\n        var finalTarget = targetWithoutTransition(targetAndTransition, true);\r\n        // Detect which values have changed between renders\r\n        for (var key in animatingTarget) {\r\n            // This value should animate on mount if this value doesn't already exist (wasn't\r\n            // defined in `style` or `initial`) or if it does exist and it's already changed.\r\n            var shouldAnimateOnMount = isInitialRender.current &&\r\n                (!values.has(key) ||\r\n                    values.get(key).get() !== finalTarget[key]);\r\n            // If this value has updated between renders or it's we're animating this value on mount,\r\n            // add it to the animate target.\r\n            var isValidValue = finalTarget[key] !== null;\r\n            var valueHasUpdated = hasUpdated(prevValues.current[key], finalTarget[key]);\r\n            if (isValidValue && (valueHasUpdated || shouldAnimateOnMount)) {\r\n                targetToAnimate[key] = animatingTarget[key];\r\n            }\r\n        }\r\n        isInitialRender.current = false;\r\n        prevValues.current = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, prevValues.current), finalTarget);\r\n        if (Object.keys(targetToAnimate).length) {\r\n            controls.start(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, targetToAnimate), { transition: targetAndTransition.transition || defaultTransition, transitionEnd: targetAndTransition.transitionEnd }));\r\n        }\r\n    }, [targetAndTransition]);\r\n}\n\nvar labelsToArray = function (label) {\r\n    if (!label) {\r\n        return [];\r\n    }\r\n    if (Array.isArray(label)) {\r\n        return label;\r\n    }\r\n    return [label];\r\n};\r\nvar resolveVariantLabels = function (variant) {\r\n    var unresolvedVariant = variant instanceof MotionValue ? variant.get() : variant;\r\n    return Array.from(new Set(labelsToArray(unresolvedVariant)));\r\n};\r\n/**\r\n * Hooks in React sometimes accept a dependency array as their final argument. (ie useEffect/useMemo)\r\n * When values in this array change, React re-runs the dependency. However if the array\r\n * contains a variable number of items, React throws an error.\r\n */\r\nvar asDependencyList = function (list) { return [\r\n    list.join(\",\"),\r\n]; };\n\nvar hasVariantChanged = function (oldVariant, newVariant) {\r\n    return oldVariant.join(\",\") !== newVariant.join(\",\");\r\n};\r\n/**\r\n * Handle variants and the `animate` prop when its set as variant labels.\r\n *\r\n * @param initial - Initial variant(s)\r\n * @param animate - Variant(s) to animate to\r\n * @param inherit - `true` is inheriting animations from parent\r\n * @param controls - Animation controls\r\n *\r\n * @internal\r\n */\r\nfunction useVariants(initial, animate, inherit, controls) {\r\n    var targetVariants = resolveVariantLabels(animate);\r\n    var context = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionContext);\r\n    var parentAlreadyMounted = context.hasMounted && context.hasMounted.current;\r\n    var hasMounted = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(false);\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        var shouldAnimate = false;\r\n        if (inherit) {\r\n            // If we're inheriting variant changes and the parent has already\r\n            // mounted when this component loads, we need to manually trigger\r\n            // this animation.\r\n            shouldAnimate = !!parentAlreadyMounted;\r\n            targetVariants = resolveVariantLabels(context.animate);\r\n        }\r\n        else {\r\n            shouldAnimate =\r\n                hasMounted.current ||\r\n                    hasVariantChanged(resolveVariantLabels(initial), targetVariants);\r\n        }\r\n        shouldAnimate && controls.start(targetVariants);\r\n        hasMounted.current = true;\r\n    }, asDependencyList(targetVariants));\r\n}\n\n/**\r\n * `useAnimationGroupSubscription` allows a component to subscribe to an\r\n * externally-created `AnimationControls`, created by the `useAnimation` hook.\r\n *\r\n * @param animation\r\n * @param controls\r\n *\r\n * @internal\r\n */\r\nfunction useAnimationGroupSubscription(animation, controls) {\r\n    var unsubscribe = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useMemo\"])(function () { return animation.subscribe(controls); }, [\r\n        animation,\r\n    ]);\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () { return function () {\r\n        unsubscribe && unsubscribe();\r\n    }; }, [unsubscribe]);\r\n}\n\nvar _a$1, _b;\r\nvar AnimatePropComponents = (_a$1 = {},\r\n    _a$1[AnimatePropType.Target] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, controls = _a.controls, values = _a.values, transition = _a.transition;\r\n        return useAnimateProp(animate, controls, values, transition);\r\n    }),\r\n    _a$1[AnimatePropType.VariantLabel] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, _b = _a.inherit, inherit = _b === void 0 ? true : _b, controls = _a.controls, initial = _a.initial;\r\n        return useVariants(initial, animate, inherit, controls);\r\n    }),\r\n    _a$1[AnimatePropType.AnimationSubscription] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, controls = _a.controls;\r\n        return useAnimationGroupSubscription(animate, controls);\r\n    }),\r\n    _a$1);\r\nvar isVariantLabel$1 = function (prop) {\r\n    return Array.isArray(prop) || typeof prop === \"string\";\r\n};\r\nvar isAnimationSubscription = function (_a) {\r\n    var animate = _a.animate;\r\n    return animate instanceof AnimationControls;\r\n};\r\nvar animationProps = [\"initial\", \"animate\", \"whileTap\", \"whileHover\"];\r\nvar animatePropTypeTests = (_b = {},\r\n    _b[AnimatePropType.Target] = function (props) {\r\n        return (props.animate !== undefined &&\r\n            !isVariantLabel$1(props.animate) &&\r\n            !isAnimationSubscription(props));\r\n    },\r\n    _b[AnimatePropType.VariantLabel] = function (props) {\r\n        return (props.variants !== undefined ||\r\n            animationProps.some(function (key) { return typeof props[key] === \"string\"; }));\r\n    },\r\n    _b[AnimatePropType.AnimationSubscription] = isAnimationSubscription,\r\n    _b);\r\nvar getAnimationComponent = function (props) {\r\n    var animatePropType = undefined;\r\n    for (var key in AnimatePropType) {\r\n        if (animatePropTypeTests[key](props)) {\r\n            animatePropType = key;\r\n        }\r\n    }\r\n    return animatePropType ? AnimatePropComponents[animatePropType] : undefined;\r\n};\n\n/**\r\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\r\n * to access information about whether it's still present in the React tree.\r\n *\r\n * ```jsx\r\n * import { usePresence } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const [isPresent, safeToRemove] = usePresence()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent setTimeout(safeToRemove, 1000)\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\r\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\r\n *\r\n * @public\r\n */\r\nfunction usePresence() {\r\n    var context = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(PresenceContext);\r\n    if (context === null)\r\n        return [true];\r\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(register, []);\r\n    return !isPresent && onExitComplete ? [false, onExitComplete] : [true];\r\n}\n\nvar Exit = {\r\n    key: \"exit\",\r\n    shouldRender: function (props) { return !!props.exit && !checkShouldInheritVariant(props); },\r\n    Component: makeRenderlessComponent(function (props) {\r\n        var _a;\r\n        var animate = props.animate, controls = props.controls, exit = props.exit;\r\n        var _b = usePresence(), isPresent = _b[0], onExitComplete = _b[1];\r\n        var presenceContext = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(PresenceContext);\r\n        var isPlayingExitAnimation = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(false);\r\n        var custom = ((_a = presenceContext) === null || _a === void 0 ? void 0 : _a.custom) !== undefined\r\n            ? presenceContext.custom\r\n            : props.custom;\r\n        Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n            if (!isPresent) {\r\n                if (!isPlayingExitAnimation.current && exit) {\r\n                    controls.setProps(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, props), { custom: custom }));\r\n                    controls.start(exit).then(onExitComplete);\r\n                }\r\n                isPlayingExitAnimation.current = true;\r\n            }\r\n            else if (isPlayingExitAnimation.current &&\r\n                animate &&\r\n                !(animate instanceof AnimationControls)) {\r\n                controls.start(animate);\r\n            }\r\n            if (isPresent) {\r\n                isPlayingExitAnimation.current = false;\r\n            }\r\n        }, [isPresent]);\r\n    }),\r\n};\n\nvar isPropValid = function (key) { return !isValidMotionProp(key); };\r\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\r\ntry {\r\n    var emotionIsPropValid_1 = __webpack_require__(/*! @emotion/is-prop-valid */ \"./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js\").default;\r\n    isPropValid = function (key) {\r\n        // Handle events explicitly as Emotion validates them all as true\r\n        if (key.startsWith(\"on\")) {\r\n            return !isValidMotionProp(key);\r\n        }\r\n        else {\r\n            return emotionIsPropValid_1(key);\r\n        }\r\n    };\r\n}\r\ncatch (_a) {\r\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\r\n}\r\nfunction filterValidProps(props) {\r\n    var domProps = {};\r\n    for (var key in props) {\r\n        if (isPropValid(key)) {\r\n            domProps[key] = props[key];\r\n        }\r\n    }\r\n    return domProps;\r\n}\r\nvar buildHTMLProps = function (values, style, isStatic, isDrag) {\r\n    // The `any` isn't ideal but it is the type of createElement props argument\r\n    var props = {\r\n        style: buildStyleAttr(values, style, isStatic),\r\n    };\r\n    if (isDrag) {\r\n        // Disable text selection\r\n        props.style.userSelect = \"none\";\r\n        // Disable the ghost element when a user drags\r\n        props.draggable = false;\r\n    }\r\n    return props;\r\n};\r\nvar buildSVGProps = function (values, style) {\r\n    var motionValueStyles = resolveCurrent(values);\r\n    var props = Object(stylefire__WEBPACK_IMPORTED_MODULE_4__[\"buildSVGAttrs\"])(motionValueStyles, undefined, undefined, undefined, undefined, false);\r\n    props.style = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, style), props.style);\r\n    return props;\r\n};\r\nvar functionalityComponents = [Layout, Drag, Gestures, Exit];\r\nvar numFunctionalityComponents = functionalityComponents.length;\r\n/**\r\n * Create a configuration for `motion` components that provides DOM-specific functionality.\r\n *\r\n * @internal\r\n */\r\nfunction createDomMotionConfig(Component) {\r\n    var isDOM = typeof Component === \"string\";\r\n    var isSVG = isDOM && svgElements.indexOf(Component) !== -1;\r\n    return {\r\n        renderComponent: function (ref, style, values, props, isStatic) {\r\n            var forwardedProps = isDOM ? filterValidProps(props) : props;\r\n            var staticVisualStyles = isSVG\r\n                ? buildSVGProps(values, style)\r\n                : buildHTMLProps(values, style, isStatic, !!props.drag);\r\n            return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(Component, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, forwardedProps), { ref: ref }), staticVisualStyles));\r\n        },\r\n        /**\r\n         * loadFunctionalityComponents gets used by the `motion` component\r\n         *\r\n         * Each functionality component gets provided the `ref`, animation controls and the `MotionValuesMap`\r\n         * generated for that component, as well as all the `props` passed to it by the user.\r\n         *\r\n         * The pattern used to determine whether to load and use each piece of functionality is\r\n         * consistent (should render? Then push component) and could be used to extend functionality.\r\n         *\r\n         * By exposing a mutable piece of memory via an API like `extendMotionComponent` we could\r\n         * allow users to add `FunctionalComponentDefinition`s. This would allow us to offer file size\r\n         * reductions by shipping an entry point that doesn't load gesture and drag functionality, and\r\n         * also offer a way for users to develop plugins/other functionality. Because these functionalities\r\n         * are loaded as components, we can look into using Suspense for this purpose.\r\n         *\r\n         * For user-defined functionality we'd need to allow\r\n         *  1) User-defined prop typing (extending `P`)\r\n         *  2) User-defined \"clean props\" function that removes their plugin's props before being passed to the DOM.\r\n         */\r\n        loadFunctionalityComponents: function (ref, values, props, context, controls, inherit) {\r\n            var activeComponents = [];\r\n            // TODO: Consolidate Animation functionality loading strategy with other functionality components\r\n            var Animation = getAnimationComponent(props);\r\n            if (Animation) {\r\n                activeComponents.push(Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(Animation, { key: \"animation\", initial: props.initial, animate: props.animate, variants: props.variants, transition: props.transition, controls: controls, inherit: inherit, values: values }));\r\n            }\r\n            for (var i = 0; i < numFunctionalityComponents; i++) {\r\n                var _a = functionalityComponents[i], shouldRender = _a.shouldRender, key = _a.key, Component_1 = _a.Component;\r\n                if (shouldRender(props, context)) {\r\n                    activeComponents.push(Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(Component_1, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ key: key }, props, { parentContext: context, values: values, controls: controls, innerRef: ref })));\r\n                }\r\n            }\r\n            return activeComponents;\r\n        },\r\n        getValueControlsConfig: function (ref, values) {\r\n            return {\r\n                values: values,\r\n                readValueFromSource: function (key) {\r\n                    return Object(stylefire__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(ref.current).get(key);\r\n                },\r\n                // TODO: This is a good second source of plugins. This function contains the CSS variable\r\n                // and unit conversion support. These functions share a common signature. We could make another\r\n                // API for adding these.\r\n                makeTargetAnimatable: parseDomVariant(values, ref),\r\n            };\r\n        },\r\n    };\r\n}\n\nvar htmlMotionComponents = htmlElements.reduce(function (acc, Component) {\r\n    var config = createDomMotionConfig(Component);\r\n    // Suppress \"Expression produces a union type that is too complex to represent\" error\r\n    // @ts-ignore\r\n    acc[Component] = createMotionComponent(config);\r\n    return acc;\r\n}, {});\r\nvar svgMotionComponents = svgElements.reduce(function (acc, Component) {\r\n    // Suppress \"Expression produces a union type that is too complex to represent\" error\r\n    // @ts-ignore\r\n    acc[Component] = createMotionComponent(createDomMotionConfig(Component));\r\n    return acc;\r\n}, {});\r\n/**\r\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\r\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\r\n *\r\n * @internalremarks\r\n *\r\n * I'd like to make it possible for these to be loaded \"on demand\" - to reduce bundle size by only\r\n * including HTML/SVG stylers, animation and/or gesture support when necessary.\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ x: 100 }} />\r\n *\r\n * <motion.p animate={{ height: 200 }} />\r\n *\r\n * <svg><motion.circle r={10} animate={{ r: 20 }} /></svg>\r\n * ```\r\n *\r\n * @public\r\n */\r\nvar motion = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ \r\n    /**\r\n     * Convert a custom React component into a `motion` component.\r\n     *\r\n     * It can also accept a string, to create [custom DOM elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements).\r\n     *\r\n     * ```jsx\r\n     * const Component = React.forwardRef((props: Props, ref) => {\r\n     *   return <div ref={ref} />\r\n     * })\r\n     *\r\n     * const MotionComponent = motion.custom<Props>(Component)\r\n     * ```\r\n     *\r\n     * @param Component -\r\n     */\r\n    custom: function custom(Component) {\r\n        return createMotionComponent(createDomMotionConfig(Component));\r\n    } }, htmlMotionComponents), svgMotionComponents);\n\n/**\r\n * Creates a `MotionValue` to track the state and velocity of a value.\r\n *\r\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * export function MyComponent() {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <Frame scale={scale} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <motion.div style={{ scale }} />\r\n * }\r\n * ```\r\n *\r\n * @param initial - The initial state.\r\n *\r\n * @public\r\n */\r\nfunction useMotionValue(initial) {\r\n    return useConstant(function () { return motionValue(initial); });\r\n}\n\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n *\r\n * @internal\r\n */\r\nfunction unwrapMotionValue(value) {\r\n    var unwrappedValue = value instanceof MotionValue ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\n\nvar isCustomValueType = function (v) {\r\n    return typeof v === \"object\" && v.mix;\r\n};\r\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\r\nfunction transform() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var useImmediate = !Array.isArray(args[0]);\r\n    var argOffset = useImmediate ? 0 : -1;\r\n    var inputValue = args[0 + argOffset];\r\n    var inputRange = args[1 + argOffset];\r\n    var outputRange = args[2 + argOffset];\r\n    var options = args[3 + argOffset];\r\n    var interpolator = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_3__[\"interpolate\"])(inputRange, outputRange, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ mixer: getMixer(outputRange[0]) }, options));\r\n    return useImmediate ? interpolator(inputValue) : interpolator;\r\n}\n\nvar isTransformer = function (v) {\r\n    return typeof v === \"function\";\r\n};\r\nvar noop$1 = function (v) { return v; };\r\nfunction useTransform(parent, customTransform, to, options) {\r\n    var value = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);\r\n    var comparitor = [parent];\r\n    var transformer = noop$1;\r\n    if (isTransformer(customTransform)) {\r\n        transformer = customTransform;\r\n    }\r\n    else if (Array.isArray(to)) {\r\n        var from = customTransform;\r\n        transformer = transform(from, to, options);\r\n        comparitor = [parent, from.join(\",\"), to.join(\",\")];\r\n    }\r\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useMemo\"])(function () {\r\n        if (value.current)\r\n            value.current.destroy();\r\n        value.current = parent.addChild({ transformer: transformer });\r\n        return value.current;\r\n    }, comparitor);\r\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\r\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\r\n// to simply hide content at unreasonable scales.\r\nvar maxScale = 100000;\r\nvar invertScale = function (scale) { return (scale > 0.001 ? 1 / scale : maxScale); };\r\n/**\r\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\r\n * of their respective parent scales.\r\n *\r\n * This is useful for undoing the distortion of content when scaling a parent component.\r\n *\r\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\r\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\r\n * of those instead.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = () => {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <motion.div style={{ scaleX, scaleY }} />\r\n * }\r\n * ```\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * function MyComponent() {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <Frame scaleX={scaleX} scaleY={scaleY} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useInvertedScale(scale) {\r\n    var parentScaleX = useMotionValue(1);\r\n    var parentScaleY = useMotionValue(1);\r\n    var values = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionContext).values;\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(!!(scale || values), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\r\n    if (scale) {\r\n        parentScaleX = scale.scaleX || parentScaleX;\r\n        parentScaleY = scale.scaleY || parentScaleY;\r\n    }\r\n    else if (values) {\r\n        parentScaleX = values.get(\"scaleX\", 1);\r\n        parentScaleY = values.get(\"scaleY\", 1);\r\n    }\r\n    var scaleX = useTransform(parentScaleX, invertScale);\r\n    var scaleY = useTransform(parentScaleY, invertScale);\r\n    return { scaleX: scaleX, scaleY: scaleY };\r\n}\n\nfunction useOnChange(value, callback) {\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () { return (isMotionValue(value) ? value.onChange(callback) : undefined); }, [value]);\r\n}\n\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\r\nfunction useSpring(source, config) {\r\n    if (config === void 0) { config = {}; }\r\n    var activeSpringAnimation = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);\r\n    var value = useMotionValue(isMotionValue(source) ? source.get() : source);\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useMemo\"])(function () {\r\n        return value.attach(function (v, set) {\r\n            if (activeSpringAnimation.current) {\r\n                activeSpringAnimation.current.stop();\r\n            }\r\n            activeSpringAnimation.current = Object(popmotion__WEBPACK_IMPORTED_MODULE_7__[\"spring\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ from: value.get(), to: v, velocity: value.getVelocity() }, config)).start(set);\r\n            return value.get();\r\n        });\r\n    }, Object.values(config));\r\n    useOnChange(source, function (v) { return value.set(parseFloat(v)); });\r\n    return value;\r\n}\n\nfunction createScrollMotionValues() {\r\n    return {\r\n        scrollX: motionValue(0),\r\n        scrollY: motionValue(0),\r\n        scrollXProgress: motionValue(0),\r\n        scrollYProgress: motionValue(0),\r\n    };\r\n}\r\nfunction setProgress(offset, maxOffset, value) {\r\n    value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\r\n}\r\nfunction createScrollUpdater(values, getOffsets) {\r\n    var update = function () {\r\n        var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;\r\n        // Set absolute positions\r\n        values.scrollX.set(xOffset);\r\n        values.scrollY.set(yOffset);\r\n        // Set 0-1 progress\r\n        setProgress(xOffset, xMaxOffset, values.scrollXProgress);\r\n        setProgress(yOffset, yMaxOffset, values.scrollYProgress);\r\n    };\r\n    update();\r\n    return update;\r\n}\n\nvar isBrowser$2 = typeof window !== \"undefined\";\r\nvar useIsomorphicLayoutEffect = isBrowser$2 ? react__WEBPACK_IMPORTED_MODULE_1__[\"useLayoutEffect\"] : react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"];\n\nvar getElementScrollOffsets = function (element) { return function () {\r\n    return {\r\n        xOffset: element.scrollLeft,\r\n        yOffset: element.scrollTop,\r\n        xMaxOffset: element.scrollWidth - element.offsetWidth,\r\n        yMaxOffset: element.scrollHeight - element.offsetHeight,\r\n    };\r\n}; };\r\n/**\r\n * Returns MotionValues that update when the provided element scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import {\r\n *   Frame,\r\n *   useElementScroll,\r\n *   useTransform\r\n * } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const ref = React.useRef()\r\n *   const { scrollYProgress } = useElementScroll(ref)\r\n *\r\n *   return (\r\n *     <Frame ref={ref}>\r\n *       <Frame scaleX={scrollYProgress} />\r\n *     </Frame>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const ref = useRef()\r\n *   const { scrollYProgress } = useElementScroll(ref)\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <motion.div style={{ scaleX: scrollYProgress }} />\r\n *     </div>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useElementScroll(ref) {\r\n    var values = useConstant(createScrollMotionValues);\r\n    useIsomorphicLayoutEffect(function () {\r\n        var element = ref.current;\r\n        Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\r\n        if (!element)\r\n            return;\r\n        var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\r\n        var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues, { passive: true });\r\n        var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\r\n        return function () {\r\n            scrollListener && scrollListener();\r\n            resizeListener && resizeListener();\r\n        };\r\n    }, []);\r\n    return values;\r\n}\n\nvar viewportScrollValues = createScrollMotionValues();\r\nfunction getViewportScrollOffsets() {\r\n    return {\r\n        xOffset: window.pageXOffset,\r\n        yOffset: window.pageYOffset,\r\n        xMaxOffset: document.body.clientWidth - window.innerWidth,\r\n        yMaxOffset: document.body.clientHeight - window.innerHeight,\r\n    };\r\n}\r\nvar hasListeners = false;\r\nfunction addEventListeners() {\r\n    hasListeners = true;\r\n    if (typeof window === \"undefined\")\r\n        return;\r\n    var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\r\n    addDomEvent(window, \"scroll\", updateScrollValues, { passive: true });\r\n    addDomEvent(window, \"resize\", updateScrollValues);\r\n}\r\n/**\r\n * Returns MotionValues that update when the viewport scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import {\r\n *   Frame,\r\n *   useViewportScroll,\r\n *   useTransform\r\n * } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <Frame scaleX={scrollYProgress} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useViewportScroll() {\r\n    useIsomorphicLayoutEffect(function () {\r\n        !hasListeners && addEventListeners();\r\n    }, []);\r\n    return viewportScrollValues;\r\n}\n\n/**\r\n * Creates `AnimationControls`, which can be used to manually start, stop\r\n * and sequence animations on one or more components.\r\n *\r\n * The returned `AnimationControls` should be passed to the `animate` property\r\n * of the components you want to animate.\r\n *\r\n * These components can then be animated with the `start` method.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { Frame, useAnimation } from 'framer'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <Frame animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { motion, useAnimation } from 'framer-motion'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <motion.div animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @returns Animation controller with `start` and `stop` methods\r\n *\r\n * @public\r\n */\r\nfunction useAnimation() {\r\n    var animationControls = useConstant(function () { return new AnimationControls(); });\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        animationControls.mount();\r\n        return function () { return animationControls.unmount(); };\r\n    }, []);\r\n    return animationControls;\r\n}\n\n/**\r\n * Experimental API.\r\n *\r\n * Makes an animated version of `useState`.\r\n *\r\n * @remarks\r\n *\r\n * When the returned state setter is called, values will be animated to their new target.\r\n *\r\n * This allows the animation of arbitrary React components.\r\n *\r\n * **Note:** When animating DOM components, it's always preferable to use the `animate` prop, as Framer\r\n * will bypass React's rendering cycle with one optimised for 60fps motion. This Hook is specifically\r\n * for animating props on arbitrary React components, or for animating text content.\r\n *\r\n * ```jsx\r\n * const [state, setState] = useAnimatedState({ percentage: 0 })\r\n *\r\n * return (\r\n *   <Graph\r\n *     percentage={state.percentage}\r\n *     onTap={() => setState({ percentage: 50 })}\r\n *   />\r\n * )\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * TODO:\r\n * - Make hook accept a typed version of Target that accepts any value (not just DOM values)\r\n * - Allow hook to accept single values. ie useAnimatedState(0)\r\n * - Allow providing MotionValues via initialState.\r\n *\r\n * @beta\r\n */\r\nfunction useAnimatedState(initialState) {\r\n    var _a = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(initialState), animationState = _a[0], onUpdate = _a[1];\r\n    var config = useConstant(function () { return ({ onUpdate: onUpdate }); });\r\n    var values = useMotionValues(config);\r\n    var controls = useValueAnimationControls({\r\n        values: values,\r\n        readValueFromSource: function (key) { return animationState[key]; },\r\n    }, {}, false);\r\n    var startAnimation = useConstant(function () { return function (animationDefinition) {\r\n        return controls.start(animationDefinition);\r\n    }; });\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        values.mount();\r\n        return function () { return values.unmount(); };\r\n    }, []);\r\n    return [animationState, startAnimation];\r\n}\n\n/**\r\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { Frame, useCycle } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <Frame\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { motion, useCycle } from \"framer-motion\"\r\n *\r\n * export const MyComponent = () => {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <motion.div\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @param items - items to cycle through\r\n * @returns [currentState, cycleState]\r\n *\r\n * @public\r\n */\r\nfunction useCycle() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    // TODO: After Framer X beta, remove this warning\r\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"warning\"])(items.length > 1, \"useCycle syntax has changed. `useCycle([0, 1, 2])` becomes `useCycle(0, 1, 2)`\");\r\n    var index = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(0);\r\n    var _a = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(items[index.current]), item = _a[0], setItem = _a[1];\r\n    return [\r\n        item,\r\n        function (next) {\r\n            index.current =\r\n                typeof next !== \"number\"\r\n                    ? Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_3__[\"wrap\"])(0, items.length, index.current + 1)\r\n                    : next;\r\n            setItem(items[index.current]);\r\n        },\r\n    ];\r\n}\n\n/**\r\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <Frame onTapStart={startDrag} />\r\n *     <Frame drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onMouseDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\r\nvar DragControls = /** @class */ (function () {\r\n    function DragControls() {\r\n        this.componentControls = new Set();\r\n    }\r\n    /**\r\n     * Subscribe a component's internal `ComponentDragControls` to the user-facing API.\r\n     *\r\n     * @internal\r\n     */\r\n    DragControls.prototype.subscribe = function (controls) {\r\n        var _this = this;\r\n        this.componentControls.add(controls);\r\n        return function () { return _this.componentControls.delete(controls); };\r\n    };\r\n    /**\r\n     * Start a drag gesture on every `motion` component that has this set of drag controls\r\n     * passed into it via the `dragControls` prop.\r\n     *\r\n     * ```jsx\r\n     * dragControls.start(e, {\r\n     *   snapToCursor: true\r\n     * })\r\n     * ```\r\n     *\r\n     * @param event - A mouse/touch/pointer event.\r\n     * @param options - Options\r\n     *\r\n     * @public\r\n     */\r\n    DragControls.prototype.start = function (event, options) {\r\n        this.componentControls.forEach(function (controls) {\r\n            controls.start(event.nativeEvent || event, options);\r\n        });\r\n    };\r\n    return DragControls;\r\n}());\r\nvar createDragControls = function () { return new DragControls(); };\r\n/**\r\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\r\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\r\n * might want to initiate that dragging from a different component than the draggable one.\r\n *\r\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\r\n * the draggable component's `dragControls` prop. It exposes a `start` method\r\n * that can start dragging from pointer events on other components.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <Frame onTapStart={startDrag} />\r\n *     <Frame drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onMouseDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useDragControls() {\r\n    return useConstant(createDragControls);\r\n}\n\nvar PresenceChild = function (_a) {\r\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom;\r\n    var numPresenceChildren = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(0);\r\n    var numExitComplete = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(0);\r\n    var context = {\r\n        initial: initial,\r\n        isPresent: isPresent,\r\n        custom: custom,\r\n        onExitComplete: function () {\r\n            numExitComplete.current++;\r\n            var allComplete = numExitComplete.current >= numPresenceChildren.current;\r\n            onExitComplete && allComplete && onExitComplete();\r\n        },\r\n    };\r\n    var register = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useMemo\"])(function () {\r\n        numExitComplete.current = 0;\r\n        return function () {\r\n            numPresenceChildren.current++;\r\n            return function () { return numPresenceChildren.current--; };\r\n        };\r\n    }, [isPresent]);\r\n    return (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(PresenceContext.Provider, { value: Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, context), { register: register }) }, children));\r\n};\n\nfunction getChildKey(child) {\r\n    return child.key || \"\";\r\n}\r\nfunction updateChildLookup(children, allChildren) {\r\n    var seenChildren =  true ? new Set() : undefined;\r\n    children.forEach(function (child) {\r\n        var key = getChildKey(child);\r\n        if ( true && seenChildren) {\r\n            if (seenChildren.has(key)) {\r\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\r\n            }\r\n            seenChildren.add(key);\r\n        }\r\n        allChildren.set(key, child);\r\n    });\r\n}\r\nfunction onlyElements(children) {\r\n    var filtered = [];\r\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\r\n    react__WEBPACK_IMPORTED_MODULE_1__[\"Children\"].forEach(children, function (child) {\r\n        if (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"isValidElement\"])(child))\r\n            filtered.push(child);\r\n    });\r\n    return filtered;\r\n}\r\n/**\r\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\r\n *\r\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\r\n *\r\n * @library\r\n *\r\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { Frame, AnimatePresence } from 'framer'\r\n *\r\n * // As items are added and removed from `items`\r\n * export function Items({ items }) {\r\n *   return (\r\n *     <AnimatePresence>\r\n *       {items.map(item => (\r\n *         <Frame\r\n *           key={item.id}\r\n *           initial={{ opacity: 0 }}\r\n *           animate={{ opacity: 1 }}\r\n *           exit={{ opacity: 0 }}\r\n *         />\r\n *       ))}\r\n *     </AnimatePresence>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * @motion\r\n *\r\n * Any `motion` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { motion, AnimatePresence } from 'framer-motion'\r\n *\r\n * export const Items = ({ items }) => (\r\n *   <AnimatePresence>\r\n *     {items.map(item => (\r\n *       <motion.div\r\n *         key={item.id}\r\n *         initial={{ opacity: 0 }}\r\n *         animate={{ opacity: 1 }}\r\n *         exit={{ opacity: 0 }}\r\n *       />\r\n *     ))}\r\n *   </AnimatePresence>\r\n * )\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\r\n * once all `motion` components have finished animating out. Likewise, any components using\r\n * `usePresence` all need to call `safeToRemove`.\r\n *\r\n * @public\r\n */\r\nvar AnimatePresence = function (_a) {\r\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter;\r\n    // We want to force a re-render once all exiting animations have finished. We\r\n    // either use a local forceUpdate function, or one from a parent context if it exists.\r\n    var localForceUpdate = useForceUpdate();\r\n    var contextForceUpdate = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(SyncLayoutContext);\r\n    var forceUpdate = contextForceUpdate || localForceUpdate;\r\n    var isInitialRender = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(true);\r\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\r\n    var filteredChildren = onlyElements(children);\r\n    // Keep a living record of the children we're actually rendering so we\r\n    // can diff to figure out which are entering and exiting\r\n    var presentChildren = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(filteredChildren);\r\n    // A lookup table to quickly reference components by key\r\n    var allChildren = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(new Map())\r\n        .current;\r\n    // A living record of all currently exiting components.\r\n    var exiting = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(new Set()).current;\r\n    updateChildLookup(filteredChildren, allChildren);\r\n    // If this is the initial component render, just deal with logic surrounding whether\r\n    // we play onMount animations or not.\r\n    if (isInitialRender.current) {\r\n        isInitialRender.current = false;\r\n        return (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(react__WEBPACK_IMPORTED_MODULE_1__[\"Fragment\"], null, filteredChildren.map(function (child) { return (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false }, child)); })));\r\n    }\r\n    // If this is a subsequent render, deal with entering and exiting children\r\n    var childrenToRender = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spreadArrays\"])(filteredChildren);\r\n    // Diff the keys of the currently-present and target children to update our\r\n    // exiting list.\r\n    var presentKeys = presentChildren.current.map(getChildKey);\r\n    var targetKeys = filteredChildren.map(getChildKey);\r\n    // Diff the present children with our target children and mark those that are exiting\r\n    var numPresent = presentKeys.length;\r\n    for (var i = 0; i < numPresent; i++) {\r\n        var key = presentKeys[i];\r\n        if (targetKeys.indexOf(key) === -1) {\r\n            exiting.add(key);\r\n        }\r\n        else {\r\n            // In case this key has re-entered, remove from the exiting list\r\n            exiting.delete(key);\r\n        }\r\n    }\r\n    // If we currently have exiting children, and we're deferring rendering incoming children\r\n    // until after all current children have exiting, empty the childrenToRender array\r\n    if (exitBeforeEnter && exiting.size) {\r\n        childrenToRender = [];\r\n    }\r\n    // Loop through all currently exiting components and clone them to overwrite `animate`\r\n    // with any `exit` prop they might have defined.\r\n    exiting.forEach(function (key) {\r\n        // If this component is actually entering again, early return\r\n        if (targetKeys.indexOf(key) !== -1)\r\n            return;\r\n        var child = allChildren.get(key);\r\n        if (!child)\r\n            return;\r\n        var insertionIndex = presentKeys.indexOf(key);\r\n        var onExit = function () {\r\n            exiting.delete(key);\r\n            // Remove this child from the present children\r\n            var removeIndex = presentChildren.current.findIndex(function (child) { return child.key === key; });\r\n            presentChildren.current.splice(removeIndex, 1);\r\n            // Defer re-rendering until all exiting children have indeed left\r\n            if (!exiting.size) {\r\n                presentChildren.current = filteredChildren;\r\n                forceUpdate();\r\n                onExitComplete && onExitComplete();\r\n            }\r\n        };\r\n        childrenToRender.splice(insertionIndex, 0, Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom }, child));\r\n    });\r\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\r\n    // the same tree between renders\r\n    childrenToRender = childrenToRender.map(function (child) {\r\n        var key = child.key;\r\n        return exiting.has(key) ? (child) : (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(PresenceChild, { key: getChildKey(child), isPresent: true }, child));\r\n    });\r\n    presentChildren.current = childrenToRender;\r\n    if ( true &&\r\n        exitBeforeEnter &&\r\n        childrenToRender.length > 1) {\r\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\r\n    }\r\n    return (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(react__WEBPACK_IMPORTED_MODULE_1__[\"Fragment\"], null, exiting.size\r\n        ? childrenToRender\r\n        : childrenToRender.map(function (child) { return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"cloneElement\"])(child); })));\r\n};\n\n// Does this device prefer reduced motion? Returns `null` server-side.\r\nvar prefersReducedMotion = motionValue(null);\r\nif (typeof window !== \"undefined\") {\r\n    if (window.matchMedia) {\r\n        var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\r\n        var setReducedMotionPreferences = function () {\r\n            return prefersReducedMotion.set(motionMediaQuery_1.matches);\r\n        };\r\n        motionMediaQuery_1.addListener(setReducedMotionPreferences);\r\n        setReducedMotionPreferences();\r\n    }\r\n    else {\r\n        prefersReducedMotion.set(false);\r\n    }\r\n}\r\nfunction determineShouldReduceMotion(prefersReduced, isReducedMotion) {\r\n    return typeof isReducedMotion === \"boolean\"\r\n        ? isReducedMotion\r\n        : Boolean(prefersReduced);\r\n}\n\n/**\r\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\r\n *\r\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\r\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\r\n *\r\n * It will actively respond to changes and re-render your components with the latest setting.\r\n *\r\n * ```jsx\r\n * export function Sidebar({ isOpen }) {\r\n *   const shouldReduceMotion = useReducedMotion()\r\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\r\n *\r\n *   return (\r\n *     <motion.div animate={{\r\n *       opacity: isOpen ? 1 : 0,\r\n *       x: isOpen ? 0 : closedX\r\n *     }} />\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @return boolean\r\n *\r\n * @public\r\n */\r\nfunction useReducedMotion() {\r\n    var isReducedMotion = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionContext).isReducedMotion;\r\n    var _a = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(determineShouldReduceMotion(prefersReducedMotion.get(), isReducedMotion)), shouldReduceMotion = _a[0], setShouldReduceMotion = _a[1];\r\n    Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\r\n        return prefersReducedMotion.onChange(function (v) {\r\n            setShouldReduceMotion(determineShouldReduceMotion(v, isReducedMotion));\r\n        });\r\n    }, [setShouldReduceMotion, isReducedMotion]);\r\n    return shouldReduceMotion;\r\n}\n\n/**\r\n * Define accessibility options for a tree. Can be used to force the tree into Reduced Motion mode,\r\n * or disable device detection.\r\n *\r\n * @internal\r\n */\r\nfunction ReducedMotion(_a) {\r\n    var children = _a.children, enabled = _a.enabled;\r\n    var context = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useContext\"])(MotionContext);\r\n    context = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useMemo\"])(function () { return (Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, context), { isReducedMotion: enabled })); }, [enabled]);\r\n    return (Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(MotionContext.Provider, { value: context }, children));\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZnJhbWVyLW1vdGlvbi9kaXN0L2ZyYW1lci1tb3Rpb24uZXMuanM/NjRjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBb0U7QUFDZ0o7QUFDeko7QUFDOEI7QUFDbUM7QUFDNUU7QUFDeUM7QUFDRztBQUMxQztBQUNNOztBQUV4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsZUFBZTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsOERBQVk7QUFDakM7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlEQUFJO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsUUFBUSxpREFBSSxpQ0FBaUM7QUFDL0Y7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dkM7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGtDQUFrQyxFQUFFO0FBQ3JGLEtBQUs7QUFDTDtBQUNBLDRDQUE0QyxvREFBTTtBQUNsRDtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxHQUFHLHlDQUF5QztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscWFBQXFhLG9EQUFNO0FBQzNhLHFCQUFxQixzREFBUSxFQUFFO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLCtEQUFJO0FBQzFCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUJBQXFCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFVBQVU7QUFDcEMscUNBQXFDLGFBQWE7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUJBQXFCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFVBQVU7QUFDbkMsMENBQTBDLGFBQWE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGlEQUFpRDtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsc0NBQXNDLDJCQUEyQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUJBQXFCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFVBQVU7QUFDcEMscUNBQXFDLGFBQWE7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUJBQXFCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFVBQVU7QUFDbkMsMENBQTBDLGFBQWE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix3REFBVTtBQUNwQyxhQUFhLHNEQUFRO0FBQ3JCLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0RBQVU7QUFDNUIsY0FBYyxxREFBTyxjQUFjLFNBQVMsc0RBQVEsQ0FBQyxzREFBUSxHQUFHLGFBQWEsMkJBQTJCLEdBQUcsRUFBRTtBQUM3RyxZQUFZLDJEQUFhLDBCQUEwQixpQkFBaUI7QUFDcEU7O0FBRXdoQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZnJhbWVyLW1vdGlvbi5lcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduLCBfX3NwcmVhZEFycmF5cywgX19yZXN0LCBfX2V4dGVuZHMgfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyB1c2VSZWYsIG1lbW8sIHVzZUVmZmVjdCwgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlTWVtbywgZm9yd2FyZFJlZiwgY3JlYXRlRWxlbWVudCwgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSwgQ29tcG9uZW50LCB1c2VMYXlvdXRFZmZlY3QsIGNsb25lRWxlbWVudCwgQ2hpbGRyZW4sIGlzVmFsaWRFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN5bmMsIHsgZ2V0RnJhbWVEYXRhLCBjYW5jZWxTeW5jIH0gZnJvbSAnZnJhbWVzeW5jJztcbmltcG9ydCB7IHZlbG9jaXR5UGVyU2Vjb25kLCBkaXN0YW5jZSwgbWl4LCBpbnRlcnBvbGF0ZSwgd3JhcCB9IGZyb20gJ0Bwb3Btb3Rpb24vcG9wY29ybic7XG5pbXBvcnQgc3R5bGVyLCB7IGNyZWF0ZVN0eWxlckZhY3RvcnksIGJ1aWxkU3R5bGVQcm9wZXJ0eSwgaXNUcmFuc2Zvcm1Qcm9wLCB0cmFuc2Zvcm1Qcm9wcywgYnVpbGRTVkdBdHRycyB9IGZyb20gJ3N0eWxlZmlyZSc7XG5pbXBvcnQgeyBpbnZhcmlhbnQsIHdhcm5pbmcgfSBmcm9tICdoZXktbGlzdGVuJztcbmltcG9ydCB7IGNvbG9yLCBjb21wbGV4LCBudW1iZXIsIHB4LCBwZXJjZW50LCBkZWdyZWVzLCB2dywgdmggfSBmcm9tICdzdHlsZS12YWx1ZS10eXBlcyc7XG5pbXBvcnQgeyBhY3Rpb24sIGRlbGF5LCB0d2Vlbiwgc3ByaW5nLCBrZXlmcmFtZXMgYXMga2V5ZnJhbWVzJDEsIGluZXJ0aWEgfSBmcm9tICdwb3Btb3Rpb24nO1xuaW1wb3J0ICogYXMgZWFzaW5nTG9va3VwIGZyb20gJ0Bwb3Btb3Rpb24vZWFzaW5nJztcbmltcG9ydCB7IGN1YmljQmV6aWVyLCBsaW5lYXIgfSBmcm9tICdAcG9wbW90aW9uL2Vhc2luZyc7XG5cbnZhciBpc0Zsb2F0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gIWlzTmFOKHBhcnNlRmxvYXQodmFsdWUpKTtcclxufTtcclxuLyoqXHJcbiAqIGBNb3Rpb25WYWx1ZWAgaXMgdXNlZCB0byB0cmFjayB0aGUgc3RhdGUgYW5kIHZlbG9jaXR5IG9mIG1vdGlvbiB2YWx1ZXMuXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbnZhciBNb3Rpb25WYWx1ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIGluaXQgLSBUaGUgaW5pdGlhdGluZyB2YWx1ZVxyXG4gICAgICogQHBhcmFtIGNvbmZpZyAtIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gb3B0aW9uc1xyXG4gICAgICpcclxuICAgICAqIC0gIGB0cmFuc2Zvcm1lcmA6IEEgZnVuY3Rpb24gdG8gdHJhbnNmb3JtIGluY29taW5nIHZhbHVlcyB3aXRoLlxyXG4gICAgICpcclxuICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBNb3Rpb25WYWx1ZShpbml0LCBfYSkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIHRyYW5zZm9ybWVyID0gX2IudHJhbnNmb3JtZXIsIHBhcmVudCA9IF9iLnBhcmVudDtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBEdXJhdGlvbiwgaW4gbWlsbGlzZWNvbmRzLCBzaW5jZSBsYXN0IHVwZGF0aW5nIGZyYW1lLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGludGVybmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy50aW1lRGVsdGEgPSAwO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRpbWVzdGFtcCBvZiB0aGUgbGFzdCB0aW1lIHRoaXMgYE1vdGlvblZhbHVlYCB3YXMgdXBkYXRlZC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMubGFzdFVwZGF0ZWQgPSAwO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRyYWNrcyB3aGV0aGVyIHRoaXMgdmFsdWUgY2FuIG91dHB1dCBhIHZlbG9jaXR5LiBDdXJyZW50bHkgdGhpcyBpcyBvbmx5IHRydWVcclxuICAgICAgICAgKiBpZiB0aGUgdmFsdWUgaXMgbnVtZXJpY2FsLCBidXQgd2UgbWlnaHQgYmUgYWJsZSB0byB3aWRlbiB0aGUgc2NvcGUgaGVyZSBhbmQgc3VwcG9ydFxyXG4gICAgICAgICAqIG90aGVyIHZhbHVlIHR5cGVzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGludGVybmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5jYW5UcmFja1ZlbG9jaXR5ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy51cGRhdGVBbmROb3RpZnkgPSBmdW5jdGlvbiAodiwgcmVuZGVyKSB7XHJcbiAgICAgICAgICAgIGlmIChyZW5kZXIgPT09IHZvaWQgMCkgeyByZW5kZXIgPSB0cnVlOyB9XHJcbiAgICAgICAgICAgIF90aGlzLnByZXYgPSBfdGhpcy5jdXJyZW50O1xyXG4gICAgICAgICAgICBfdGhpcy5jdXJyZW50ID0gX3RoaXMudHJhbnNmb3JtZXIgPyBfdGhpcy50cmFuc2Zvcm1lcih2KSA6IHY7XHJcbiAgICAgICAgICAgIGlmIChfdGhpcy51cGRhdGVTdWJzY3JpYmVycyAmJiBfdGhpcy5wcmV2ICE9PSBfdGhpcy5jdXJyZW50KSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy51cGRhdGVTdWJzY3JpYmVycy5mb3JFYWNoKF90aGlzLm5vdGlmeVN1YnNjcmliZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChfdGhpcy5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMuY2hpbGRyZW4uZm9yRWFjaChfdGhpcy5zZXRDaGlsZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHJlbmRlciAmJiBfdGhpcy5yZW5kZXJTdWJzY3JpYmVycykge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMucmVuZGVyU3Vic2NyaWJlcnMuZm9yRWFjaChfdGhpcy5ub3RpZnlTdWJzY3JpYmVyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBVcGRhdGUgdGltZXN0YW1wXHJcbiAgICAgICAgICAgIHZhciBfYSA9IGdldEZyYW1lRGF0YSgpLCBkZWx0YSA9IF9hLmRlbHRhLCB0aW1lc3RhbXAgPSBfYS50aW1lc3RhbXA7XHJcbiAgICAgICAgICAgIGlmIChfdGhpcy5sYXN0VXBkYXRlZCAhPT0gdGltZXN0YW1wKSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy50aW1lRGVsdGEgPSBkZWx0YTtcclxuICAgICAgICAgICAgICAgIF90aGlzLmxhc3RVcGRhdGVkID0gdGltZXN0YW1wO1xyXG4gICAgICAgICAgICAgICAgc3luYy5wb3N0UmVuZGVyKF90aGlzLnNjaGVkdWxlVmVsb2NpdHlDaGVjayk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIE5vdGlmeSBhIHN1YnNjcmliZXIgd2l0aCB0aGUgbGF0ZXN0IHZhbHVlLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogVGhpcyBpcyBhbiBpbnN0YW5jZWQgYW5kIGJvdW5kIGZ1bmN0aW9uIHRvIHByZXZlbnQgZ2VuZXJhdGluZyBhIG5ld1xyXG4gICAgICAgICAqIGZ1bmN0aW9uIG9uY2UgcGVyIGZyYW1lLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHN1YnNjcmliZXIgLSBUaGUgc3Vic2NyaWJlciB0byBub3RpZnkuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaW50ZXJuYWxcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLm5vdGlmeVN1YnNjcmliZXIgPSBmdW5jdGlvbiAoc3Vic2NyaWJlcikge1xyXG4gICAgICAgICAgICBzdWJzY3JpYmVyKF90aGlzLmN1cnJlbnQpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU2NoZWR1bGUgYSB2ZWxvY2l0eSBjaGVjayBmb3IgdGhlIG5leHQgZnJhbWUuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGlzIGlzIGFuIGluc3RhbmNlZCBhbmQgYm91bmQgZnVuY3Rpb24gdG8gcHJldmVudCBnZW5lcmF0aW5nIGEgbmV3XHJcbiAgICAgICAgICogZnVuY3Rpb24gb25jZSBwZXIgZnJhbWUuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaW50ZXJuYWxcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnNjaGVkdWxlVmVsb2NpdHlDaGVjayA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHN5bmMucG9zdFJlbmRlcihfdGhpcy52ZWxvY2l0eUNoZWNrKTsgfTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBVcGRhdGVzIGBwcmV2YCB3aXRoIGBjdXJyZW50YCBpZiB0aGUgdmFsdWUgaGFzbid0IGJlZW4gdXBkYXRlZCB0aGlzIGZyYW1lLlxyXG4gICAgICAgICAqIFRoaXMgZW5zdXJlcyB2ZWxvY2l0eSBjYWxjdWxhdGlvbnMgcmV0dXJuIGAwYC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIFRoaXMgaXMgYW4gaW5zdGFuY2VkIGFuZCBib3VuZCBmdW5jdGlvbiB0byBwcmV2ZW50IGdlbmVyYXRpbmcgYSBuZXdcclxuICAgICAgICAgKiBmdW5jdGlvbiBvbmNlIHBlciBmcmFtZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMudmVsb2NpdHlDaGVjayA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gX2EudGltZXN0YW1wO1xyXG4gICAgICAgICAgICBpZiAodGltZXN0YW1wICE9PSBfdGhpcy5sYXN0VXBkYXRlZCkge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMucHJldiA9IF90aGlzLmN1cnJlbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFVwZGF0ZXMgY2hpbGQgYE1vdGlvblZhbHVlYC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSBjaGlsZCAtIENoaWxkIGBNb3Rpb25WYWx1ZWAuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaW50ZXJuYWxcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnNldENoaWxkID0gZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiBjaGlsZC5zZXQoX3RoaXMuY3VycmVudCk7IH07XHJcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1lciA9IHRyYW5zZm9ybWVyO1xyXG4gICAgICAgIHRoaXMuc2V0KGluaXQsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmNhblRyYWNrVmVsb2NpdHkgPSBpc0Zsb2F0KHRoaXMuY3VycmVudCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYSBuZXcgYE1vdGlvblZhbHVlYCB0aGF0J3Mgc3Vic2NyaWJlZCB0byB0aGUgb3V0cHV0IG9mIHRoaXMgb25lLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjb25maWcgLSBPcHRpb25hbCBjb25maWd1cmF0aW9uIG9wdGlvbnNcclxuICAgICAqXHJcbiAgICAgKiAtICBgdHJhbnNmb3JtZXJgOiBBIGZ1bmN0aW9uIHRvIHRyYW5zZm9ybSBpbmNvbWluZyB2YWx1ZXMgd2l0aC5cclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgTW90aW9uVmFsdWUucHJvdG90eXBlLmFkZENoaWxkID0gZnVuY3Rpb24gKGNvbmZpZykge1xyXG4gICAgICAgIGlmIChjb25maWcgPT09IHZvaWQgMCkgeyBjb25maWcgPSB7fTsgfVxyXG4gICAgICAgIHZhciBjaGlsZCA9IG5ldyBNb3Rpb25WYWx1ZSh0aGlzLmN1cnJlbnQsIF9fYXNzaWduKHsgcGFyZW50OiB0aGlzIH0sIGNvbmZpZykpO1xyXG4gICAgICAgIGlmICghdGhpcy5jaGlsZHJlbilcclxuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IG5ldyBTZXQoKTtcclxuICAgICAgICB0aGlzLmNoaWxkcmVuLmFkZChjaGlsZCk7XHJcbiAgICAgICAgcmV0dXJuIGNoaWxkO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogU3RvcHMgYSBgTW90aW9uVmFsdWVgIGZyb20gYmVpbmcgc3Vic2NyaWJlZCB0byB0aGlzIG9uZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gY2hpbGQgLSBUaGUgc3Vic2NyaWJlZCBgTW90aW9uVmFsdWVgXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIE1vdGlvblZhbHVlLnByb3RvdHlwZS5yZW1vdmVDaGlsZCA9IGZ1bmN0aW9uIChjaGlsZCkge1xyXG4gICAgICAgIGlmICghdGhpcy5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2hpbGRyZW4uZGVsZXRlKGNoaWxkKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFN1YnNjcmliZXMgYSBzdWJzY3JpYmVyIGZ1bmN0aW9uIHRvIGEgc3Vic2NyaXB0aW9uIGxpc3QuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHN1YnNjcmlwdGlvbnMgLSBBIGBTZXRgIG9mIHN1YnNjcmliZXJzLlxyXG4gICAgICogQHBhcmFtIHN1YnNjcmlwdGlvbiAtIEEgc3Vic2NyaWJlciBmdW5jdGlvbi5cclxuICAgICAqL1xyXG4gICAgTW90aW9uVmFsdWUucHJvdG90eXBlLnN1YnNjcmliZVRvID0gZnVuY3Rpb24gKHN1YnNjcmlwdGlvbnMsIHN1YnNjcmlwdGlvbikge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdmFyIHVwZGF0ZVN1YnNjcmliZXIgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBzdWJzY3JpcHRpb24oX3RoaXMuY3VycmVudCk7IH07XHJcbiAgICAgICAgc3Vic2NyaXB0aW9ucy5hZGQodXBkYXRlU3Vic2NyaWJlcik7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHN1YnNjcmlwdGlvbnMuZGVsZXRlKHVwZGF0ZVN1YnNjcmliZXIpOyB9O1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQWRkcyBhIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBub3RpZmllZCB3aGVuIHRoZSBgTW90aW9uVmFsdWVgIGlzIHVwZGF0ZWQuXHJcbiAgICAgKlxyXG4gICAgICogSXQgcmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLCB3aWxsIGNhbmNlbCB0aGUgc3Vic2NyaXB0aW9uLlxyXG4gICAgICpcclxuICAgICAqIFdoZW4gY2FsbGluZyBgb25DaGFuZ2VgIGluc2lkZSBhIFJlYWN0IGNvbXBvbmVudCwgaXQgc2hvdWxkIGJlIHdyYXBwZWQgd2l0aCB0aGVcclxuICAgICAqIGB1c2VFZmZlY3RgIGhvb2suIEFzIGl0IHJldHVybnMgYW4gdW5zdWJzY3JpYmUgZnVuY3Rpb24sIHRoaXMgc2hvdWxkIGJlIHJldHVybmVkXHJcbiAgICAgKiBmcm9tIHRoZSBgdXNlRWZmZWN0YCBmdW5jdGlvbiB0byBlbnN1cmUgeW91IGRvbid0IGFkZCBkdXBsaWNhdGUgc3Vic2NyaWJlcnMuLlxyXG4gICAgICpcclxuICAgICAqIEBsaWJyYXJ5XHJcbiAgICAgKlxyXG4gICAgICogYGBganN4XHJcbiAgICAgKiBmdW5jdGlvbiBNeUNvbXBvbmVudCgpIHtcclxuICAgICAqICAgY29uc3QgeCA9IHVzZU1vdGlvblZhbHVlKDApXHJcbiAgICAgKiAgIGNvbnN0IHkgPSB1c2VNb3Rpb25WYWx1ZSgwKVxyXG4gICAgICogICBjb25zdCBvcGFjaXR5ID0gdXNlTW90aW9uVmFsdWUoMSlcclxuICAgICAqXHJcbiAgICAgKiAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgKiAgICAgZnVuY3Rpb24gdXBkYXRlT3BhY2l0eSgpIHtcclxuICAgICAqICAgICAgIGNvbnN0IG1heFhZID0gTWF0aC5tYXgoeC5nZXQoKSwgeS5nZXQoKSlcclxuICAgICAqICAgICAgIGNvbnN0IG5ld09wYWNpdHkgPSB0cmFuc2Zvcm0obWF4WFksIFswLCAxMDBdLCBbMSwgMF0pXHJcbiAgICAgKiAgICAgICBvcGFjaXR5LnNldChuZXdPcGFjaXR5KVxyXG4gICAgICogICAgIH1cclxuICAgICAqXHJcbiAgICAgKiAgICAgY29uc3QgdW5zdWJzY3JpYmVYID0geC5vbkNoYW5nZSh1cGRhdGVPcGFjaXR5KVxyXG4gICAgICogICAgIGNvbnN0IHVuc3Vic2NyaWJlWSA9IHkub25DaGFuZ2UodXBkYXRlT3BhY2l0eSlcclxuICAgICAqXHJcbiAgICAgKiAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAqICAgICAgIHVuc3Vic2NyaWJlWCgpXHJcbiAgICAgKiAgICAgICB1bnN1YnNjcmliZVkoKVxyXG4gICAgICogICAgIH1cclxuICAgICAqICAgfSwgW10pXHJcbiAgICAgKlxyXG4gICAgICogICByZXR1cm4gPEZyYW1lIHg9e3h9IC8+XHJcbiAgICAgKiB9XHJcbiAgICAgKiBgYGBcclxuICAgICAqXHJcbiAgICAgKiBAbW90aW9uXHJcbiAgICAgKlxyXG4gICAgICogYGBganN4XHJcbiAgICAgKiBleHBvcnQgY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiB7XHJcbiAgICAgKiAgIGNvbnN0IHggPSB1c2VNb3Rpb25WYWx1ZSgwKVxyXG4gICAgICogICBjb25zdCB5ID0gdXNlTW90aW9uVmFsdWUoMClcclxuICAgICAqICAgY29uc3Qgb3BhY2l0eSA9IHVzZU1vdGlvblZhbHVlKDEpXHJcbiAgICAgKlxyXG4gICAgICogICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICogICAgIGZ1bmN0aW9uIHVwZGF0ZU9wYWNpdHkoKSB7XHJcbiAgICAgKiAgICAgICBjb25zdCBtYXhYWSA9IE1hdGgubWF4KHguZ2V0KCksIHkuZ2V0KCkpXHJcbiAgICAgKiAgICAgICBjb25zdCBuZXdPcGFjaXR5ID0gdHJhbnNmb3JtKG1heFhZLCBbMCwgMTAwXSwgWzEsIDBdKVxyXG4gICAgICogICAgICAgb3BhY2l0eS5zZXQobmV3T3BhY2l0eSlcclxuICAgICAqICAgICB9XHJcbiAgICAgKlxyXG4gICAgICogICAgIGNvbnN0IHVuc3Vic2NyaWJlWCA9IHgub25DaGFuZ2UodXBkYXRlT3BhY2l0eSlcclxuICAgICAqICAgICBjb25zdCB1bnN1YnNjcmliZVkgPSB5Lm9uQ2hhbmdlKHVwZGF0ZU9wYWNpdHkpXHJcbiAgICAgKlxyXG4gICAgICogICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgKiAgICAgICB1bnN1YnNjcmliZVgoKVxyXG4gICAgICogICAgICAgdW5zdWJzY3JpYmVZKClcclxuICAgICAqICAgICB9XHJcbiAgICAgKiAgIH0sIFtdKVxyXG4gICAgICpcclxuICAgICAqICAgcmV0dXJuIDxtb3Rpb24uZGl2IHN0eWxlPXt7IHggfX0gLz5cclxuICAgICAqIH1cclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIEBpbnRlcm5hbHJlbWFya3NcclxuICAgICAqXHJcbiAgICAgKiBXZSBjb3VsZCBsb29rIGludG8gYSBgdXNlT25DaGFuZ2VgIGhvb2sgaWYgdGhlIGFib3ZlIGxpZmVjeWNsZSBtYW5hZ2VtZW50IHByb3ZlcyBjb25mdXNpbmcuXHJcbiAgICAgKlxyXG4gICAgICogYGBganN4XHJcbiAgICAgKiB1c2VPbkNoYW5nZSh4LCAoKSA9PiB7fSlcclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzdWJzY3JpYmVyIC0gQSBmdW5jdGlvbiB0aGF0IHJlY2VpdmVzIHRoZSBsYXRlc3QgdmFsdWUuXHJcbiAgICAgKiBAcmV0dXJucyBBIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLCB3aWxsIGNhbmNlbCB0aGlzIHN1YnNjcmlwdGlvbi5cclxuICAgICAqXHJcbiAgICAgKiBAcHVibGljXHJcbiAgICAgKi9cclxuICAgIE1vdGlvblZhbHVlLnByb3RvdHlwZS5vbkNoYW5nZSA9IGZ1bmN0aW9uIChzdWJzY3JpcHRpb24pIHtcclxuICAgICAgICBpZiAoIXRoaXMudXBkYXRlU3Vic2NyaWJlcnMpXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlU3Vic2NyaWJlcnMgPSBuZXcgU2V0KCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3Vic2NyaWJlVG8odGhpcy51cGRhdGVTdWJzY3JpYmVycywgc3Vic2NyaXB0aW9uKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEFkZHMgYSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgbm90aWZpZWQgd2hlbiB0aGUgYE1vdGlvblZhbHVlYCByZXF1ZXN0cyBhIHJlbmRlci5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc3Vic2NyaWJlciAtIEEgZnVuY3Rpb24gdGhhdCdzIHByb3ZpZGVkIHRoZSBsYXRlc3QgdmFsdWUuXHJcbiAgICAgKiBAcmV0dXJucyBBIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLCB3aWxsIGNhbmNlbCB0aGlzIHN1YnNjcmlwdGlvbi5cclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgTW90aW9uVmFsdWUucHJvdG90eXBlLm9uUmVuZGVyUmVxdWVzdCA9IGZ1bmN0aW9uIChzdWJzY3JpcHRpb24pIHtcclxuICAgICAgICBpZiAoIXRoaXMucmVuZGVyU3Vic2NyaWJlcnMpXHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyU3Vic2NyaWJlcnMgPSBuZXcgU2V0KCk7XHJcbiAgICAgICAgLy8gUmVuZGVyIGltbWVkaWF0ZWx5XHJcbiAgICAgICAgdGhpcy5ub3RpZnlTdWJzY3JpYmVyKHN1YnNjcmlwdGlvbik7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3Vic2NyaWJlVG8odGhpcy5yZW5kZXJTdWJzY3JpYmVycywgc3Vic2NyaXB0aW9uKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEF0dGFjaGVzIGEgcGFzc2l2ZSBlZmZlY3QgdG8gdGhlIGBNb3Rpb25WYWx1ZWAuXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIE1vdGlvblZhbHVlLnByb3RvdHlwZS5hdHRhY2ggPSBmdW5jdGlvbiAocGFzc2l2ZUVmZmVjdCkge1xyXG4gICAgICAgIHRoaXMucGFzc2l2ZUVmZmVjdCA9IHBhc3NpdmVFZmZlY3Q7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBzdGF0ZSBvZiB0aGUgYE1vdGlvblZhbHVlYC5cclxuICAgICAqXHJcbiAgICAgKiBAcmVtYXJrc1xyXG4gICAgICpcclxuICAgICAqIGBgYGpzeFxyXG4gICAgICogY29uc3QgeCA9IHVzZU1vdGlvblZhbHVlKDApXHJcbiAgICAgKiB4LnNldCgxMClcclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBsYXRlc3QgLSBMYXRlc3QgdmFsdWUgdG8gc2V0LlxyXG4gICAgICogQHBhcmFtIHJlbmRlciAtIFdoZXRoZXIgdG8gbm90aWZ5IHJlbmRlciBzdWJzY3JpYmVycy4gRGVmYXVsdHMgdG8gYHRydWVgXHJcbiAgICAgKlxyXG4gICAgICogQHB1YmxpY1xyXG4gICAgICovXHJcbiAgICBNb3Rpb25WYWx1ZS5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKHYsIHJlbmRlcikge1xyXG4gICAgICAgIGlmIChyZW5kZXIgPT09IHZvaWQgMCkgeyByZW5kZXIgPSB0cnVlOyB9XHJcbiAgICAgICAgaWYgKCFyZW5kZXIgfHwgIXRoaXMucGFzc2l2ZUVmZmVjdCkge1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUFuZE5vdGlmeSh2LCByZW5kZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5wYXNzaXZlRWZmZWN0KHYsIHRoaXMudXBkYXRlQW5kTm90aWZ5KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBsYXRlc3Qgc3RhdGUgb2YgYE1vdGlvblZhbHVlYFxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIC0gVGhlIGxhdGVzdCBzdGF0ZSBvZiBgTW90aW9uVmFsdWVgXHJcbiAgICAgKlxyXG4gICAgICogQHB1YmxpY1xyXG4gICAgICovXHJcbiAgICBNb3Rpb25WYWx1ZS5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnQ7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBsYXRlc3QgdmVsb2NpdHkgb2YgYE1vdGlvblZhbHVlYFxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIC0gVGhlIGxhdGVzdCB2ZWxvY2l0eSBvZiBgTW90aW9uVmFsdWVgLiBSZXR1cm5zIGAwYCBpZiB0aGUgc3RhdGUgaXMgbm9uLW51bWVyaWNhbC5cclxuICAgICAqXHJcbiAgICAgKiBAcHVibGljXHJcbiAgICAgKi9cclxuICAgIE1vdGlvblZhbHVlLnByb3RvdHlwZS5nZXRWZWxvY2l0eSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBUaGlzIGNvdWxkIGJlIGlzRmxvYXQodGhpcy5wcmV2KSAmJiBpc0Zsb2F0KHRoaXMuY3VycmVudCksIGJ1dCB0aGF0IHdvdWxkIGJlIHdhc3RlZnVsXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FuVHJhY2tWZWxvY2l0eVxyXG4gICAgICAgICAgICA/IC8vIFRoZXNlIGNhc3RzIGNvdWxkIGJlIGF2b2lkZWQgaWYgcGFyc2VGbG9hdCB3b3VsZCBiZSB0eXBlZCBiZXR0ZXJcclxuICAgICAgICAgICAgICAgIHZlbG9jaXR5UGVyU2Vjb25kKHBhcnNlRmxvYXQodGhpcy5jdXJyZW50KSAtXHJcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VGbG9hdCh0aGlzLnByZXYpLCB0aGlzLnRpbWVEZWx0YSlcclxuICAgICAgICAgICAgOiAwO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmVnaXN0ZXJzIGEgbmV3IGFuaW1hdGlvbiB0byBjb250cm9sIHRoaXMgYE1vdGlvblZhbHVlYC4gT25seSBvbmVcclxuICAgICAqIGFuaW1hdGlvbiBjYW4gZHJpdmUgYSBgTW90aW9uVmFsdWVgIGF0IG9uZSB0aW1lLlxyXG4gICAgICpcclxuICAgICAqIGBgYGpzeFxyXG4gICAgICogdmFsdWUuc3RhcnQoKVxyXG4gICAgICogYGBgXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGFuaW1hdGlvbiAtIEEgZnVuY3Rpb24gdGhhdCBzdGFydHMgdGhlIHByb3ZpZGVkIGFuaW1hdGlvblxyXG4gICAgICpcclxuICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICovXHJcbiAgICBNb3Rpb25WYWx1ZS5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoYW5pbWF0aW9uKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB0aGlzLnN0b3AoKTtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcclxuICAgICAgICAgICAgX3RoaXMuc3RvcEFuaW1hdGlvbiA9IGFuaW1hdGlvbihyZXNvbHZlKTtcclxuICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLmNsZWFyQW5pbWF0aW9uKCk7IH0pO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogU3RvcCB0aGUgY3VycmVudGx5IGFjdGl2ZSBhbmltYXRpb24uXHJcbiAgICAgKlxyXG4gICAgICogQHB1YmxpY1xyXG4gICAgICovXHJcbiAgICBNb3Rpb25WYWx1ZS5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5zdG9wQW5pbWF0aW9uKVxyXG4gICAgICAgICAgICB0aGlzLnN0b3BBbmltYXRpb24oKTtcclxuICAgICAgICB0aGlzLmNsZWFyQW5pbWF0aW9uKCk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGB0cnVlYCBpZiB0aGlzIHZhbHVlIGlzIGN1cnJlbnRseSBhbmltYXRpbmcuXHJcbiAgICAgKlxyXG4gICAgICogQHB1YmxpY1xyXG4gICAgICovXHJcbiAgICBNb3Rpb25WYWx1ZS5wcm90b3R5cGUuaXNBbmltYXRpbmcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuICEhdGhpcy5zdG9wQW5pbWF0aW9uO1xyXG4gICAgfTtcclxuICAgIE1vdGlvblZhbHVlLnByb3RvdHlwZS5jbGVhckFuaW1hdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLnN0b3BBbmltYXRpb24gPSBudWxsO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogRGVzdHJveSBhbmQgY2xlYW4gdXAgc3Vic2NyaWJlcnMgdG8gdGhpcyBgTW90aW9uVmFsdWVgLlxyXG4gICAgICpcclxuICAgICAqIFRoZSBgTW90aW9uVmFsdWVgIGhvb2tzIGxpa2UgYHVzZU1vdGlvblZhbHVlYCBhbmQgYHVzZVRyYW5zZm9ybWAgYXV0b21hdGljYWxseVxyXG4gICAgICogaGFuZGxlIHRoZSBsaWZlY3ljbGUgb2YgdGhlIHJldHVybmVkIGBNb3Rpb25WYWx1ZWAsIHNvIHRoaXMgbWV0aG9kIGlzIG9ubHkgbmVjZXNzYXJ5IGlmIHlvdSd2ZSBtYW51YWxseVxyXG4gICAgICogY3JlYXRlZCBhIGBNb3Rpb25WYWx1ZWAgdmlhIHRoZSBgbW90aW9uVmFsdWVgIGZ1bmN0aW9uLlxyXG4gICAgICpcclxuICAgICAqIEBwdWJsaWNcclxuICAgICAqL1xyXG4gICAgTW90aW9uVmFsdWUucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy51cGRhdGVTdWJzY3JpYmVycyAmJiB0aGlzLnVwZGF0ZVN1YnNjcmliZXJzLmNsZWFyKCk7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJTdWJzY3JpYmVycyAmJiB0aGlzLnJlbmRlclN1YnNjcmliZXJzLmNsZWFyKCk7XHJcbiAgICAgICAgdGhpcy5wYXJlbnQgJiYgdGhpcy5wYXJlbnQucmVtb3ZlQ2hpbGQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5zdG9wKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE1vdGlvblZhbHVlO1xyXG59KCkpO1xyXG4vKipcclxuICogQGludGVybmFsXHJcbiAqL1xyXG5mdW5jdGlvbiBtb3Rpb25WYWx1ZShpbml0LCBvcHRzKSB7XHJcbiAgICByZXR1cm4gbmV3IE1vdGlvblZhbHVlKGluaXQsIG9wdHMpO1xyXG59XG5cbi8qKlxyXG4gKiBDcmVhdGVzIGEgY29uc3RhbnQgdmFsdWUgb3ZlciB0aGUgbGlmZWN5Y2xlIG9mIGEgY29tcG9uZW50LlxyXG4gKlxyXG4gKiBFdmVuIGlmIGB1c2VNZW1vYCBpcyBwcm92aWRlZCBhbiBlbXB0eSBhcnJheSBhcyBpdHMgZmluYWwgYXJndW1lbnQsIGl0IGRvZXNuJ3Qgb2ZmZXJcclxuICogYSBndWFyYW50ZWUgdGhhdCBpdCB3b24ndCByZS1ydW4gZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMgbGF0ZXIgb24uIEJ5IHVzaW5nIGB1c2VDb25zdGFudGBcclxuICogeW91IGNhbiBlbnN1cmUgdGhhdCBpbml0aWFsaXNlcnMgZG9uJ3QgZXhlY3V0ZSB0d2ljZSBvciBtb3JlLlxyXG4gKi9cclxuZnVuY3Rpb24gdXNlQ29uc3RhbnQoaW5pdCkge1xyXG4gICAgdmFyIHJlZiA9IHVzZVJlZihudWxsKTtcclxuICAgIGlmIChyZWYuY3VycmVudCA9PT0gbnVsbCkge1xyXG4gICAgICAgIHJlZi5jdXJyZW50ID0gaW5pdCgpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlZi5jdXJyZW50O1xyXG59XG5cbnZhciBpc01vdGlvblZhbHVlID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBNb3Rpb25WYWx1ZTtcclxufTtcblxuLy8gQ3JlYXRpbmcgYSBzdHlsZXIgZmFjdG9yeSBmb3IgdGhlIGBvblVwZGF0ZWAgcHJvcCBhbGxvd3MgYWxsIHZhbHVlc1xyXG4vLyB0byBmaXJlIGFuZCB0aGUgYG9uVXBkYXRlYCBwcm9wIHdpbGwgb25seSBmaXJlIG9uY2UgcGVyIGZyYW1lXHJcbnZhciB1cGRhdGVTdHlsZXIgPSBjcmVhdGVTdHlsZXJGYWN0b3J5KHtcclxuICAgIG9uUmVhZDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbnVsbDsgfSxcclxuICAgIG9uUmVuZGVyOiBmdW5jdGlvbiAoc3RhdGUsIF9hKSB7XHJcbiAgICAgICAgdmFyIG9uVXBkYXRlID0gX2Eub25VcGRhdGU7XHJcbiAgICAgICAgcmV0dXJuIG9uVXBkYXRlKHN0YXRlKTtcclxuICAgIH0sXHJcbn0pO1xyXG52YXIgTW90aW9uVmFsdWVzTWFwID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gTW90aW9uVmFsdWVzTWFwKCkge1xyXG4gICAgICAgIHRoaXMuaGFzTW91bnRlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudmFsdWVzID0gbmV3IE1hcCgpO1xyXG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmVycyA9IG5ldyBNYXAoKTtcclxuICAgIH1cclxuICAgIE1vdGlvblZhbHVlc01hcC5wcm90b3R5cGUuaGFzID0gZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlcy5oYXMoa2V5KTtcclxuICAgIH07XHJcbiAgICBNb3Rpb25WYWx1ZXNNYXAucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZXMuc2V0KGtleSwgdmFsdWUpO1xyXG4gICAgICAgIGlmICh0aGlzLmhhc01vdW50ZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5iaW5kVmFsdWVUb091dHB1dChrZXksIHZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgTW90aW9uVmFsdWVzTWFwLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoa2V5LCBkZWZhdWx0VmFsdWUpIHtcclxuICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLnZhbHVlcy5nZXQoa2V5KTtcclxuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCAmJiBkZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB2YWx1ZSA9IG5ldyBNb3Rpb25WYWx1ZShkZWZhdWx0VmFsdWUpO1xyXG4gICAgICAgICAgICB0aGlzLnNldChrZXksIHZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfTtcclxuICAgIE1vdGlvblZhbHVlc01hcC5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlcy5mb3JFYWNoKGNhbGxiYWNrKTtcclxuICAgIH07XHJcbiAgICBNb3Rpb25WYWx1ZXNNYXAucHJvdG90eXBlLmJpbmRWYWx1ZVRvT3V0cHV0ID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBvblJlbmRlciA9IGZ1bmN0aW9uICh2KSB7IHJldHVybiBfdGhpcy5vdXRwdXQgJiYgX3RoaXMub3V0cHV0KGtleSwgdik7IH07XHJcbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlT25SZW5kZXIgPSB2YWx1ZS5vblJlbmRlclJlcXVlc3Qob25SZW5kZXIpO1xyXG4gICAgICAgIHZhciBvbkNoYW5nZSA9IGZ1bmN0aW9uICh2KSB7XHJcbiAgICAgICAgICAgIF90aGlzLm9uVXBkYXRlICYmIF90aGlzLm9uVXBkYXRlLnNldChrZXksIHYpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlT25DaGFuZ2UgPSB2YWx1ZS5vbkNoYW5nZShvbkNoYW5nZSk7XHJcbiAgICAgICAgaWYgKHRoaXMudW5zdWJzY3JpYmVycy5oYXMoa2V5KSkge1xyXG4gICAgICAgICAgICB0aGlzLnVuc3Vic2NyaWJlcnMuZ2V0KGtleSkoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy51bnN1YnNjcmliZXJzLnNldChrZXksIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdW5zdWJzY3JpYmVPblJlbmRlcigpO1xyXG4gICAgICAgICAgICB1bnN1YnNjcmliZU9uQ2hhbmdlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgTW90aW9uVmFsdWVzTWFwLnByb3RvdHlwZS5zZXRPblVwZGF0ZSA9IGZ1bmN0aW9uIChvblVwZGF0ZSkge1xyXG4gICAgICAgIHRoaXMub25VcGRhdGUgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgaWYgKG9uVXBkYXRlKSB7XHJcbiAgICAgICAgICAgIHRoaXMub25VcGRhdGUgPSB1cGRhdGVTdHlsZXIoeyBvblVwZGF0ZTogb25VcGRhdGUgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIE1vdGlvblZhbHVlc01hcC5wcm90b3R5cGUuc2V0VHJhbnNmb3JtVGVtcGxhdGUgPSBmdW5jdGlvbiAodHJhbnNmb3JtVGVtcGxhdGUpIHtcclxuICAgICAgICBpZiAodGhpcy50cmFuc2Zvcm1UZW1wbGF0ZSAhPT0gdHJhbnNmb3JtVGVtcGxhdGUpIHtcclxuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1UZW1wbGF0ZSA9IHRyYW5zZm9ybVRlbXBsYXRlO1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVRyYW5zZm9ybVRlbXBsYXRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIE1vdGlvblZhbHVlc01hcC5wcm90b3R5cGUuZ2V0VHJhbnNmb3JtVGVtcGxhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNmb3JtVGVtcGxhdGU7XHJcbiAgICB9O1xyXG4gICAgTW90aW9uVmFsdWVzTWFwLnByb3RvdHlwZS51cGRhdGVUcmFuc2Zvcm1UZW1wbGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5vdXRwdXQpIHtcclxuICAgICAgICAgICAgdGhpcy5vdXRwdXQoXCJ0cmFuc2Zvcm1cIiwgdGhpcy50cmFuc2Zvcm1UZW1wbGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIE1vdGlvblZhbHVlc01hcC5wcm90b3R5cGUubW91bnQgPSBmdW5jdGlvbiAob3V0cHV0KSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB0aGlzLmhhc01vdW50ZWQgPSB0cnVlO1xyXG4gICAgICAgIGlmIChvdXRwdXQpXHJcbiAgICAgICAgICAgIHRoaXMub3V0cHV0ID0gb3V0cHV0O1xyXG4gICAgICAgIHRoaXMudmFsdWVzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHsgcmV0dXJuIF90aGlzLmJpbmRWYWx1ZVRvT3V0cHV0KGtleSwgdmFsdWUpOyB9KTtcclxuICAgICAgICB0aGlzLnVwZGF0ZVRyYW5zZm9ybVRlbXBsYXRlKCk7XHJcbiAgICB9O1xyXG4gICAgTW90aW9uVmFsdWVzTWFwLnByb3RvdHlwZS51bm1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy52YWx1ZXMuZm9yRWFjaChmdW5jdGlvbiAoX3ZhbHVlLCBrZXkpIHtcclxuICAgICAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gX3RoaXMudW5zdWJzY3JpYmVycy5nZXQoa2V5KTtcclxuICAgICAgICAgICAgdW5zdWJzY3JpYmUgJiYgdW5zdWJzY3JpYmUoKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gTW90aW9uVmFsdWVzTWFwO1xyXG59KCkpO1xyXG52YXIgc3BlY2lhbE1vdGlvblZhbHVlUHJvcHMgPSBuZXcgU2V0KFtcImRyYWdPcmlnaW5YXCIsIFwiZHJhZ09yaWdpbllcIl0pO1xyXG52YXIgdXNlTW90aW9uVmFsdWVzID0gZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICB2YXIgbW90aW9uVmFsdWVzID0gdXNlQ29uc3RhbnQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBtYXAgPSBuZXcgTW90aW9uVmFsdWVzTWFwKCk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogTG9vcCB0aHJvdWdoIGV2ZXJ5IHByb3AgYW5kIGFkZCBhbnkgZGV0ZWN0ZWQgYE1vdGlvblZhbHVlYHMuIFRoaXMgaXMgU1ZHLXNwZWNpZmljXHJcbiAgICAgICAgICogY29kZSB0aGF0IHNob3VsZCBiZSBleHRyYWN0ZWQsIHBlcmhhcHMgY29uc2lkZXJlZCBob2xsaXN0aWNhbGx5IHdpdGggYHVzZU1vdGlvblN0eWxlc2AuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiA8bW90aW9uLmNpcmNsZSBjeD17bW90aW9uVmFsdWUoMCl9IC8+XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XHJcbiAgICAgICAgICAgIGlmIChpc01vdGlvblZhbHVlKHByb3BzW2tleV0pICYmXHJcbiAgICAgICAgICAgICAgICAhc3BlY2lhbE1vdGlvblZhbHVlUHJvcHMuaGFzKGtleSkpIHtcclxuICAgICAgICAgICAgICAgIG1hcC5zZXQoa2V5LCBwcm9wc1trZXldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbWFwO1xyXG4gICAgfSk7XHJcbiAgICBtb3Rpb25WYWx1ZXMuc2V0T25VcGRhdGUocHJvcHMub25VcGRhdGUpO1xyXG4gICAgbW90aW9uVmFsdWVzLnNldFRyYW5zZm9ybVRlbXBsYXRlKHByb3BzLnRyYW5zZm9ybVRlbXBsYXRlKTtcclxuICAgIHJldHVybiBtb3Rpb25WYWx1ZXM7XHJcbn07XG5cbnZhciBzZXNzaW9uID0gbnVsbDtcclxudmFyIHN5bmNSZW5kZXJTZXNzaW9uID0ge1xyXG4gICAgaXNPcGVuOiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZXNzaW9uICE9PSBudWxsOyB9LFxyXG4gICAgb3BlbjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGludmFyaWFudCghc2Vzc2lvbiwgXCJTeW5jIHJlbmRlciBzZXNzaW9uIGFscmVhZHkgb3BlblwiKTtcclxuICAgICAgICBzZXNzaW9uID0gW107XHJcbiAgICB9LFxyXG4gICAgZmx1c2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpbnZhcmlhbnQoc2Vzc2lvbiAhPT0gbnVsbCwgXCJObyBzeW5jIHJlbmRlciBzZXNzaW9uIGZvdW5kXCIpO1xyXG4gICAgICAgIHNlc3Npb24gJiYgc2Vzc2lvbi5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZXIpIHsgcmV0dXJuIHN0eWxlci5yZW5kZXIoKTsgfSk7XHJcbiAgICAgICAgc2Vzc2lvbiA9IG51bGw7XHJcbiAgICB9LFxyXG4gICAgcHVzaDogZnVuY3Rpb24gKHN0eWxlcikge1xyXG4gICAgICAgIGludmFyaWFudChzZXNzaW9uICE9PSBudWxsLCBcIk5vIHN5bmMgcmVuZGVyIHNlc3Npb24gZm91bmRcIik7XHJcbiAgICAgICAgc2Vzc2lvbiAmJiBzZXNzaW9uLnB1c2goc3R5bGVyKTtcclxuICAgIH0sXHJcbn07XG5cbi8qKlxyXG4gKiBgdXNlRWZmZWN0YCBnZXRzIHJlc29sdmVkIGJvdHRvbS11cC4gV2UgZGVmZXIgc29tZSBvcHRpb25hbCBmdW5jdGlvbmFsaXR5IHRvIGNoaWxkXHJcbiAqIGNvbXBvbmVudHMsIHNvIHRvIGVuc3VyZSBldmVyeXRoaW5nIHJ1bnMgY29ycmVjdGx5IHdlIGV4cG9ydCB0aGUgcmVmLWJpbmRpbmcgbG9naWNcclxuICogdG8gYSBuZXcgY29tcG9uZW50IHJhdGhlciB0aGFuIGluIGB1c2VNb3Rpb25WYWx1ZXNgLlxyXG4gKi9cclxudmFyIE1vdW50Q29tcG9uZW50ID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgcmVmID0gX2EuaW5uZXJSZWYsIHZhbHVlcyA9IF9hLnZhbHVlcywgaXNTdGF0aWMgPSBfYS5pc1N0YXRpYztcclxuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaW52YXJpYW50KHJlZi5jdXJyZW50IGluc3RhbmNlb2YgRWxlbWVudCwgXCJObyBgcmVmYCBmb3VuZC4gRW5zdXJlIGNvbXBvbmVudHMgY3JlYXRlZCB3aXRoIGBtb3Rpb24uY3VzdG9tYCBmb3J3YXJkIHJlZnMgdXNpbmcgYFJlYWN0LmZvcndhcmRSZWZgXCIpO1xyXG4gICAgICAgIHZhciBkb21TdHlsZXIgPSBzdHlsZXIocmVmLmN1cnJlbnQsIHtcclxuICAgICAgICAgICAgcHJlcGFyc2VPdXRwdXQ6IGZhbHNlLFxyXG4gICAgICAgICAgICBlbmFibGVIYXJkd2FyZUFjY2VsZXJhdGlvbjogIWlzU3RhdGljLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHZhbHVlcy5tb3VudChmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgICAgICBkb21TdHlsZXIuc2V0KGtleSwgdmFsdWUpO1xyXG4gICAgICAgICAgICBpZiAoc3luY1JlbmRlclNlc3Npb24uaXNPcGVuKCkpIHtcclxuICAgICAgICAgICAgICAgIHN5bmNSZW5kZXJTZXNzaW9uLnB1c2goZG9tU3R5bGVyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB2YWx1ZXMudW5tb3VudCgpOyB9O1xyXG4gICAgfSwgW10pO1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbn07XHJcbnZhciBNb3VudCA9IG1lbW8oTW91bnRDb21wb25lbnQpO1xuXG52YXIgY3JlYXRlVmFsdWVSZXNvbHZlciA9IGZ1bmN0aW9uIChyZXNvbHZlcikgeyByZXR1cm4gZnVuY3Rpb24gKHZhbHVlcykge1xyXG4gICAgdmFyIHJlc29sdmVkVmFsdWVzID0ge307XHJcbiAgICB2YWx1ZXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGtleSkgeyByZXR1cm4gKHJlc29sdmVkVmFsdWVzW2tleV0gPSByZXNvbHZlcih2YWx1ZSkpOyB9KTtcclxuICAgIHJldHVybiByZXNvbHZlZFZhbHVlcztcclxufTsgfTtcclxudmFyIHJlc29sdmVDdXJyZW50ID0gY3JlYXRlVmFsdWVSZXNvbHZlcihmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHZhbHVlLmdldCgpOyB9KTtcblxudmFyIHRyYW5zZm9ybU9yaWdpblByb3BzID0gbmV3IFNldChbXCJvcmlnaW5YXCIsIFwib3JpZ2luWVwiLCBcIm9yaWdpblpcIl0pO1xyXG52YXIgaXNUcmFuc2Zvcm1PcmlnaW5Qcm9wID0gZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gdHJhbnNmb3JtT3JpZ2luUHJvcHMuaGFzKGtleSk7IH07XHJcbnZhciBidWlsZFN0eWxlQXR0ciA9IGZ1bmN0aW9uICh2YWx1ZXMsIHN0eWxlUHJvcCwgaXNTdGF0aWMpIHtcclxuICAgIHZhciBtb3Rpb25WYWx1ZVN0eWxlcyA9IHJlc29sdmVDdXJyZW50KHZhbHVlcyk7XHJcbiAgICB2YXIgdHJhbnNmb3JtVGVtcGxhdGUgPSB2YWx1ZXMuZ2V0VHJhbnNmb3JtVGVtcGxhdGUoKTtcclxuICAgIGlmICh0cmFuc2Zvcm1UZW1wbGF0ZSkge1xyXG4gICAgICAgIC8vIElmIGB0cmFuc2Zvcm1gIGhhcyBiZWVuIG1hbnVhbGx5IHNldCBhcyBhIHN0cmluZywgcGFzcyB0aGF0IHRocm91Z2ggdGhlIHRlbXBsYXRlXHJcbiAgICAgICAgLy8gb3RoZXJ3aXNlIHBhc3MgaXQgZm9yd2FyZCB0byBTdHlsZWZpcmUncyBzdHlsZSBwcm9wZXJ0eSBidWlsZGVyXHJcbiAgICAgICAgbW90aW9uVmFsdWVTdHlsZXMudHJhbnNmb3JtID0gc3R5bGVQcm9wLnRyYW5zZm9ybVxyXG4gICAgICAgICAgICA/IHRyYW5zZm9ybVRlbXBsYXRlKHt9LCBzdHlsZVByb3AudHJhbnNmb3JtKVxyXG4gICAgICAgICAgICA6IHRyYW5zZm9ybVRlbXBsYXRlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGJ1aWxkU3R5bGVQcm9wZXJ0eShfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc3R5bGVQcm9wKSwgbW90aW9uVmFsdWVTdHlsZXMpLCAhaXNTdGF0aWMpO1xyXG59O1xyXG52YXIgdXNlTW90aW9uU3R5bGVzID0gZnVuY3Rpb24gKHZhbHVlcywgc3R5bGVQcm9wLCBpc1N0YXRpYywgdHJhbnNmb3JtVmFsdWVzKSB7XHJcbiAgICBpZiAoc3R5bGVQcm9wID09PSB2b2lkIDApIHsgc3R5bGVQcm9wID0ge307IH1cclxuICAgIHZhciBzdHlsZSA9IHt9O1xyXG4gICAgdmFyIHByZXZNb3Rpb25TdHlsZXMgPSB1c2VSZWYoe30pLmN1cnJlbnQ7XHJcbiAgICBmb3IgKHZhciBrZXkgaW4gc3R5bGVQcm9wKSB7XHJcbiAgICAgICAgdmFyIHRoaXNTdHlsZSA9IHN0eWxlUHJvcFtrZXldO1xyXG4gICAgICAgIGlmIChpc01vdGlvblZhbHVlKHRoaXNTdHlsZSkpIHtcclxuICAgICAgICAgICAgLy8gSWYgdGhpcyBpcyBhIG1vdGlvbiB2YWx1ZSwgYWRkIGl0IHRvIG91ciBNb3Rpb25WYWx1ZXNNYXBcclxuICAgICAgICAgICAgdmFsdWVzLnNldChrZXksIHRoaXNTdHlsZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKCFpc1N0YXRpYyAmJlxyXG4gICAgICAgICAgICAoaXNUcmFuc2Zvcm1Qcm9wKGtleSkgfHwgaXNUcmFuc2Zvcm1PcmlnaW5Qcm9wKGtleSkpKSB7XHJcbiAgICAgICAgICAgIC8vIE9yIGlmIGl0J3MgYSB0cmFuc2Zvcm0gcHJvcCwgY3JlYXRlIGEgbW90aW9uIHZhbHVlIChvciB1cGRhdGUgYW4gZXhpc3Rpbmcgb25lKVxyXG4gICAgICAgICAgICAvLyB0byBlbnN1cmUgU3R5bGVmaXJlIGNhbiByZWNvbmNpbGUgYWxsIHRoZSB0cmFuc2Zvcm0gdmFsdWVzIHRvZ2V0aGVyLlxyXG4gICAgICAgICAgICAvLyBBIGZ1cnRoZXIgaXRlcmF0aW9uIG9uIHRoaXMgd291bGQgYmUgdG8gY3JlYXRlIGEgc2luZ2xlIHN0eWxlciBwZXIgY29tcG9uZW50IHRoYXQgZ2V0c1xyXG4gICAgICAgICAgICAvLyB1c2VkIGluIHRoZSBET00gcmVuZGVyZXIncyBidWlsZFN0eWxlQXR0ciAqYW5kKiBhbmltYXRpb25zLCB0aGVuIHdlIHdvdWxkIG9ubHlcclxuICAgICAgICAgICAgLy8gaGF2ZSB0byBjb252ZXJ0IGFuaW1hdGluZyB2YWx1ZXMgdG8gYE1vdGlvblZhbHVlc2AgKHdlIGNvdWxkIHByb2JhYmx5IHJlbW92ZSB0aGlzIGVudGlyZSBmdW5jdGlvbikuXHJcbiAgICAgICAgICAgIC8vIFRoZSBvbmx5IGFyY2hpdGVjdHVyYWwgY29uc2lkZXJhdGlvbiBpcyB0byBhbGxvdyBTdHlsZWZpcmUgdG8gaGF2ZSBlbGVtZW50cyBtb3VudGVkIGFmdGVyXHJcbiAgICAgICAgICAgIC8vIGEgc3R5bGVyIGlzIGNyZWF0ZWQuXHJcbiAgICAgICAgICAgIGlmICghdmFsdWVzLmhhcyhrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBJZiBpdCBkb2Vzbid0IGV4aXN0IGFzIGEgbW90aW9uIHZhbHVlLCBjcmVhdGUgaXRcclxuICAgICAgICAgICAgICAgIHZhbHVlcy5zZXQoa2V5LCBtb3Rpb25WYWx1ZSh0aGlzU3R5bGUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vIE90aGVyd2lzZSBvbmx5IHVwZGF0ZSBpdCBpZiBpdCdzIGNoYW5nZWQgZnJvbSBhIHByZXZpb3VzIHJlbmRlclxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXNTdHlsZSAhPT0gcHJldk1vdGlvblN0eWxlc1trZXldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gdmFsdWVzLmdldChrZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlLnNldCh0aGlzU3R5bGUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHByZXZNb3Rpb25TdHlsZXNba2V5XSA9IHRoaXNTdHlsZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHN0eWxlW2tleV0gPSB0aGlzU3R5bGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRyYW5zZm9ybVZhbHVlcyA/IHRyYW5zZm9ybVZhbHVlcyhzdHlsZSkgOiBzdHlsZTtcclxufTtcblxudmFyIGlzS2V5ZnJhbWVzVGFyZ2V0ID0gZnVuY3Rpb24gKHYpIHtcclxuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHYpO1xyXG59O1xuXG52YXIgaXNDdXN0b21WYWx1ZSA9IGZ1bmN0aW9uICh2KSB7XHJcbiAgICByZXR1cm4gQm9vbGVhbih2ICYmIHR5cGVvZiB2ID09PSBcIm9iamVjdFwiICYmIHYubWl4ICYmIHYudG9WYWx1ZSk7XHJcbn07XHJcbnZhciByZXNvbHZlRmluYWxWYWx1ZUluS2V5ZnJhbWVzID0gZnVuY3Rpb24gKHYpIHtcclxuICAgIC8vIFRPRE8gbWF5YmUgdGhyb3cgaWYgdi5sZW5ndGggLSAxIGlzIHBsYWNlaG9sZGVyIHRva2VuP1xyXG4gICAgcmV0dXJuIGlzS2V5ZnJhbWVzVGFyZ2V0KHYpID8gdlt2Lmxlbmd0aCAtIDFdIHx8IDAgOiB2O1xyXG59O1xuXG52YXIgYXV0byA9IHtcclxuICAgIHRlc3Q6IGZ1bmN0aW9uICh2KSB7IHJldHVybiB2ID09PSBcImF1dG9cIjsgfSxcclxuICAgIHBhcnNlOiBmdW5jdGlvbiAodikgeyByZXR1cm4gdjsgfSxcclxufTtcclxudmFyIGRpbWVuc2lvblR5cGVzID0gW251bWJlciwgcHgsIHBlcmNlbnQsIGRlZ3JlZXMsIHZ3LCB2aCwgYXV0b107XHJcbnZhciB2YWx1ZVR5cGVzID0gX19zcHJlYWRBcnJheXMoZGltZW5zaW9uVHlwZXMsIFtjb2xvciwgY29tcGxleF0pO1xyXG52YXIgdGVzdFZhbHVlVHlwZSA9IGZ1bmN0aW9uICh2KSB7IHJldHVybiBmdW5jdGlvbiAodHlwZSkgeyByZXR1cm4gdHlwZS50ZXN0KHYpOyB9OyB9O1xyXG52YXIgZ2V0RGltZW5zaW9uVmFsdWVUeXBlID0gZnVuY3Rpb24gKHYpIHtcclxuICAgIHJldHVybiBkaW1lbnNpb25UeXBlcy5maW5kKHRlc3RWYWx1ZVR5cGUodikpO1xyXG59O1xyXG52YXIgZ2V0VmFsdWVUeXBlID0gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHZhbHVlVHlwZXMuZmluZCh0ZXN0VmFsdWVUeXBlKHYpKTsgfTtcblxudmFyIHVuZGVyRGFtcGVkU3ByaW5nID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKHtcclxuICAgIHR5cGU6IFwic3ByaW5nXCIsXHJcbiAgICBzdGlmZm5lc3M6IDUwMCxcclxuICAgIGRhbXBpbmc6IDI1LFxyXG4gICAgcmVzdERlbHRhOiAwLjUsXHJcbiAgICByZXN0U3BlZWQ6IDEwLFxyXG59KTsgfTtcclxudmFyIG92ZXJEYW1wZWRTcHJpbmcgPSBmdW5jdGlvbiAodG8pIHsgcmV0dXJuICh7XHJcbiAgICB0eXBlOiBcInNwcmluZ1wiLFxyXG4gICAgc3RpZmZuZXNzOiA3MDAsXHJcbiAgICBkYW1waW5nOiB0byA9PT0gMCA/IDEwMCA6IDM1LFxyXG59KTsgfTtcclxudmFyIGxpbmVhclR3ZWVuID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKHtcclxuICAgIGVhc2U6IFwibGluZWFyXCIsXHJcbiAgICBkdXJhdGlvbjogMC4zLFxyXG59KTsgfTtcclxudmFyIGtleWZyYW1lcyA9IGZ1bmN0aW9uICh2YWx1ZXMpIHsgcmV0dXJuICh7XHJcbiAgICB0eXBlOiBcImtleWZyYW1lc1wiLFxyXG4gICAgZHVyYXRpb246IDAuOCxcclxuICAgIHZhbHVlczogdmFsdWVzLFxyXG59KTsgfTtcclxudmFyIGRlZmF1bHRUcmFuc2l0aW9ucyA9IHtcclxuICAgIHg6IHVuZGVyRGFtcGVkU3ByaW5nLFxyXG4gICAgeTogdW5kZXJEYW1wZWRTcHJpbmcsXHJcbiAgICB6OiB1bmRlckRhbXBlZFNwcmluZyxcclxuICAgIHJvdGF0ZTogdW5kZXJEYW1wZWRTcHJpbmcsXHJcbiAgICByb3RhdGVYOiB1bmRlckRhbXBlZFNwcmluZyxcclxuICAgIHJvdGF0ZVk6IHVuZGVyRGFtcGVkU3ByaW5nLFxyXG4gICAgcm90YXRlWjogdW5kZXJEYW1wZWRTcHJpbmcsXHJcbiAgICBzY2FsZVg6IG92ZXJEYW1wZWRTcHJpbmcsXHJcbiAgICBzY2FsZVk6IG92ZXJEYW1wZWRTcHJpbmcsXHJcbiAgICBzY2FsZTogb3ZlckRhbXBlZFNwcmluZyxcclxuICAgIG9wYWNpdHk6IGxpbmVhclR3ZWVuLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiBsaW5lYXJUd2VlbixcclxuICAgIGNvbG9yOiBsaW5lYXJUd2VlbixcclxuICAgIGRlZmF1bHQ6IG92ZXJEYW1wZWRTcHJpbmcsXHJcbn07XHJcbnZhciBnZXREZWZhdWx0VHJhbnNpdGlvbiA9IGZ1bmN0aW9uICh2YWx1ZUtleSwgdG8pIHtcclxuICAgIHZhciB0cmFuc2l0aW9uRmFjdG9yeTtcclxuICAgIGlmIChpc0tleWZyYW1lc1RhcmdldCh0bykpIHtcclxuICAgICAgICB0cmFuc2l0aW9uRmFjdG9yeSA9IGtleWZyYW1lcztcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHRyYW5zaXRpb25GYWN0b3J5ID1cclxuICAgICAgICAgICAgZGVmYXVsdFRyYW5zaXRpb25zW3ZhbHVlS2V5XSB8fCBkZWZhdWx0VHJhbnNpdGlvbnMuZGVmYXVsdDtcclxuICAgIH1cclxuICAgIHJldHVybiBfX2Fzc2lnbih7IHRvOiB0byB9LCB0cmFuc2l0aW9uRmFjdG9yeSh0bykpO1xyXG59O1xuXG4vKipcclxuICogQSBQb3Btb3Rpb24gYWN0aW9uIHRoYXQgYWNjZXB0cyBhIHNpbmdsZSBgdG9gIHByb3AuIFdoZW4gaXQgc3RhcnRzLCBpdCBpbW1lZGlhdGVseVxyXG4gKiB1cGRhdGVzIHdpdGggYHRvYCBhbmQgdGhlbiBjb21wbGV0ZXMuIEJ5IHVzaW5nIHRoaXMgd2UgY2FuIGNvbXBvc2UgaW5zdGFudCB0cmFuc2l0aW9uc1xyXG4gKiBpbiB3aXRoIHRoZSBzYW1lIGxvZ2ljIHRoYXQgYXBwbGllcyBgZGVsYXlgIG9yIHJldHVybnMgYSBgUHJvbWlzZWAgZXRjLlxyXG4gKlxyXG4gKiBBY2NlcHRpbmcgYGR1cmF0aW9uYCBpcyBhIGxpdHRsZSBiaXQgb2YgYSBoYWNrIHRoYXQgc2ltcGx5IGRlZmVycyB0aGUgY29tcGxldGV0aW9uIG9mXHJcbiAqIHRoZSBhbmltYXRpb24gdW50aWwgYWZ0ZXIgdGhlIGR1cmF0aW9uIGZpbmlzaGVzLiBUaGlzIGlzIGZvciBzaXR1YXRpb25zIHdoZW4geW91J3JlICoqb25seSoqXHJcbiAqIGFuaW1hdGluZyBub24tYW5pbWF0YWJsZSB2YWx1ZXMgYW5kIHRoZW4gc2V0dGluZyBzb21ldGhpbmcgb24gYHRyYW5zaXRpb25FbmRgLiBSZWFsbHlcclxuICogeW91IHdhbnQgdGhpcyB0byBmaXJlIGFmdGVyIHRoZSBcImFuaW1hdGlvblwiIGZpbmlzaGVzLCByYXRoZXIgdGhhbiBpbnN0YW50bHkuXHJcbiAqXHJcbiAqIGBgYFxyXG4gKiBhbmltYXRlPXt7XHJcbiAqICAgZGlzcGxheTogJ2Jsb2NrJyxcclxuICogICB0cmFuc2l0aW9uRW5kOiB7IGRpc3BsYXk6ICdub25lJyB9XHJcbiAqIH19XHJcbiAqIGBgYFxyXG4gKi9cclxudmFyIGp1c3QgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgIHZhciB0byA9IF9hLnRvLCBkdXJhdGlvbiA9IF9hLmR1cmF0aW9uO1xyXG4gICAgcmV0dXJuIGFjdGlvbihmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICB2YXIgdXBkYXRlID0gX2EudXBkYXRlLCBjb21wbGV0ZSA9IF9hLmNvbXBsZXRlO1xyXG4gICAgICAgIHVwZGF0ZSh0byk7XHJcbiAgICAgICAgZHVyYXRpb24gPyBkZWxheShkdXJhdGlvbikuc3RhcnQoeyBjb21wbGV0ZTogY29tcGxldGUgfSkgOiBjb21wbGV0ZSgpO1xyXG4gICAgfSk7XHJcbn07XG5cbnZhciBlYXNpbmdEZWZpbml0aW9uVG9GdW5jdGlvbiA9IGZ1bmN0aW9uIChkZWZpbml0aW9uKSB7XHJcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkZWZpbml0aW9uKSkge1xyXG4gICAgICAgIC8vIElmIGN1YmljIGJlemllciBkZWZpbml0aW9uLCBjcmVhdGUgYmV6aWVyIGN1cnZlXHJcbiAgICAgICAgaW52YXJpYW50KGRlZmluaXRpb24ubGVuZ3RoID09PSA0LCBcIkN1YmljIGJlemllciBhcnJheXMgbXVzdCBjb250YWluIGZvdXIgbnVtZXJpY2FsIHZhbHVlcy5cIik7XHJcbiAgICAgICAgdmFyIHgxID0gZGVmaW5pdGlvblswXSwgeTEgPSBkZWZpbml0aW9uWzFdLCB4MiA9IGRlZmluaXRpb25bMl0sIHkyID0gZGVmaW5pdGlvblszXTtcclxuICAgICAgICByZXR1cm4gY3ViaWNCZXppZXIoeDEsIHkxLCB4MiwgeTIpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAodHlwZW9mIGRlZmluaXRpb24gPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICAvLyBFbHNlIGxvb2t1cCBmcm9tIHRhYmxlXHJcbiAgICAgICAgaW52YXJpYW50KGVhc2luZ0xvb2t1cFtkZWZpbml0aW9uXSAhPT0gdW5kZWZpbmVkLCBcIkludmFsaWQgZWFzaW5nIHR5cGUgJ1wiICsgZGVmaW5pdGlvbiArIFwiJ1wiKTtcclxuICAgICAgICByZXR1cm4gZWFzaW5nTG9va3VwW2RlZmluaXRpb25dO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGRlZmluaXRpb247XHJcbn07XHJcbnZhciBpc0Vhc2luZ0FycmF5ID0gZnVuY3Rpb24gKGVhc2UpIHtcclxuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGVhc2UpICYmIHR5cGVvZiBlYXNlWzBdICE9PSBcIm51bWJlclwiO1xyXG59O1xuXG52YXIgaXNEdXJhdGlvbkFuaW1hdGlvbiA9IGZ1bmN0aW9uICh2KSB7XHJcbiAgICByZXR1cm4gdi5oYXNPd25Qcm9wZXJ0eShcImR1cmF0aW9uXCIpIHx8IHYuaGFzT3duUHJvcGVydHkoXCJyZXBlYXREZWxheVwiKTtcclxufTtcblxuLyoqXHJcbiAqIENoZWNrIGlmIGEgdmFsdWUgaXMgYW5pbWF0YWJsZS4gRXhhbXBsZXM6XHJcbiAqXHJcbiAqIOKchTogMTAwLCBcIjEwMHB4XCIsIFwiI2ZmZlwiXHJcbiAqIOKdjDogXCJibG9ja1wiLCBcInVybCgyLmpwZylcIlxyXG4gKiBAcGFyYW0gdmFsdWVcclxuICpcclxuICogQGludGVybmFsXHJcbiAqL1xyXG52YXIgaXNBbmltYXRhYmxlID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcclxuICAgIC8vIElmIHRoZSBsaXN0IG9mIGtleXMgdGF0IG1pZ2h0IGJlIG5vbi1hbmltYXRhYmxlIGdyb3dzLCByZXBsYWNlIHdpdGggU2V0XHJcbiAgICBpZiAoa2V5ID09PSBcInpJbmRleFwiKVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIC8vIElmIGl0J3MgYSBudW1iZXIgb3IgYSBrZXlmcmFtZXMgYXJyYXksIHdlIGNhbiBhbmltYXRlIGl0LiBXZSBtaWdodCBhdCBzb21lIHBvaW50XHJcbiAgICAvLyBuZWVkIHRvIGRvIGEgZGVlcCBpc0FuaW1hdGFibGUgY2hlY2sgb2Yga2V5ZnJhbWVzLCBvciBsZXQgUG9wbW90aW9uIGhhbmRsZSB0aGlzLFxyXG4gICAgLy8gYnV0IGZvciBub3cgbGV0cyBsZWF2ZSBpdCBsaWtlIHRoaXMgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnNcclxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCIgfHwgQXJyYXkuaXNBcnJheSh2YWx1ZSkpXHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIC8vIEl0J3MgYW5pbWF0YWJsZSBpZiB3ZSBoYXZlIGEgc3RyaW5nXHJcbiAgICAgICAgY29tcGxleC50ZXN0KHZhbHVlKSAmJiAvLyBBbmQgaXQgY29udGFpbnMgbnVtYmVycyBhbmQvb3IgY29sb3JzXHJcbiAgICAgICAgIXZhbHVlLnN0YXJ0c1dpdGgoXCJ1cmwoXCIpIC8vIFVubGVzcyBpdCBzdGFydHMgd2l0aCBcInVybChcIlxyXG4gICAgKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn07XG5cbi8qKlxyXG4gKiBDb252ZXJ0cyBzZWNvbmRzIHRvIG1pbGxpc2Vjb25kc1xyXG4gKlxyXG4gKiBAcGFyYW0gc2Vjb25kcyAtIFRpbWUgaW4gc2Vjb25kcy5cclxuICogQHJldHVybiBtaWxsaXNlY29uZHMgLSBDb252ZXJ0ZWQgdGltZSBpbiBtaWxsaXNlY29uZHMuXHJcbiAqL1xyXG52YXIgc2Vjb25kc1RvTWlsbGlzZWNvbmRzID0gZnVuY3Rpb24gKHNlY29uZHMpIHsgcmV0dXJuIHNlY29uZHMgKiAxMDAwOyB9O1xuXG52YXIgdHJhbnNpdGlvbnMgPSB7IHR3ZWVuOiB0d2Vlbiwgc3ByaW5nOiBzcHJpbmcsIGtleWZyYW1lczoga2V5ZnJhbWVzJDEsIGluZXJ0aWE6IGluZXJ0aWEsIGp1c3Q6IGp1c3QgfTtcclxudmFyIHRyYW5zaXRpb25PcHRpb25QYXJzZXIgPSB7XHJcbiAgICB0d2VlbjogZnVuY3Rpb24gKG9wdHMpIHtcclxuICAgICAgICBpZiAob3B0cy5lYXNlKSB7XHJcbiAgICAgICAgICAgIHZhciBlYXNlID0gaXNFYXNpbmdBcnJheShvcHRzLmVhc2UpID8gb3B0cy5lYXNlWzBdIDogb3B0cy5lYXNlO1xyXG4gICAgICAgICAgICBvcHRzLmVhc2UgPSBlYXNpbmdEZWZpbml0aW9uVG9GdW5jdGlvbihlYXNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG9wdHM7XHJcbiAgICB9LFxyXG4gICAga2V5ZnJhbWVzOiBmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICB2YXIgZnJvbSA9IF9hLmZyb20sIHRvID0gX2EudG8sIHZlbG9jaXR5ID0gX2EudmVsb2NpdHksIG9wdHMgPSBfX3Jlc3QoX2EsIFtcImZyb21cIiwgXCJ0b1wiLCBcInZlbG9jaXR5XCJdKTtcclxuICAgICAgICBpZiAob3B0cy52YWx1ZXMgJiYgb3B0cy52YWx1ZXNbMF0gPT09IG51bGwpIHtcclxuICAgICAgICAgICAgdmFyIHZhbHVlcyA9IF9fc3ByZWFkQXJyYXlzKG9wdHMudmFsdWVzKTtcclxuICAgICAgICAgICAgdmFsdWVzWzBdID0gZnJvbTtcclxuICAgICAgICAgICAgb3B0cy52YWx1ZXMgPSB2YWx1ZXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChvcHRzLmVhc2UpIHtcclxuICAgICAgICAgICAgb3B0cy5lYXNpbmdzID0gaXNFYXNpbmdBcnJheShvcHRzLmVhc2UpXHJcbiAgICAgICAgICAgICAgICA/IG9wdHMuZWFzZS5tYXAoZWFzaW5nRGVmaW5pdGlvblRvRnVuY3Rpb24pXHJcbiAgICAgICAgICAgICAgICA6IGVhc2luZ0RlZmluaXRpb25Ub0Z1bmN0aW9uKG9wdHMuZWFzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG9wdHMuZWFzZSA9IGxpbmVhcjtcclxuICAgICAgICByZXR1cm4gb3B0cztcclxuICAgIH0sXHJcbn07XHJcbnZhciBpc1RyYW5zaXRpb25EZWZpbmVkID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgd2hlbiA9IF9hLndoZW4sIGRlbGF5ID0gX2EuZGVsYXksIGRlbGF5Q2hpbGRyZW4gPSBfYS5kZWxheUNoaWxkcmVuLCBzdGFnZ2VyQ2hpbGRyZW4gPSBfYS5zdGFnZ2VyQ2hpbGRyZW4sIHN0YWdnZXJEaXJlY3Rpb24gPSBfYS5zdGFnZ2VyRGlyZWN0aW9uLCB0cmFuc2l0aW9uID0gX19yZXN0KF9hLCBbXCJ3aGVuXCIsIFwiZGVsYXlcIiwgXCJkZWxheUNoaWxkcmVuXCIsIFwic3RhZ2dlckNoaWxkcmVuXCIsIFwic3RhZ2dlckRpcmVjdGlvblwiXSk7XHJcbiAgICByZXR1cm4gT2JqZWN0LmtleXModHJhbnNpdGlvbikubGVuZ3RoO1xyXG59O1xyXG52YXIgZ2V0VHJhbnNpdGlvbkRlZmluaXRpb24gPSBmdW5jdGlvbiAoa2V5LCB0bywgdHJhbnNpdGlvbkRlZmluaXRpb24pIHtcclxuICAgIHZhciBkZWxheSA9IHRyYW5zaXRpb25EZWZpbml0aW9uID8gdHJhbnNpdGlvbkRlZmluaXRpb24uZGVsYXkgOiAwO1xyXG4gICAgLy8gSWYgbm8gb2JqZWN0LCByZXR1cm4gZGVmYXVsdCB0cmFuc2l0aW9uXHJcbiAgICAvLyBBIGJldHRlciB3YXkgdG8gaGFuZGxlIHRoaXMgd291bGQgYmUgdG8gZGVjb25zdHJ1Y3Qgb3V0IGFsbCB0aGUgc2hhcmVkIE9yY2hlc3RyYXRpb24gcHJvcHNcclxuICAgIC8vIGFuZCBzZWUgaWYgdGhlcmUncyBhbnkgcHJvcHMgcmVtYWluaW5nXHJcbiAgICBpZiAodHJhbnNpdGlvbkRlZmluaXRpb24gPT09IHVuZGVmaW5lZCB8fFxyXG4gICAgICAgICFpc1RyYW5zaXRpb25EZWZpbmVkKHRyYW5zaXRpb25EZWZpbml0aW9uKSkge1xyXG4gICAgICAgIHJldHVybiBfX2Fzc2lnbih7IGRlbGF5OiBkZWxheSB9LCBnZXREZWZhdWx0VHJhbnNpdGlvbihrZXksIHRvKSk7XHJcbiAgICB9XHJcbiAgICB2YXIgdmFsdWVUcmFuc2l0aW9uRGVmaW5pdGlvbiA9IHRyYW5zaXRpb25EZWZpbml0aW9uW2tleV0gfHxcclxuICAgICAgICB0cmFuc2l0aW9uRGVmaW5pdGlvbi5kZWZhdWx0IHx8XHJcbiAgICAgICAgdHJhbnNpdGlvbkRlZmluaXRpb247XHJcbiAgICBpZiAodmFsdWVUcmFuc2l0aW9uRGVmaW5pdGlvbi50eXBlID09PSBmYWxzZSkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGRlbGF5OiB2YWx1ZVRyYW5zaXRpb25EZWZpbml0aW9uLmhhc093blByb3BlcnR5KFwiZGVsYXlcIilcclxuICAgICAgICAgICAgICAgID8gdmFsdWVUcmFuc2l0aW9uRGVmaW5pdGlvbi5kZWxheVxyXG4gICAgICAgICAgICAgICAgOiBkZWxheSxcclxuICAgICAgICAgICAgdG86IGlzS2V5ZnJhbWVzVGFyZ2V0KHRvKVxyXG4gICAgICAgICAgICAgICAgPyB0b1t0by5sZW5ndGggLSAxXVxyXG4gICAgICAgICAgICAgICAgOiB0byxcclxuICAgICAgICAgICAgdHlwZTogXCJqdXN0XCIsXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGlzS2V5ZnJhbWVzVGFyZ2V0KHRvKSkge1xyXG4gICAgICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7IHZhbHVlczogdG8sIGR1cmF0aW9uOiAwLjgsIGRlbGF5OiBkZWxheSwgZWFzZTogXCJsaW5lYXJcIiB9LCB2YWx1ZVRyYW5zaXRpb25EZWZpbml0aW9uKSwgeyBcclxuICAgICAgICAgICAgLy8gVGhpcyBhbmltYXRpb24gbXVzdCBiZSBrZXlmcmFtZXMgaWYgd2UncmUgYW5pbWF0aW5nIHRocm91Z2ggYW4gYXJyYXlcclxuICAgICAgICAgICAgdHlwZTogXCJrZXlmcmFtZXNcIiB9KTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBfX2Fzc2lnbih7IHR5cGU6IFwidHdlZW5cIiwgdG86IHRvLFxyXG4gICAgICAgICAgICBkZWxheTogZGVsYXkgfSwgdmFsdWVUcmFuc2l0aW9uRGVmaW5pdGlvbik7XHJcbiAgICB9XHJcbn07XHJcbnZhciBwcmVwcm9jZXNzT3B0aW9ucyA9IGZ1bmN0aW9uICh0eXBlLCBvcHRzKSB7XHJcbiAgICByZXR1cm4gdHJhbnNpdGlvbk9wdGlvblBhcnNlclt0eXBlXVxyXG4gICAgICAgID8gdHJhbnNpdGlvbk9wdGlvblBhcnNlclt0eXBlXShvcHRzKVxyXG4gICAgICAgIDogb3B0cztcclxufTtcclxudmFyIGdldEFuaW1hdGlvbiA9IGZ1bmN0aW9uIChrZXksIHZhbHVlLCB0YXJnZXQsIHRyYW5zaXRpb24pIHtcclxuICAgIHZhciBvcmlnaW4gPSB2YWx1ZS5nZXQoKTtcclxuICAgIHZhciBpc09yaWdpbkFuaW1hdGFibGUgPSBpc0FuaW1hdGFibGUoa2V5LCBvcmlnaW4pO1xyXG4gICAgdmFyIGlzVGFyZ2V0QW5pbWF0YWJsZSA9IGlzQW5pbWF0YWJsZShrZXksIHRhcmdldCk7XHJcbiAgICAvLyBUT0RPIHdlIGNvdWxkIHByb2JhYmx5IGltcHJvdmUgdGhpcyBjaGVjayB0byBlbnN1cmUgYm90aCB2YWx1ZXMgYXJlIG9mIHRoZSBzYW1lIHR5cGUgLVxyXG4gICAgLy8gZm9yIGluc3RhbmNlIDEwMCB0byAjZmZmLiBUaGlzIG1pZ2h0IGxpdmUgYmV0dGVyIGluIFBvcG1vdGlvbi5cclxuICAgIHdhcm5pbmcoaXNPcmlnaW5BbmltYXRhYmxlID09PSBpc1RhcmdldEFuaW1hdGFibGUsIFwiWW91IGFyZSB0cnlpbmcgdG8gYW5pbWF0ZSBcIiArIGtleSArIFwiIGZyb20gXFxcIlwiICsgb3JpZ2luICsgXCJcXFwiIHRvIFwiICsgdGFyZ2V0ICsgXCIuIFxcXCJcIiArIG9yaWdpbiArIFwiXFxcIiBpcyBub3QgYW4gYW5pbWF0YWJsZSB2YWx1ZSAtIHRvIGVuYWJsZSB0aGlzIGFuaW1hdGlvbiBzZXQgXCIgKyBvcmlnaW4gKyBcIiB0byBhIHZhbHVlIGFuaW1hdGFibGUgdG8gXCIgKyB0YXJnZXQgKyBcIiB2aWEgdGhlIGBzdHlsZWAgcHJvcGVydHkuXCIpO1xyXG4gICAgLy8gUGFyc2UgdGhlIGB0cmFuc2l0aW9uYCBwcm9wIGFuZCByZXR1cm4gb3B0aW9ucyBmb3IgdGhlIFBvcG1vdGlvbiBhbmltYXRpb25cclxuICAgIHZhciBfYSA9IGdldFRyYW5zaXRpb25EZWZpbml0aW9uKGtleSwgdGFyZ2V0LCB0cmFuc2l0aW9uKSwgX2IgPSBfYS50eXBlLCB0eXBlID0gX2IgPT09IHZvaWQgMCA/IFwidHdlZW5cIiA6IF9iLCB0cmFuc2l0aW9uRGVmaW5pdGlvbiA9IF9fcmVzdChfYSwgW1widHlwZVwiXSk7XHJcbiAgICAvLyBJZiB0aGlzIGlzIGFuIGFuaW1hdGFibGUgcGFpciBvZiB2YWx1ZXMsIHJldHVybiBhbiBhbmltYXRpb24sIG90aGVyd2lzZSB1c2UgYGp1c3RgXHJcbiAgICB2YXIgYWN0aW9uRmFjdG9yeSA9IGlzT3JpZ2luQW5pbWF0YWJsZSAmJiBpc1RhcmdldEFuaW1hdGFibGVcclxuICAgICAgICA/IHRyYW5zaXRpb25zW3R5cGVdXHJcbiAgICAgICAgOiBqdXN0O1xyXG4gICAgdmFyIG9wdHMgPSBwcmVwcm9jZXNzT3B0aW9ucyh0eXBlLCBfX2Fzc2lnbih7IGZyb206IG9yaWdpbiwgdmVsb2NpdHk6IHZhbHVlLmdldFZlbG9jaXR5KCkgfSwgdHJhbnNpdGlvbkRlZmluaXRpb24pKTtcclxuICAgIC8vIENvbnZlcnQgZHVyYXRpb24gZnJvbSBGcmFtZXIgTW90aW9uJ3Mgc2Vjb25kcyBpbnRvIFBvcG1vdGlvbidzIG1pbGxpc2Vjb25kc1xyXG4gICAgaWYgKGlzRHVyYXRpb25BbmltYXRpb24ob3B0cykpIHtcclxuICAgICAgICBpZiAob3B0cy5kdXJhdGlvbikge1xyXG4gICAgICAgICAgICBvcHRzLmR1cmF0aW9uID0gc2Vjb25kc1RvTWlsbGlzZWNvbmRzKG9wdHMuZHVyYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob3B0cy5yZXBlYXREZWxheSkge1xyXG4gICAgICAgICAgICBvcHRzLnJlcGVhdERlbGF5ID0gc2Vjb25kc1RvTWlsbGlzZWNvbmRzKG9wdHMucmVwZWF0RGVsYXkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBbYWN0aW9uRmFjdG9yeSwgb3B0c107XHJcbn07XHJcbi8qKlxyXG4gKiBTdGFydCBhbmltYXRpb24gb24gYSB2YWx1ZS4gVGhpcyBmdW5jdGlvbiBjb21wbGV0ZWx5IGVuY2Fwc3VsYXRlcyBQb3Btb3Rpb24tc3BlY2lmaWMgbG9naWMuXHJcbiAqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuZnVuY3Rpb24gc3RhcnRBbmltYXRpb24oa2V5LCB2YWx1ZSwgdGFyZ2V0LCBfYSkge1xyXG4gICAgdmFyIF9iID0gX2EuZGVsYXksIGRlbGF5JDEgPSBfYiA9PT0gdm9pZCAwID8gMCA6IF9iLCB0cmFuc2l0aW9uID0gX19yZXN0KF9hLCBbXCJkZWxheVwiXSk7XHJcbiAgICByZXR1cm4gdmFsdWUuc3RhcnQoZnVuY3Rpb24gKGNvbXBsZXRlKSB7XHJcbiAgICAgICAgdmFyIGFjdGl2ZUFuaW1hdGlvbjtcclxuICAgICAgICB2YXIgX2EgPSBnZXRBbmltYXRpb24oa2V5LCB2YWx1ZSwgdGFyZ2V0LCB0cmFuc2l0aW9uKSwgYW5pbWF0aW9uRmFjdG9yeSA9IF9hWzBdLCBfYiA9IF9hWzFdLCB2YWx1ZURlbGF5ID0gX2IuZGVsYXksIG9wdGlvbnMgPSBfX3Jlc3QoX2IsIFtcImRlbGF5XCJdKTtcclxuICAgICAgICBpZiAodmFsdWVEZWxheSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGRlbGF5JDEgPSB2YWx1ZURlbGF5O1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgYW5pbWF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGFuaW1hdGlvbiA9IGFuaW1hdGlvbkZhY3Rvcnkob3B0aW9ucyk7XHJcbiAgICAgICAgICAgIC8vIEJpbmQgYW5pbWF0aW9uIG9wdHMgdG8gYW5pbWF0aW9uXHJcbiAgICAgICAgICAgIGFjdGl2ZUFuaW1hdGlvbiA9IGFuaW1hdGlvbi5zdGFydCh7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGU6IGZ1bmN0aW9uICh2KSB7IHJldHVybiB2YWx1ZS5zZXQodik7IH0sXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogY29tcGxldGUsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy8gSWYgd2UncmUgZGVsYXlpbmcgdGhpcyBhbmltYXRpb24sIG9ubHkgcmVzb2x2ZSBpdCAqKmFmdGVyKiogdGhlIGRlbGF5IHRvXHJcbiAgICAgICAgLy8gZW5zdXJlIHRoZSB2YWx1ZSdzIHJlc29sdmUgdmVsb2NpdHkgaXMgdXAtdG8tZGF0ZS5cclxuICAgICAgICBpZiAoZGVsYXkkMSkge1xyXG4gICAgICAgICAgICBhY3RpdmVBbmltYXRpb24gPSBkZWxheShzZWNvbmRzVG9NaWxsaXNlY29uZHMoZGVsYXkkMSkpLnN0YXJ0KHtcclxuICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBhbmltYXRlLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGFuaW1hdGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGFjdGl2ZUFuaW1hdGlvbilcclxuICAgICAgICAgICAgICAgIGFjdGl2ZUFuaW1hdGlvbi5zdG9wKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH0pO1xyXG59XG5cbi8qKlxyXG4gKiBHZXQgdGhlIGN1cnJlbnQgdmFsdWUgb2YgZXZlcnkgYE1vdGlvblZhbHVlYFxyXG4gKiBAcGFyYW0gdmFsdWVzIC1cclxuICovXHJcbnZhciBnZXRDdXJyZW50ID0gZnVuY3Rpb24gKHZhbHVlcykge1xyXG4gICAgdmFyIGN1cnJlbnQgPSB7fTtcclxuICAgIHZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7IHJldHVybiAoY3VycmVudFtrZXldID0gdmFsdWUuZ2V0KCkpOyB9KTtcclxuICAgIHJldHVybiBjdXJyZW50O1xyXG59O1xyXG4vKipcclxuICogR2V0IHRoZSBjdXJyZW50IHZlbG9jaXR5IG9mIGV2ZXJ5IGBNb3Rpb25WYWx1ZWBcclxuICogQHBhcmFtIHZhbHVlcyAtXHJcbiAqL1xyXG52YXIgZ2V0VmVsb2NpdHkgPSBmdW5jdGlvbiAodmFsdWVzKSB7XHJcbiAgICB2YXIgdmVsb2NpdHkgPSB7fTtcclxuICAgIHZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7IHJldHVybiAodmVsb2NpdHlba2V5XSA9IHZhbHVlLmdldFZlbG9jaXR5KCkpOyB9KTtcclxuICAgIHJldHVybiB2ZWxvY2l0eTtcclxufTtcclxuLyoqXHJcbiAqIENoZWNrIGlmIHZhbHVlIGlzIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgYFRhcmdldGAuIEEgZ2VuZXJpYyB0eXBlb2YgPT09ICdmdW5jdGlvbidcclxuICogY2hlY2ssIGp1c3QgaGVscHMgd2l0aCB0eXBpbmcuXHJcbiAqIEBwYXJhbSBwIC1cclxuICovXHJcbnZhciBpc1RhcmdldFJlc29sdmVyID0gZnVuY3Rpb24gKHApIHtcclxuICAgIHJldHVybiB0eXBlb2YgcCA9PT0gXCJmdW5jdGlvblwiO1xyXG59O1xyXG4vKipcclxuICogQ2hlY2sgaWYgdmFsdWUgaXMgYSBsaXN0IG9mIHZhcmlhbnQgbGFiZWxzXHJcbiAqIEBwYXJhbSB2IC1cclxuICovXHJcbnZhciBpc1ZhcmlhbnRMYWJlbHMgPSBmdW5jdGlvbiAodikgeyByZXR1cm4gQXJyYXkuaXNBcnJheSh2KTsgfTtcclxuLyoqXHJcbiAqIENoZWNrIGlmIHZhbHVlIGlzIGEgbnVtZXJpY2FsIHN0cmluZywgaWUgXCIxMDBcIiBvciBcIjEwMHB4XCJcclxuICovXHJcbnZhciBpc051bWVyaWNhbFN0cmluZyA9IGZ1bmN0aW9uICh2KSB7IHJldHVybiAvXlxcZCpcXC4/XFxkKyQvLnRlc3Qodik7IH07XHJcbi8qKlxyXG4gKiBDb250cm9sIGFuaW1hdGlvbnMgZm9yIGEgc2luZ2xlIGNvbXBvbmVudFxyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbnZhciBWYWx1ZUFuaW1hdGlvbkNvbnRyb2xzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gVmFsdWVBbmltYXRpb25Db250cm9scyhfYSkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdmFyIHZhbHVlcyA9IF9hLnZhbHVlcywgcmVhZFZhbHVlRnJvbVNvdXJjZSA9IF9hLnJlYWRWYWx1ZUZyb21Tb3VyY2UsIG1ha2VUYXJnZXRBbmltYXRhYmxlID0gX2EubWFrZVRhcmdldEFuaW1hdGFibGU7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSByZWZlcmVuY2UgdG8gdGhlIGNvbXBvbmVudCdzIGxhdGVzdCBwcm9wcy4gV2UgY291bGQgcHJvYmFibHkgZGl0Y2ggdGhpcyBpblxyXG4gICAgICAgICAqIGZhdm91ciB0byBhIHJlZmVyZW5jZSB0byB0aGUgYGN1c3RvbWAgcHJvcCBub3cgd2UgZG9uJ3Qgc2VuZCBhbGwgcHJvcHMgdGhyb3VnaFxyXG4gICAgICAgICAqIHRvIHRhcmdldCByZXNvbHZlcnMuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5wcm9wcyA9IHt9O1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBjb21wb25lbnQncyB2YXJpYW50cywgYXMgcHJvdmlkZWQgYnkgYHZhcmlhbnRzYFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMudmFyaWFudHMgPSB7fTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIHNldCBvZiB2YWx1ZXMgdGhhdCB3ZSBhbmltYXRlIGJhY2sgdG8gd2hlbiBhIHZhbHVlIGlzIGNsZWFyZWQgb2YgYWxsIG92ZXJyaWRlcy5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmJhc2VUYXJnZXQgPSB7fTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIHNlcmllcyBvZiB0YXJnZXQgb3ZlcnJpZGVzIHRoYXQgd2UgY2FuIGFuaW1hdGUgdG8vZnJvbSB3aGVuIG92ZXJyaWRlcyBhcmUgc2V0L2NsZWFyZWQuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5vdmVycmlkZXMgPSBbXTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIHNlcmllcyBvZiB0YXJnZXQgb3ZlcnJpZGVzIGFzIHRoZXkgd2VyZSBvcmlnaW5hbGx5IHJlc29sdmVkLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMucmVzb2x2ZWRPdmVycmlkZXMgPSBbXTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIFNldCBvZiBjdXJyZW50bHkgYWN0aXZlIG92ZXJyaWRlIGluZGV4ZXNcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmFjdGl2ZU92ZXJyaWRlcyA9IG5ldyBTZXQoKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIFNldCBvZiB2YWx1ZSBrZXlzIHRoYXQgYXJlIGN1cnJlbnRseSBhbmltYXRpbmcuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5pc0FuaW1hdGluZyA9IG5ldyBTZXQoKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDaGVjayBpZiB0aGUgYXNzb2NpYXRlZCBgTW90aW9uVmFsdWVNYXBgIGhhcyBhIGtleSB3aXRoIHRoZSBwcm92aWRlZCBzdHJpbmcuXHJcbiAgICAgICAgICogUHJlLWJvdW5kIHRvIHRoZSBjbGFzcyBzbyB3ZSBjYW4gcHJvdmlkZSBkaXJlY3RseSB0byB0aGUgYGZpbHRlcmAgaW4gYGNoZWNrRm9yTmV3VmFsdWVzYC5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmhhc1ZhbHVlID0gZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gIV90aGlzLnZhbHVlcy5oYXMoa2V5KTsgfTtcclxuICAgICAgICB0aGlzLnZhbHVlcyA9IHZhbHVlcztcclxuICAgICAgICB0aGlzLnJlYWRWYWx1ZUZyb21Tb3VyY2UgPSByZWFkVmFsdWVGcm9tU291cmNlO1xyXG4gICAgICAgIHRoaXMubWFrZVRhcmdldEFuaW1hdGFibGUgPSBtYWtlVGFyZ2V0QW5pbWF0YWJsZTtcclxuICAgICAgICB0aGlzLnZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7IHJldHVybiAoX3RoaXMuYmFzZVRhcmdldFtrZXldID0gdmFsdWUuZ2V0KCkpOyB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2V0IHRoZSByZWZlcmVuY2UgdG8gdGhlIGNvbXBvbmVudCdzIHByb3BzLlxyXG4gICAgICogQHBhcmFtIHByb3BzIC1cclxuICAgICAqL1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuc2V0UHJvcHMgPSBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgICAgICB0aGlzLnByb3BzID0gcHJvcHM7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgdGhlIHJlZmVyZW5jZSB0byB0aGUgY29tcG9uZW50J3MgdmFyaWFudHNcclxuICAgICAqIEBwYXJhbSB2YXJpYW50cyAtXHJcbiAgICAgKi9cclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLnNldFZhcmlhbnRzID0gZnVuY3Rpb24gKHZhcmlhbnRzKSB7XHJcbiAgICAgICAgaWYgKHZhcmlhbnRzKVxyXG4gICAgICAgICAgICB0aGlzLnZhcmlhbnRzID0gdmFyaWFudHM7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgdGhlIGNvbXBvbmVudCdzIGRlZmF1bHQgdHJhbnNpdGlvblxyXG4gICAgICogQHBhcmFtIHRyYW5zaXRpb24gLVxyXG4gICAgICovXHJcbiAgICBWYWx1ZUFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5zZXREZWZhdWx0VHJhbnNpdGlvbiA9IGZ1bmN0aW9uICh0cmFuc2l0aW9uKSB7XHJcbiAgICAgICAgaWYgKHRyYW5zaXRpb24pXHJcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdFRyYW5zaXRpb24gPSB0cmFuc2l0aW9uO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogU2V0IG1vdGlvbiB2YWx1ZXMgd2l0aG91dCBhbmltYXRpb24uXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGRlZmluaXRpb24gLVxyXG4gICAgICogQHBhcmFtIGlzQWN0aXZlIC1cclxuICAgICAqL1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuc2V0VmFsdWVzID0gZnVuY3Rpb24gKGRlZmluaXRpb24sIF9hKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB2YXIgX2IgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgX2MgPSBfYi5pc0FjdGl2ZSwgaXNBY3RpdmUgPSBfYyA9PT0gdm9pZCAwID8gbmV3IFNldCgpIDogX2MsIHByaW9yaXR5ID0gX2IucHJpb3JpdHk7XHJcbiAgICAgICAgdmFyIF9kID0gdGhpcy5yZXNvbHZlVmFyaWFudChkZWZpbml0aW9uKSwgdGFyZ2V0ID0gX2QudGFyZ2V0LCB0cmFuc2l0aW9uRW5kID0gX2QudHJhbnNpdGlvbkVuZDtcclxuICAgICAgICB0YXJnZXQgPSB0aGlzLnRyYW5zZm9ybVZhbHVlcyhfX2Fzc2lnbihfX2Fzc2lnbih7fSwgdGFyZ2V0KSwgdHJhbnNpdGlvbkVuZCkpO1xyXG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0YXJnZXQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgICAgICBpZiAoaXNBY3RpdmUuaGFzKGtleSkpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIGlzQWN0aXZlLmFkZChrZXkpO1xyXG4gICAgICAgICAgICBpZiAodGFyZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0VmFsdWUgPSByZXNvbHZlRmluYWxWYWx1ZUluS2V5ZnJhbWVzKHRhcmdldFtrZXldKTtcclxuICAgICAgICAgICAgICAgIGlmIChfdGhpcy52YWx1ZXMuaGFzKGtleSkpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBfdGhpcy52YWx1ZXMuZ2V0KGtleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgJiYgdmFsdWUuc2V0KHRhcmdldFZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnZhbHVlcy5zZXQoa2V5LCBtb3Rpb25WYWx1ZSh0YXJnZXRWYWx1ZSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKCFwcmlvcml0eSlcclxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5iYXNlVGFyZ2V0W2tleV0gPSB0YXJnZXRWYWx1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQWxsb3dzIGB0cmFuc2Zvcm1WYWx1ZXNgIHRvIGJlIHNldCBieSBhIGNvbXBvbmVudCB0aGF0IGFsbG93cyB1cyB0b1xyXG4gICAgICogdHJhbnNmb3JtIHRoZSB2YWx1ZXMgaW4gYSBnaXZlbiBgVGFyZ2V0YC4gVGhpcyBhbGxvd3MgRnJhbWVyIExpYnJhcnlcclxuICAgICAqIHRvIGV4dGVuZCBGcmFtZXIgTW90aW9uIHRvIGFuaW1hdGUgYENvbG9yYCB2YXJpYWJsZXMgZXRjLiBDdXJyZW50bHkgd2UgaGF2ZVxyXG4gICAgICogdG8gbWFudWFsbHkgc3VwcG9ydCB0aGVzZSBleHRlbmRlZCB0eXBlcyBoZXJlIGluIEZyYW1lciBNb3Rpb24uXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHZhbHVlcyAtXHJcbiAgICAgKi9cclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLnRyYW5zZm9ybVZhbHVlcyA9IGZ1bmN0aW9uICh2YWx1ZXMpIHtcclxuICAgICAgICB2YXIgdHJhbnNmb3JtVmFsdWVzID0gdGhpcy5wcm9wcy50cmFuc2Zvcm1WYWx1ZXM7XHJcbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybVZhbHVlcyA/IHRyYW5zZm9ybVZhbHVlcyh2YWx1ZXMpIDogdmFsdWVzO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2sgYSBgVGFyZ2V0YCBmb3IgbmV3IHZhbHVlcyB3ZSBoYXZlbid0IGFuaW1hdGVkIHlldCwgYW5kIGFkZCB0aGVtXHJcbiAgICAgKiB0byB0aGUgYE1vdGlvblZhbHVlTWFwYC5cclxuICAgICAqXHJcbiAgICAgKiBDdXJyZW50bHkgdGhlcmUncyBmdW5jdGlvbmFsaXR5IGhlcmUgdGhhdCBpcyBET00tc3BlY2lmaWMsIHdlIHNob3VsZCBhbGxvd1xyXG4gICAgICogdGhpcyBmdW5jdGlvbmFsaXR5IHRvIGJlIGluamVjdGVkIGJ5IHRoZSBmYWN0b3J5IHRoYXQgY3JlYXRlcyBET00tc3BlY2lmaWNcclxuICAgICAqIGNvbXBvbmVudHMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHRhcmdldCAtXHJcbiAgICAgKi9cclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLmNoZWNrRm9yTmV3VmFsdWVzID0gZnVuY3Rpb24gKHRhcmdldCkge1xyXG4gICAgICAgIHZhciBuZXdWYWx1ZUtleXMgPSBPYmplY3Qua2V5cyh0YXJnZXQpLmZpbHRlcih0aGlzLmhhc1ZhbHVlKTtcclxuICAgICAgICB2YXIgbnVtTmV3VmFsdWVzID0gbmV3VmFsdWVLZXlzLmxlbmd0aDtcclxuICAgICAgICBpZiAoIW51bU5ld1ZhbHVlcylcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtTmV3VmFsdWVzOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIGtleSA9IG5ld1ZhbHVlS2V5c1tpXTtcclxuICAgICAgICAgICAgdmFyIHRhcmdldFZhbHVlID0gdGFyZ2V0W2tleV07XHJcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IG51bGw7XHJcbiAgICAgICAgICAgIC8vIElmIHRoaXMgaXMgYSBrZXlmcmFtZXMgdmFsdWUsIHdlIGNhbiBhdHRlbXB0IHRvIHVzZSB0aGUgZmlyc3QgdmFsdWUgaW4gdGhlXHJcbiAgICAgICAgICAgIC8vIGFycmF5IGFzIHRoYXQncyBnb2luZyB0byBiZSB0aGUgZmlyc3QgdmFsdWUgb2YgdGhlIGFuaW1hdGlvbiBhbnl3YXlcclxuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0VmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHRhcmdldFZhbHVlWzBdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIElmIGl0IGlzbid0IGEga2V5ZnJhbWVzIG9yIHRoZSBmaXJzdCBrZXlmcmFtZXMgdmFsdWUgd2FzIHNldCBhcyBgbnVsbGAsIHJlYWQgdGhlXHJcbiAgICAgICAgICAgIC8vIHZhbHVlIGZyb20gdGhlIERPTS4gSXQgbWlnaHQgYmUgd29ydGggaW52ZXN0aWdhdGluZyB3aGV0aGVyIHRvIGNoZWNrIHByb3BzIChmb3IgU1ZHKVxyXG4gICAgICAgICAgICAvLyBvciBwcm9wcy5zdHlsZSAoZm9yIEhUTUwpIGlmIHRoZSB2YWx1ZSBleGlzdHMgdGhlcmUgYmVmb3JlIGF0dGVtcHRpbmcgdG8gcmVhZC5cclxuICAgICAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHRoaXMucmVhZFZhbHVlRnJvbVNvdXJjZShrZXkpO1xyXG4gICAgICAgICAgICAgICAgaW52YXJpYW50KHZhbHVlICE9PSBudWxsLCBcIk5vIGluaXRpYWwgdmFsdWUgZm9yIFxcXCJcIiArIGtleSArIFwiXFxcIiBjYW4gYmUgaW5mZXJyZWQuIEVuc3VyZSBhbiBpbml0aWFsIHZhbHVlIGZvciBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgaXMgZGVmaW5lZCBvbiB0aGUgY29tcG9uZW50LlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIGlzTnVtZXJpY2FsU3RyaW5nKHZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgLy8gSWYgdGhpcyBpcyBhIG51bWJlciByZWFkIGFzIGEgc3RyaW5nLCBpZSBcIjBcIiBvciBcIjIwMFwiLCBjb252ZXJ0IGl0IHRvIGEgbnVtYmVyXHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHBhcnNlRmxvYXQodmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKCFnZXRWYWx1ZVR5cGUodmFsdWUpICYmIGNvbXBsZXgudGVzdCh0YXJnZXRWYWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIC8vIElmIHZhbHVlIGlzIG5vdCByZWNvZ25pc2VkIGFzIGFuaW1hdGFibGUsIGllIFwibm9uZVwiLCBjcmVhdGUgYW4gYW5pbWF0YWJsZSB2ZXJzaW9uIG9yaWdpbiBiYXNlZCBvbiB0aGUgdGFyZ2V0XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGNvbXBsZXguZ2V0QW5pbWF0YWJsZU5vbmUodGFyZ2V0VmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMudmFsdWVzLnNldChrZXksIG1vdGlvblZhbHVlKHZhbHVlKSk7XHJcbiAgICAgICAgICAgIHRoaXMuYmFzZVRhcmdldFtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmVzb2x2ZSBhIHZhcmlhbnQgZnJvbSBpdHMgbGFiZWwgb3IgcmVzb2x2ZXIgaW50byBhbiBhY3R1YWwgYFRhcmdldGAgd2UgY2FuIGFuaW1hdGUgdG8uXHJcbiAgICAgKiBAcGFyYW0gdmFyaWFudCAtXHJcbiAgICAgKi9cclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLnJlc29sdmVWYXJpYW50ID0gZnVuY3Rpb24gKHZhcmlhbnQpIHtcclxuICAgICAgICBpZiAoIXZhcmlhbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHRhcmdldDogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbkVuZDogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXNUYXJnZXRSZXNvbHZlcih2YXJpYW50KSkge1xyXG4gICAgICAgICAgICAvLyByZXNvbHZlIGN1cnJlbnQgYW5kIHZlbG9jaXR5XHJcbiAgICAgICAgICAgIHZhcmlhbnQgPSB2YXJpYW50KHRoaXMucHJvcHMuY3VzdG9tLCBnZXRDdXJyZW50KHRoaXMudmFsdWVzKSwgZ2V0VmVsb2NpdHkodGhpcy52YWx1ZXMpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIF9hID0gdmFyaWFudC50cmFuc2l0aW9uLCB0cmFuc2l0aW9uID0gX2EgPT09IHZvaWQgMCA/IHRoaXMuZGVmYXVsdFRyYW5zaXRpb24gOiBfYSwgdHJhbnNpdGlvbkVuZCA9IHZhcmlhbnQudHJhbnNpdGlvbkVuZCwgdGFyZ2V0ID0gX19yZXN0KHZhcmlhbnQsIFtcInRyYW5zaXRpb25cIiwgXCJ0cmFuc2l0aW9uRW5kXCJdKTtcclxuICAgICAgICByZXR1cm4geyB0cmFuc2l0aW9uOiB0cmFuc2l0aW9uLCB0cmFuc2l0aW9uRW5kOiB0cmFuc2l0aW9uRW5kLCB0YXJnZXQ6IHRhcmdldCB9O1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogR2V0IHRoZSBoaWdoZXN0IGFjdGl2ZSBvdmVycmlkZSBwcmlvcml0eSBpbmRleFxyXG4gICAgICovXHJcbiAgICBWYWx1ZUFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5nZXRIaWdoZXN0UHJpb3JpdHkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmFjdGl2ZU92ZXJyaWRlcy5zaXplKVxyXG4gICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICByZXR1cm4gTWF0aC5tYXguYXBwbHkoTWF0aCwgQXJyYXkuZnJvbSh0aGlzLmFjdGl2ZU92ZXJyaWRlcykpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogU2V0IGFuIG92ZXJyaWRlLiBXZSBhZGQgdGhpcyBsYXllciBvZiBpbmRpcmVjdGlvbiBzbyBpZiwgZm9yIGluc3RhbmNlLCBhIHRhcCBnZXN0dXJlXHJcbiAgICAgKiBzdGFydHMgYW5kIG92ZXJyaWRlcyBhIGhvdmVyIGdlc3R1cmUsIHdoZW4gd2UgY2xlYXIgdGhlIHRhcCBnZXN0dXJlIGFuZCBmYWxsYmFjayB0byB0aGVcclxuICAgICAqIGhvdmVyIGdlc3R1cmUsIGlmIHRoYXQgaG92ZXIgZ2VzdHVyZSBoYXMgY2hhbmdlZCBpbiB0aGUgbWVhbnRpbWUgd2UgY2FuIGdvIHRvIHRoYXQgcmF0aGVyXHJcbiAgICAgKiB0aGFuIHRoZSBvbmUgdGhhdCB3YXMgcmVzb2x2ZWQgd2hlbiB0aGUgaG92ZXIgZ2VzdHVyZSBhbmltYXRpb24gc3RhcnRlZC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZGVmaW5pdGlvbiAtXHJcbiAgICAgKiBAcGFyYW0gb3ZlcnJpZGVJbmRleCAtXHJcbiAgICAgKi9cclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLnNldE92ZXJyaWRlID0gZnVuY3Rpb24gKGRlZmluaXRpb24sIG92ZXJyaWRlSW5kZXgpIHtcclxuICAgICAgICB0aGlzLm92ZXJyaWRlc1tvdmVycmlkZUluZGV4XSA9IGRlZmluaXRpb247XHJcbiAgICAgICAgaWYgKHRoaXMuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkLnNldE92ZXJyaWRlKGRlZmluaXRpb24sIG92ZXJyaWRlSW5kZXgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTdGFydCBhbiBvdmVycmlkZSBhbmltYXRpb24uXHJcbiAgICAgKiBAcGFyYW0gb3ZlcnJpZGVJbmRleCAtXHJcbiAgICAgKi9cclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLnN0YXJ0T3ZlcnJpZGUgPSBmdW5jdGlvbiAob3ZlcnJpZGVJbmRleCkge1xyXG4gICAgICAgIHZhciBvdmVycmlkZSA9IHRoaXMub3ZlcnJpZGVzW292ZXJyaWRlSW5kZXhdO1xyXG4gICAgICAgIGlmIChvdmVycmlkZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdGFydChvdmVycmlkZSwgeyBwcmlvcml0eTogb3ZlcnJpZGVJbmRleCB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDbGVhciBhbiBvdmVycmlkZS4gV2UgY2hlY2sgZXZlcnkgdmFsdWUgd2UgYW5pbWF0ZWQgdG8gaW4gdGhpcyBvdmVycmlkZSB0byBzZWUgaWZcclxuICAgICAqIGl0cyBwcmVzZW50IG9uIGFueSBsb3dlci1wcmlvcml0eSBvdmVycmlkZXMuIElmIG5vdCwgd2UgYW5pbWF0ZSBpdCBiYWNrIHRvIGl0cyBiYXNlIHRhcmdldC5cclxuICAgICAqIEBwYXJhbSBvdmVycmlkZUluZGV4IC1cclxuICAgICAqL1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuY2xlYXJPdmVycmlkZSA9IGZ1bmN0aW9uIChvdmVycmlkZUluZGV4KSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICBpZiAodGhpcy5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiBjaGlsZC5jbGVhck92ZXJyaWRlKG92ZXJyaWRlSW5kZXgpOyB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIG92ZXJyaWRlID0gdGhpcy5vdmVycmlkZXNbb3ZlcnJpZGVJbmRleF07XHJcbiAgICAgICAgaWYgKCFvdmVycmlkZSlcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuYWN0aXZlT3ZlcnJpZGVzLmRlbGV0ZShvdmVycmlkZUluZGV4KTtcclxuICAgICAgICB2YXIgaGlnaGVzdCA9IHRoaXMuZ2V0SGlnaGVzdFByaW9yaXR5KCk7XHJcbiAgICAgICAgdGhpcy5yZXNldElzQW5pbWF0aW5nKCk7XHJcbiAgICAgICAgaWYgKGhpZ2hlc3QpIHtcclxuICAgICAgICAgICAgdmFyIGhpZ2hlc3RPdmVycmlkZSA9IHRoaXMub3ZlcnJpZGVzW2hpZ2hlc3RdO1xyXG4gICAgICAgICAgICBoaWdoZXN0T3ZlcnJpZGUgJiYgdGhpcy5zdGFydE92ZXJyaWRlKGhpZ2hlc3QpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBGaWd1cmUgb3V0IHdoaWNoIHJlbWFpbmluZyB2YWx1ZXMgd2VyZSBhZmZlY3RlZCBieSB0aGUgb3ZlcnJpZGUgYW5kIGFuaW1hdGUgdGhvc2VcclxuICAgICAgICB2YXIgb3ZlcnJpZGVUYXJnZXQgPSB0aGlzLnJlc29sdmVkT3ZlcnJpZGVzW292ZXJyaWRlSW5kZXhdO1xyXG4gICAgICAgIGlmICghb3ZlcnJpZGVUYXJnZXQpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB2YXIgcmVtYWluaW5nVmFsdWVzID0ge307XHJcbiAgICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuYmFzZVRhcmdldCkge1xyXG4gICAgICAgICAgICBpZiAob3ZlcnJpZGVUYXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICByZW1haW5pbmdWYWx1ZXNba2V5XSA9IHRoaXMuYmFzZVRhcmdldFtrZXldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMub25TdGFydCgpO1xyXG4gICAgICAgIHRoaXMuYW5pbWF0ZShyZW1haW5pbmdWYWx1ZXMpLnRoZW4oZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMub25Db21wbGV0ZSgpOyB9KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEFwcGx5IGEgdGFyZ2V0L3ZhcmlhbnQgd2l0aG91dCBhbnkgYW5pbWF0aW9uXHJcbiAgICAgKi9cclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLmFwcGx5ID0gZnVuY3Rpb24gKGRlZmluaXRpb24pIHtcclxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkZWZpbml0aW9uKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hcHBseVZhcmlhbnRMYWJlbHMoZGVmaW5pdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkZWZpbml0aW9uID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwcGx5VmFyaWFudExhYmVscyhbZGVmaW5pdGlvbl0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRWYWx1ZXMoZGVmaW5pdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQXBwbHkgdmFyaWFudCBsYWJlbHMgd2l0aG91dCBhbmltYXRpb25cclxuICAgICAqL1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuYXBwbHlWYXJpYW50TGFiZWxzID0gZnVuY3Rpb24gKHZhcmlhbnRMYWJlbExpc3QpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBpc0FjdGl2ZSA9IG5ldyBTZXQoKTtcclxuICAgICAgICB2YXIgcmV2ZXJzZWRMaXN0ID0gX19zcHJlYWRBcnJheXModmFyaWFudExhYmVsTGlzdCkucmV2ZXJzZSgpO1xyXG4gICAgICAgIHJldmVyc2VkTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucmVzb2x2ZVZhcmlhbnQoX3RoaXMudmFyaWFudHNba2V5XSksIHRhcmdldCA9IF9hLnRhcmdldCwgdHJhbnNpdGlvbkVuZCA9IF9hLnRyYW5zaXRpb25FbmQ7XHJcbiAgICAgICAgICAgIGlmICh0cmFuc2l0aW9uRW5kKSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRWYWx1ZXModHJhbnNpdGlvbkVuZCwgeyBpc0FjdGl2ZTogaXNBY3RpdmUgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRhcmdldCkge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0VmFsdWVzKHRhcmdldCwgeyBpc0FjdGl2ZTogaXNBY3RpdmUgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKF90aGlzLmNoaWxkcmVuICYmIF90aGlzLmNoaWxkcmVuLnNpemUpIHtcclxuICAgICAgICAgICAgICAgIF90aGlzLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkLmFwcGx5VmFyaWFudExhYmVscyh2YXJpYW50TGFiZWxMaXN0KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoZGVmaW5pdGlvbiwgb3B0cykge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKG9wdHMgPT09IHZvaWQgMCkgeyBvcHRzID0ge307IH1cclxuICAgICAgICBpZiAob3B0cy5wcmlvcml0eSkge1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZU92ZXJyaWRlcy5hZGQob3B0cy5wcmlvcml0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVzZXRJc0FuaW1hdGluZyhvcHRzLnByaW9yaXR5KTtcclxuICAgICAgICB2YXIgYW5pbWF0aW9uO1xyXG4gICAgICAgIGlmIChpc1ZhcmlhbnRMYWJlbHMoZGVmaW5pdGlvbikpIHtcclxuICAgICAgICAgICAgYW5pbWF0aW9uID0gdGhpcy5hbmltYXRlVmFyaWFudExhYmVscyhkZWZpbml0aW9uLCBvcHRzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRlZmluaXRpb24gPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICAgICAgYW5pbWF0aW9uID0gdGhpcy5hbmltYXRlVmFyaWFudChkZWZpbml0aW9uLCBvcHRzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbiA9IHRoaXMuYW5pbWF0ZShkZWZpbml0aW9uLCBvcHRzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5vblN0YXJ0KCk7XHJcbiAgICAgICAgcmV0dXJuIGFuaW1hdGlvbi50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLm9uQ29tcGxldGUoKTsgfSk7XHJcbiAgICB9O1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuYW5pbWF0ZSA9IGZ1bmN0aW9uIChhbmltYXRpb25EZWZpbml0aW9uLCBfYSkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIF9jID0gX2IuZGVsYXksIGRlbGF5ID0gX2MgPT09IHZvaWQgMCA/IDAgOiBfYywgX2QgPSBfYi5wcmlvcml0eSwgcHJpb3JpdHkgPSBfZCA9PT0gdm9pZCAwID8gMCA6IF9kLCB0cmFuc2l0aW9uT3ZlcnJpZGUgPSBfYi50cmFuc2l0aW9uT3ZlcnJpZGU7XHJcbiAgICAgICAgdmFyIF9lID0gdGhpcy5yZXNvbHZlVmFyaWFudChhbmltYXRpb25EZWZpbml0aW9uKSwgdGFyZ2V0ID0gX2UudGFyZ2V0LCB0cmFuc2l0aW9uID0gX2UudHJhbnNpdGlvbiwgdHJhbnNpdGlvbkVuZCA9IF9lLnRyYW5zaXRpb25FbmQ7XHJcbiAgICAgICAgaWYgKHRyYW5zaXRpb25PdmVycmlkZSkge1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uID0gdHJhbnNpdGlvbk92ZXJyaWRlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRhcmdldClcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xyXG4gICAgICAgIHRhcmdldCA9IHRoaXMudHJhbnNmb3JtVmFsdWVzKHRhcmdldCk7XHJcbiAgICAgICAgaWYgKHRyYW5zaXRpb25FbmQpIHtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbkVuZCA9IHRoaXMudHJhbnNmb3JtVmFsdWVzKHRyYW5zaXRpb25FbmQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNoZWNrRm9yTmV3VmFsdWVzKHRhcmdldCk7XHJcbiAgICAgICAgaWYgKHRoaXMubWFrZVRhcmdldEFuaW1hdGFibGUpIHtcclxuICAgICAgICAgICAgdmFyIGFuaW1hdGFibGUgPSB0aGlzLm1ha2VUYXJnZXRBbmltYXRhYmxlKHRhcmdldCwgdHJhbnNpdGlvbkVuZCk7XHJcbiAgICAgICAgICAgIHRhcmdldCA9IGFuaW1hdGFibGUudGFyZ2V0O1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uRW5kID0gYW5pbWF0YWJsZS50cmFuc2l0aW9uRW5kO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocHJpb3JpdHkpIHtcclxuICAgICAgICAgICAgdGhpcy5yZXNvbHZlZE92ZXJyaWRlc1twcmlvcml0eV0gPSB0YXJnZXQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2hlY2tGb3JOZXdWYWx1ZXModGFyZ2V0KTtcclxuICAgICAgICB2YXIgYW5pbWF0aW9ucyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIGtleSBpbiB0YXJnZXQpIHtcclxuICAgICAgICAgICAgdmFyIHZhbHVlID0gdGhpcy52YWx1ZXMuZ2V0KGtleSk7XHJcbiAgICAgICAgICAgIGlmICghdmFsdWUgfHwgIXRhcmdldCB8fCB0YXJnZXRba2V5XSA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIHZhciB2YWx1ZVRhcmdldCA9IHRhcmdldFtrZXldO1xyXG4gICAgICAgICAgICBpZiAoIXByaW9yaXR5KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJhc2VUYXJnZXRba2V5XSA9IHJlc29sdmVGaW5hbFZhbHVlSW5LZXlmcmFtZXModmFsdWVUYXJnZXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzQW5pbWF0aW5nLmhhcyhrZXkpKVxyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIHRoaXMuaXNBbmltYXRpbmcuYWRkKGtleSk7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbnMucHVzaChzdGFydEFuaW1hdGlvbihrZXksIHZhbHVlLCB2YWx1ZVRhcmdldCwgX19hc3NpZ24oeyBkZWxheTogZGVsYXkgfSwgdHJhbnNpdGlvbikpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGFsbEFuaW1hdGlvbnMgPSBQcm9taXNlLmFsbChhbmltYXRpb25zKTtcclxuICAgICAgICByZXR1cm4gdHJhbnNpdGlvbkVuZFxyXG4gICAgICAgICAgICA/IGFsbEFuaW1hdGlvbnMudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRWYWx1ZXModHJhbnNpdGlvbkVuZCwgeyBwcmlvcml0eTogcHJpb3JpdHkgfSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIDogYWxsQW5pbWF0aW9ucztcclxuICAgIH07XHJcbiAgICBWYWx1ZUFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5hbmltYXRlVmFyaWFudExhYmVscyA9IGZ1bmN0aW9uICh2YXJpYW50TGFiZWxzLCBvcHRzKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB2YXIgYW5pbWF0aW9ucyA9IF9fc3ByZWFkQXJyYXlzKHZhcmlhbnRMYWJlbHMpLnJldmVyc2UoKVxyXG4gICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChsYWJlbCkgeyByZXR1cm4gX3RoaXMuYW5pbWF0ZVZhcmlhbnQobGFiZWwsIG9wdHMpOyB9KTtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoYW5pbWF0aW9ucyk7XHJcbiAgICB9O1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuYW5pbWF0ZVZhcmlhbnQgPSBmdW5jdGlvbiAodmFyaWFudExhYmVsLCBvcHRzKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB2YXIgd2hlbiA9IGZhbHNlO1xyXG4gICAgICAgIHZhciBkZWxheUNoaWxkcmVuID0gMDtcclxuICAgICAgICB2YXIgc3RhZ2dlckNoaWxkcmVuID0gMDtcclxuICAgICAgICB2YXIgc3RhZ2dlckRpcmVjdGlvbiA9IDE7XHJcbiAgICAgICAgdmFyIHByaW9yaXR5ID0gKG9wdHMgJiYgb3B0cy5wcmlvcml0eSkgfHwgMDtcclxuICAgICAgICB2YXIgdmFyaWFudCA9IHRoaXMudmFyaWFudHNbdmFyaWFudExhYmVsXTtcclxuICAgICAgICB2YXIgZ2V0QW5pbWF0aW9ucyA9IHZhcmlhbnRcclxuICAgICAgICAgICAgPyBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5hbmltYXRlKHZhcmlhbnQsIG9wdHMpOyB9XHJcbiAgICAgICAgICAgIDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7IH07XHJcbiAgICAgICAgdmFyIGdldENoaWxkcmVuQW5pbWF0aW9ucyA9IHRoaXMuY2hpbGRyZW5cclxuICAgICAgICAgICAgPyBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuYW5pbWF0ZUNoaWxkcmVuKHZhcmlhbnRMYWJlbCwgZGVsYXlDaGlsZHJlbiwgc3RhZ2dlckNoaWxkcmVuLCBzdGFnZ2VyRGlyZWN0aW9uLCBwcmlvcml0eSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgOiBmdW5jdGlvbiAoKSB7IHJldHVybiBQcm9taXNlLnJlc29sdmUoKTsgfTtcclxuICAgICAgICBpZiAodmFyaWFudCAmJiB0aGlzLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIHZhciB0cmFuc2l0aW9uID0gdGhpcy5yZXNvbHZlVmFyaWFudCh2YXJpYW50KS50cmFuc2l0aW9uO1xyXG4gICAgICAgICAgICBpZiAodHJhbnNpdGlvbikge1xyXG4gICAgICAgICAgICAgICAgd2hlbiA9IHRyYW5zaXRpb24ud2hlbiB8fCB3aGVuO1xyXG4gICAgICAgICAgICAgICAgZGVsYXlDaGlsZHJlbiA9IHRyYW5zaXRpb24uZGVsYXlDaGlsZHJlbiB8fCBkZWxheUNoaWxkcmVuO1xyXG4gICAgICAgICAgICAgICAgc3RhZ2dlckNoaWxkcmVuID0gdHJhbnNpdGlvbi5zdGFnZ2VyQ2hpbGRyZW4gfHwgc3RhZ2dlckNoaWxkcmVuO1xyXG4gICAgICAgICAgICAgICAgc3RhZ2dlckRpcmVjdGlvbiA9XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbi5zdGFnZ2VyRGlyZWN0aW9uIHx8IHN0YWdnZXJEaXJlY3Rpb247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHdoZW4pIHtcclxuICAgICAgICAgICAgdmFyIF9hID0gd2hlbiA9PT0gXCJiZWZvcmVDaGlsZHJlblwiXHJcbiAgICAgICAgICAgICAgICA/IFtnZXRBbmltYXRpb25zLCBnZXRDaGlsZHJlbkFuaW1hdGlvbnNdXHJcbiAgICAgICAgICAgICAgICA6IFtnZXRDaGlsZHJlbkFuaW1hdGlvbnMsIGdldEFuaW1hdGlvbnNdLCBmaXJzdCA9IF9hWzBdLCBsYXN0ID0gX2FbMV07XHJcbiAgICAgICAgICAgIHJldHVybiBmaXJzdCgpLnRoZW4obGFzdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW2dldEFuaW1hdGlvbnMoKSwgZ2V0Q2hpbGRyZW5BbmltYXRpb25zKCldKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuYW5pbWF0ZUNoaWxkcmVuID0gZnVuY3Rpb24gKHZhcmlhbnRMYWJlbCwgZGVsYXlDaGlsZHJlbiwgc3RhZ2dlckNoaWxkcmVuLCBzdGFnZ2VyRGlyZWN0aW9uLCBwcmlvcml0eSkge1xyXG4gICAgICAgIGlmIChkZWxheUNoaWxkcmVuID09PSB2b2lkIDApIHsgZGVsYXlDaGlsZHJlbiA9IDA7IH1cclxuICAgICAgICBpZiAoc3RhZ2dlckNoaWxkcmVuID09PSB2b2lkIDApIHsgc3RhZ2dlckNoaWxkcmVuID0gMDsgfVxyXG4gICAgICAgIGlmIChzdGFnZ2VyRGlyZWN0aW9uID09PSB2b2lkIDApIHsgc3RhZ2dlckRpcmVjdGlvbiA9IDE7IH1cclxuICAgICAgICBpZiAocHJpb3JpdHkgPT09IHZvaWQgMCkgeyBwcmlvcml0eSA9IDA7IH1cclxuICAgICAgICBpZiAoIXRoaXMuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgYW5pbWF0aW9ucyA9IFtdO1xyXG4gICAgICAgIHZhciBtYXhTdGFnZ2VyRHVyYXRpb24gPSAodGhpcy5jaGlsZHJlbi5zaXplIC0gMSkgKiBzdGFnZ2VyQ2hpbGRyZW47XHJcbiAgICAgICAgdmFyIGdlbmVyYXRlU3RhZ2dlckR1cmF0aW9uID0gc3RhZ2dlckRpcmVjdGlvbiA9PT0gMVxyXG4gICAgICAgICAgICA/IGZ1bmN0aW9uIChpKSB7IHJldHVybiBpICogc3RhZ2dlckNoaWxkcmVuOyB9XHJcbiAgICAgICAgICAgIDogZnVuY3Rpb24gKGkpIHsgcmV0dXJuIG1heFN0YWdnZXJEdXJhdGlvbiAtIGkgKiBzdGFnZ2VyQ2hpbGRyZW47IH07XHJcbiAgICAgICAgQXJyYXkuZnJvbSh0aGlzLmNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZENvbnRyb2xzLCBpKSB7XHJcbiAgICAgICAgICAgIHZhciBhbmltYXRpb24gPSBjaGlsZENvbnRyb2xzLmFuaW1hdGVWYXJpYW50KHZhcmlhbnRMYWJlbCwge1xyXG4gICAgICAgICAgICAgICAgcHJpb3JpdHk6IHByaW9yaXR5LFxyXG4gICAgICAgICAgICAgICAgZGVsYXk6IGRlbGF5Q2hpbGRyZW4gKyBnZW5lcmF0ZVN0YWdnZXJEdXJhdGlvbihpKSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbnMucHVzaChhbmltYXRpb24pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChhbmltYXRpb25zKTtcclxuICAgIH07XHJcbiAgICBWYWx1ZUFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5vblN0YXJ0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBvbkFuaW1hdGlvblN0YXJ0ID0gdGhpcy5wcm9wcy5vbkFuaW1hdGlvblN0YXJ0O1xyXG4gICAgICAgIG9uQW5pbWF0aW9uU3RhcnQgJiYgb25BbmltYXRpb25TdGFydCgpO1xyXG4gICAgfTtcclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLm9uQ29tcGxldGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIG9uQW5pbWF0aW9uQ29tcGxldGUgPSB0aGlzLnByb3BzLm9uQW5pbWF0aW9uQ29tcGxldGU7XHJcbiAgICAgICAgb25BbmltYXRpb25Db21wbGV0ZSAmJiBvbkFuaW1hdGlvbkNvbXBsZXRlKCk7XHJcbiAgICB9O1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuY2hlY2tPdmVycmlkZUlzQW5pbWF0aW5nID0gZnVuY3Rpb24gKHByaW9yaXR5KSB7XHJcbiAgICAgICAgdmFyIG51bU92ZXJyaWRlcyA9IHRoaXMub3ZlcnJpZGVzLmxlbmd0aDtcclxuICAgICAgICBmb3IgKHZhciBpID0gcHJpb3JpdHkgKyAxOyBpIDwgbnVtT3ZlcnJpZGVzOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIHJlc29sdmVkT3ZlcnJpZGUgPSB0aGlzLnJlc29sdmVkT3ZlcnJpZGVzW2ldO1xyXG4gICAgICAgICAgICBpZiAocmVzb2x2ZWRPdmVycmlkZSkge1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHJlc29sdmVkT3ZlcnJpZGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzQW5pbWF0aW5nLmFkZChrZXkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLnJlc2V0SXNBbmltYXRpbmcgPSBmdW5jdGlvbiAocHJpb3JpdHkpIHtcclxuICAgICAgICBpZiAocHJpb3JpdHkgPT09IHZvaWQgMCkgeyBwcmlvcml0eSA9IDA7IH1cclxuICAgICAgICB0aGlzLmlzQW5pbWF0aW5nLmNsZWFyKCk7XHJcbiAgICAgICAgLy8gSWYgdGhpcyBpc24ndCB0aGUgaGlnaGVzdCBwcmlvcml0eSBnZXN0dXJlLCBibG9jayB0aGUgYW5pbWF0aW9uXHJcbiAgICAgICAgLy8gb2YgYW55dGhpbmcgdGhhdCdzIGN1cnJlbnRseSBiZWluZyBhbmltYXRlZFxyXG4gICAgICAgIGlmIChwcmlvcml0eSA8IHRoaXMuZ2V0SGlnaGVzdFByaW9yaXR5KCkpIHtcclxuICAgICAgICAgICAgdGhpcy5jaGVja092ZXJyaWRlSXNBbmltYXRpbmcocHJpb3JpdHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiBjaGlsZC5yZXNldElzQW5pbWF0aW5nKHByaW9yaXR5KTsgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFZhbHVlQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHZhbHVlLnN0b3AoKTsgfSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBBZGQgdGhlIGNvbnRyb2xzIG9mIGEgY2hpbGQgY29tcG9uZW50LlxyXG4gICAgICogQHBhcmFtIGNvbnRyb2xzIC1cclxuICAgICAqL1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUuYWRkQ2hpbGQgPSBmdW5jdGlvbiAoY29udHJvbHMpIHtcclxuICAgICAgICBpZiAoIXRoaXMuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IG5ldyBTZXQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jaGlsZHJlbi5hZGQoY29udHJvbHMpO1xyXG4gICAgICAgIC8vIFdlIHNldCBjaGlsZCBvdmVycmlkZXMgd2hlbiBgc2V0T3ZlcnJpZGVgIGlzIGNhbGxlZCwgYnV0IGFsc28gaGF2ZSB0byBkbyBpdCBoZXJlXHJcbiAgICAgICAgLy8gYXMgdGhlIGZpcnN0IHRpbWUgYHNldE92ZXJyaWRlYCBpcyBjYWxsZWQgYWxsIHRoZSBjaGlsZHJlbiBtaWdodCBub3QgaGF2ZSBiZWVuIGFkZGVkIHlldC5cclxuICAgICAgICB0aGlzLm92ZXJyaWRlcy5mb3JFYWNoKGZ1bmN0aW9uIChvdmVycmlkZSwgaSkge1xyXG4gICAgICAgICAgICBvdmVycmlkZSAmJiBjb250cm9scy5zZXRPdmVycmlkZShvdmVycmlkZSwgaSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUucmVtb3ZlQ2hpbGQgPSBmdW5jdGlvbiAoY29udHJvbHMpIHtcclxuICAgICAgICBpZiAoIXRoaXMuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNoaWxkcmVuLmRlbGV0ZShjb250cm9scyk7XHJcbiAgICB9O1xyXG4gICAgVmFsdWVBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUucmVzZXRDaGlsZHJlbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5jaGlsZHJlbilcclxuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5jbGVhcigpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBWYWx1ZUFuaW1hdGlvbkNvbnRyb2xzO1xyXG59KCkpO1xuXG4vKipcclxuICogVXNlIGNhbGxiYWNrIGVpdGhlciBvbmx5IG9uIHRoZSBpbml0aWFsIHJlbmRlciBvciBvbiBhbGwgcmVuZGVycy4gSW4gY29uY3VycmVudCBtb2RlXHJcbiAqIHRoZSBcImluaXRpYWxcIiByZW5kZXIgbWlnaHQgcnVuIG11bHRpcGxlIHRpbWVzXHJcbiAqXHJcbiAqIEBwYXJhbSBjYWxsYmFjayAtIENhbGxiYWNrIHRvIHJ1blxyXG4gKiBAcGFyYW0gaXNJbml0aWFsT25seSAtIFNldCB0byBgdHJ1ZWAgdG8gb25seSBydW4gb24gaW5pdGlhbCByZW5kZXIsIG9yIGBmYWxzZWAgZm9yIGFsbCByZW5kZXJzLiBEZWZhdWx0cyB0byBgZmFsc2VgLlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VJbml0aWFsT3JFdmVyeVJlbmRlcihjYWxsYmFjaywgaXNJbml0aWFsT25seSkge1xyXG4gICAgaWYgKGlzSW5pdGlhbE9ubHkgPT09IHZvaWQgMCkgeyBpc0luaXRpYWxPbmx5ID0gZmFsc2U7IH1cclxuICAgIHZhciBpc0luaXRpYWxSZW5kZXIgPSB1c2VSZWYodHJ1ZSk7XHJcbiAgICBpZiAoIWlzSW5pdGlhbE9ubHkgfHwgKGlzSW5pdGlhbE9ubHkgJiYgaXNJbml0aWFsUmVuZGVyLmN1cnJlbnQpKSB7XHJcbiAgICAgICAgY2FsbGJhY2soKTtcclxuICAgIH1cclxuICAgIGlzSW5pdGlhbFJlbmRlci5jdXJyZW50ID0gZmFsc2U7XHJcbn1cblxuLyoqXHJcbiAqIENvbnRyb2wgYW5pbWF0aW9ucyBvbiBvbmUgb3IgbW9yZSBjb21wb25lbnRzLlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG52YXIgQW5pbWF0aW9uQ29udHJvbHMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBBbmltYXRpb25Db250cm9scygpIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUcmFjayB3aGV0aGVyIHRoZSBob3N0IGNvbXBvbmVudCBoYXMgbW91bnRlZC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuaGFzTW91bnRlZCA9IGZhbHNlO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFBlbmRpbmcgYW5pbWF0aW9ucyB0aGF0IGFyZSBzdGFydGVkIGJlZm9yZSBhIGNvbXBvbmVudCBpcyBtb3VudGVkLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGludGVybmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5wZW5kaW5nQW5pbWF0aW9ucyA9IFtdO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgY29sbGVjdGlvbiBvZiBsaW5rZWQgY29tcG9uZW50IGFuaW1hdGlvbiBjb250cm9scy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50Q29udHJvbHMgPSBuZXcgU2V0KCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNldCB2YXJpYW50cyBvbiB0aGlzIGFuZCBhbGwgY2hpbGQgY29tcG9uZW50cy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFyaWFudHMgLSBUaGUgdmFyaWFudHMgdG8gc2V0XHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIEFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5zZXRWYXJpYW50cyA9IGZ1bmN0aW9uICh2YXJpYW50cykge1xyXG4gICAgICAgIHRoaXMudmFyaWFudHMgPSB2YXJpYW50cztcclxuICAgICAgICB0aGlzLmNvbXBvbmVudENvbnRyb2xzLmZvckVhY2goZnVuY3Rpb24gKGNvbnRyb2xzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjb250cm9scy5zZXRWYXJpYW50cyh2YXJpYW50cyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgYSBkZWZhdWx0IHRyYW5zaXRpb24gb24gdGhpcyBhbmQgYWxsIGNoaWxkIGNvbXBvbmVudHNcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdHJhbnNpdGlvbiAtIFRoZSBkZWZhdWx0IHRyYW5zaXRpb24gdG8gc2V0XHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIEFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5zZXREZWZhdWx0VHJhbnNpdGlvbiA9IGZ1bmN0aW9uICh0cmFuc2l0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5kZWZhdWx0VHJhbnNpdGlvbiA9IHRyYW5zaXRpb247XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRDb250cm9scy5mb3JFYWNoKGZ1bmN0aW9uIChjb250cm9scykge1xyXG4gICAgICAgICAgICByZXR1cm4gY29udHJvbHMuc2V0RGVmYXVsdFRyYW5zaXRpb24odHJhbnNpdGlvbik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTdWJzY3JpYmVzIGEgY29tcG9uZW50J3MgYW5pbWF0aW9uIGNvbnRyb2xzIHRvIHRoaXMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNvbnRyb2xzIC0gVGhlIGNvbnRyb2xzIHRvIHN1YnNjcmliZVxyXG4gICAgICogQHJldHVybnMgQW4gdW5zdWJzY3JpYmUgZnVuY3Rpb24uXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIEFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBmdW5jdGlvbiAoY29udHJvbHMpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50Q29udHJvbHMuYWRkKGNvbnRyb2xzKTtcclxuICAgICAgICBpZiAodGhpcy52YXJpYW50cylcclxuICAgICAgICAgICAgY29udHJvbHMuc2V0VmFyaWFudHModGhpcy52YXJpYW50cyk7XHJcbiAgICAgICAgaWYgKHRoaXMuZGVmYXVsdFRyYW5zaXRpb24pXHJcbiAgICAgICAgICAgIGNvbnRyb2xzLnNldERlZmF1bHRUcmFuc2l0aW9uKHRoaXMuZGVmYXVsdFRyYW5zaXRpb24pO1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5jb21wb25lbnRDb250cm9scy5kZWxldGUoY29udHJvbHMpOyB9O1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogU3RhcnRzIGFuIGFuaW1hdGlvbiBvbiBhbGwgbGlua2VkIGNvbXBvbmVudHMuXHJcbiAgICAgKlxyXG4gICAgICogQHJlbWFya3NcclxuICAgICAqXHJcbiAgICAgKiBgYGBqc3hcclxuICAgICAqIGNvbnRyb2xzLnN0YXJ0KFwidmFyaWFudExhYmVsXCIpXHJcbiAgICAgKiBjb250cm9scy5zdGFydCh7XHJcbiAgICAgKiAgIHg6IDAsXHJcbiAgICAgKiAgIHRyYW5zaXRpb246IHsgZHVyYXRpb246IDEgfVxyXG4gICAgICogfSlcclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBkZWZpbml0aW9uIC0gUHJvcGVydGllcyBvciB2YXJpYW50IGxhYmVsIHRvIGFuaW1hdGUgdG9cclxuICAgICAqIEBwYXJhbSB0cmFuc2l0aW9uIC0gT3B0aW9uYWwgYHRyYW5zdGlvbmAgdG8gYXBwbHkgdG8gYSB2YXJpYW50XHJcbiAgICAgKiBAcmV0dXJucyAtIEEgYFByb21pc2VgIHRoYXQgcmVzb2x2ZXMgd2hlbiBhbGwgYW5pbWF0aW9ucyBoYXZlIGNvbXBsZXRlZC5cclxuICAgICAqXHJcbiAgICAgKiBAcHVibGljXHJcbiAgICAgKi9cclxuICAgIEFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5zdGFydCA9IGZ1bmN0aW9uIChkZWZpbml0aW9uLCB0cmFuc2l0aW9uT3ZlcnJpZGUpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIGlmICh0aGlzLmhhc01vdW50ZWQpIHtcclxuICAgICAgICAgICAgdmFyIGFuaW1hdGlvbnNfMSA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudENvbnRyb2xzLmZvckVhY2goZnVuY3Rpb24gKGNvbnRyb2xzKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYW5pbWF0aW9uID0gY29udHJvbHMuc3RhcnQoZGVmaW5pdGlvbiwge1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb25PdmVycmlkZTogdHJhbnNpdGlvbk92ZXJyaWRlLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRpb25zXzEucHVzaChhbmltYXRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKGFuaW1hdGlvbnNfMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcclxuICAgICAgICAgICAgICAgIF90aGlzLnBlbmRpbmdBbmltYXRpb25zLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogW2RlZmluaXRpb24sIHRyYW5zaXRpb25PdmVycmlkZV0sXHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZTogcmVzb2x2ZSxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbnN0YW50bHkgc2V0IHRvIGEgc2V0IG9mIHByb3BlcnRpZXMgb3IgYSB2YXJpYW50LlxyXG4gICAgICpcclxuICAgICAqIGBgYGpzeFxyXG4gICAgICogLy8gV2l0aCBwcm9wZXJ0aWVzXHJcbiAgICAgKiBjb250cm9scy5zZXQoeyBvcGFjaXR5OiAwIH0pXHJcbiAgICAgKlxyXG4gICAgICogLy8gV2l0aCB2YXJpYW50c1xyXG4gICAgICogY29udHJvbHMuc2V0KFwiaGlkZGVuXCIpXHJcbiAgICAgKiBgYGBcclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxyZW1hcmtzXHJcbiAgICAgKiBXZSBjb3VsZCBwZXJmb3JtIGEgc2ltaWxhciB0cmljayB0byBgLnN0YXJ0YCB3aGVyZSB0aGlzIGNhbiBiZSBjYWxsZWQgYmVmb3JlIG1vdW50XHJcbiAgICAgKiBhbmQgd2UgbWFpbnRhaW4gYSBsaXN0IG9mIG9mIHBlbmRpbmcgYWN0aW9ucyB0aGF0IGdldCBhcHBsaWVkIG9uIG1vdW50LiBCdXQgdGhlXHJcbiAgICAgKiBleHBlY3RhdGlvbiBvZiBgc2V0YCBpcyB0aGF0IGl0IGhhcHBlbnMgc3luY2hyb25vdXNseSBhbmQgdGhpcyB3b3VsZCBiZSBkaWZmaWN1bHRcclxuICAgICAqIHRvIGRvIGJlZm9yZSBhbnkgY2hpbGRyZW4gaGF2ZSBldmVuIGF0dGFjaGVkIHRoZW1zZWx2ZXMuIEl0J3MgYWxzbyBwb29yIHByYWN0aXNlXHJcbiAgICAgKiBhbmQgd2Ugc2hvdWxkIGRpc2NvdXJhZ2UgcmVuZGVyLXN5bmNocm9ub3VzIGAuc3RhcnRgIGNhbGxzIHJhdGhlciB0aGFuIGxlYW4gaW50byB0aGlzLlxyXG4gICAgICpcclxuICAgICAqIEBwdWJsaWNcclxuICAgICAqL1xyXG4gICAgQW5pbWF0aW9uQ29udHJvbHMucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIChkZWZpbml0aW9uKSB7XHJcbiAgICAgICAgaW52YXJpYW50KHRoaXMuaGFzTW91bnRlZCwgXCJjb250cm9scy5zZXQoKSBzaG91bGQgb25seSBiZSBjYWxsZWQgYWZ0ZXIgYSBjb21wb25lbnQgaGFzIG1vdW50ZWQuIENvbnNpZGVyIGNhbGxpbmcgd2l0aGluIGEgdXNlRWZmZWN0IGhvb2suXCIpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBvbmVudENvbnRyb2xzLmZvckVhY2goZnVuY3Rpb24gKGNvbnRyb2xzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjb250cm9scy5hcHBseShkZWZpbml0aW9uKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFN0b3BzIGFuaW1hdGlvbnMgb24gYWxsIGxpbmtlZCBjb21wb25lbnRzLlxyXG4gICAgICpcclxuICAgICAqIGBgYGpzeFxyXG4gICAgICogY29udHJvbHMuc3RvcCgpXHJcbiAgICAgKiBgYGBcclxuICAgICAqXHJcbiAgICAgKiBAcHVibGljXHJcbiAgICAgKi9cclxuICAgIEFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50Q29udHJvbHMuZm9yRWFjaChmdW5jdGlvbiAoY29udHJvbHMpIHsgcmV0dXJuIGNvbnRyb2xzLnN0b3AoKTsgfSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXNlcyB0aGUgYW5pbWF0aW9uIGNvbnRyb2xzLlxyXG4gICAgICpcclxuICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICovXHJcbiAgICBBbmltYXRpb25Db250cm9scy5wcm90b3R5cGUubW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB0aGlzLmhhc01vdW50ZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMucGVuZGluZ0FuaW1hdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICAgICAgdmFyIGFuaW1hdGlvbiA9IF9hLmFuaW1hdGlvbiwgcmVzb2x2ZSA9IF9hLnJlc29sdmU7XHJcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5zdGFydC5hcHBseShfdGhpcywgYW5pbWF0aW9uKS50aGVuKHJlc29sdmUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogU3RvcHMgYWxsIGNoaWxkIGFuaW1hdGlvbnMgd2hlbiB0aGUgaG9zdCBjb21wb25lbnQgdW5tb3VudHMuXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIEFuaW1hdGlvbkNvbnRyb2xzLnByb3RvdHlwZS51bm1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuaGFzTW91bnRlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuc3RvcCgpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBBbmltYXRpb25Db250cm9scztcclxufSgpKTtcclxuLyoqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxudmFyIGFuaW1hdGlvbkNvbnRyb2xzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3IEFuaW1hdGlvbkNvbnRyb2xzKCk7IH07XG5cbnZhciBQcmVzZW5jZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KG51bGwpO1xuXG4vKipcclxuICogQGludGVybmFsXHJcbiAqL1xyXG52YXIgTW90aW9uQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe1xyXG4gICAgc3RhdGljOiBmYWxzZSxcclxufSk7XHJcbnZhciBpc1ZhcmlhbnRMYWJlbCA9IGZ1bmN0aW9uICh2KSB7XHJcbiAgICByZXR1cm4gdHlwZW9mIHYgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheSh2KTtcclxufTtcclxudmFyIGlzQW5pbWF0aW9uQ29udHJvbHMgPSBmdW5jdGlvbiAodikge1xyXG4gICAgcmV0dXJuIHYgaW5zdGFuY2VvZiBBbmltYXRpb25Db250cm9scztcclxufTtcclxuLyoqXHJcbiAqIFNldCB1cCB0aGUgY29udGV4dCBmb3IgY2hpbGRyZW4gbW90aW9uIGNvbXBvbmVudHMuXHJcbiAqXHJcbiAqIFdlIGFsc28gdXNlIHRoaXMgb3Bwb3J0dW5pdHkgdG8gYXBwbHkgYGluaXRpYWxgIHZhbHVlc1xyXG4gKi9cclxudmFyIHVzZU1vdGlvbkNvbnRleHQgPSBmdW5jdGlvbiAocGFyZW50Q29udGV4dCwgY29udHJvbHMsIHZhbHVlcywgaXNTdGF0aWMsIF9hKSB7XHJcbiAgICBpZiAoaXNTdGF0aWMgPT09IHZvaWQgMCkgeyBpc1N0YXRpYyA9IGZhbHNlOyB9XHJcbiAgICB2YXIgaW5pdGlhbCA9IF9hLmluaXRpYWwsIGFuaW1hdGUgPSBfYS5hbmltYXRlLCB2YXJpYW50cyA9IF9hLnZhcmlhbnRzLCB3aGlsZVRhcCA9IF9hLndoaWxlVGFwLCB3aGlsZUhvdmVyID0gX2Eud2hpbGVIb3ZlcjtcclxuICAgIHZhciBfYjtcclxuICAgIHZhciBwcmVzZW5jZUNvbnRleHQgPSB1c2VDb250ZXh0KFByZXNlbmNlQ29udGV4dCk7XHJcbiAgICAvLyBPdmVycmlkZSBpbml0aWFsIHdpdGggdGhhdCBmcm9tIGEgcGFyZW50IGNvbnRleHQsIGlmIGRlZmluZWRcclxuICAgIGlmICgoKF9iID0gcHJlc2VuY2VDb250ZXh0KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuaW5pdGlhbCkgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIGluaXRpYWwgPSBwcmVzZW5jZUNvbnRleHQuaW5pdGlhbDtcclxuICAgIH1cclxuICAgIHZhciBpbml0aWFsU3RhdGU7XHJcbiAgICBpZiAoaW5pdGlhbCA9PT0gZmFsc2UgJiYgIWlzQW5pbWF0aW9uQ29udHJvbHMoYW5pbWF0ZSkpIHtcclxuICAgICAgICBpbml0aWFsU3RhdGUgPSBhbmltYXRlO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAodHlwZW9mIGluaXRpYWwgIT09IFwiYm9vbGVhblwiKSB7XHJcbiAgICAgICAgaW5pdGlhbFN0YXRlID0gaW5pdGlhbDtcclxuICAgIH1cclxuICAgIC8vIFRyYWNrIG1vdW50ZWQgc3RhdHVzIHNvIGNoaWxkcmVuIGNhbiBkZXRlY3Qgd2hldGhlciB0aGV5IHdlcmUgcHJlc2VudCBkdXJpbmcgdGhlaXJcclxuICAgIC8vIHBhcmVudCdzIGZpcnN0IHJlbmRlclxyXG4gICAgdmFyIGhhc01vdW50ZWQgPSB1c2VSZWYoZmFsc2UpO1xyXG4gICAgLy8gV2UgcHJvcGFnYXRlIHRoaXMgY29tcG9uZW50J3MgVmFsdWVBbmltYXRpb25Db250cm9scyAqaWYqIHdlJ3JlIGJlaW5nIHByb3ZpZGVkIHZhcmlhbnRzLFxyXG4gICAgLy8gaWYgd2UncmUgYmVpbmcgdXNlZCB0byBjb250cm9sIHZhcmlhbnRzLCBvciBpZiB3ZSdyZSBiZWluZyBwYXNzZWQgYW5pbWF0aW9uIGNvbnRyb2xzLlxyXG4gICAgLy8gT3RoZXJ3aXNlIHRoaXMgY29tcG9uZW50IHNob3VsZCBiZSBcImludmlzaWJsZVwiIHRvIHZhcmlhbnQgcHJvcGFnYXRpb24uIFRoaXMgaXMgYSBzbGlnaHQgY29uY2Vzc2lvblxyXG4gICAgLy8gdG8gRnJhbWVyIFggd2hlcmUgZXZlcnkgYEZyYW1lYCBpcyBhIGBtb3Rpb25gIGNvbXBvbmVudCBhbmQgaXQgbWlnaHQgYmUgaWYgd2UgY2hhbmdlIHRoYXQgaW4gdGhlIGZ1dHVyZVxyXG4gICAgLy8gdGhhdCB0aGlzIHJlc3RyaWN0aW9uIGlzIHJlbW92ZWQuXHJcbiAgICB2YXIgc2hvdWxkUHJvcGFnYXRlQ29udHJvbHMgPSB2YXJpYW50cyB8fFxyXG4gICAgICAgIGlzVmFyaWFudExhYmVsKGFuaW1hdGUpIHx8XHJcbiAgICAgICAgaXNWYXJpYW50TGFiZWwod2hpbGVUYXApIHx8XHJcbiAgICAgICAgaXNWYXJpYW50TGFiZWwod2hpbGVIb3ZlcikgfHxcclxuICAgICAgICBpc0FuaW1hdGlvbkNvbnRyb2xzKGFuaW1hdGUpO1xyXG4gICAgLy8gSWYgdGhpcyBjb21wb25lbnQncyBgaW5pdGlhbGAgcHJvcCBpcyBhIHZhcmlhbnQgbGFiZWwsIHByb3BhZ2F0ZSBpdC4gT3RoZXJ3aXNlIHBhc3MgdGhlIHBhcmVudCdzLlxyXG4gICAgdmFyIHRhcmdldEluaXRpYWwgPSBpc1ZhcmlhbnRMYWJlbChpbml0aWFsU3RhdGUpXHJcbiAgICAgICAgPyBpbml0aWFsU3RhdGVcclxuICAgICAgICA6IHBhcmVudENvbnRleHQuaW5pdGlhbDtcclxuICAgIC8vIElmIHRoaXMgaXMgYSB2YXJpYW50IHRyZWUgd2UgbmVlZCB0byBwcm9wYWdhdGUgdGhlIGBhbmltYXRlYCBwcm9wIGluIGNhc2UgbmV3IGNoaWxkcmVuIGFyZSBhZGRlZCBhZnRlclxyXG4gICAgLy8gdGhlIHRyZWUgaW5pdGlhbGx5IGFuaW1hdGVzLlxyXG4gICAgdmFyIHRhcmdldEFuaW1hdGUgPSBpc1ZhcmlhbnRMYWJlbChhbmltYXRlKVxyXG4gICAgICAgID8gYW5pbWF0ZVxyXG4gICAgICAgIDogcGFyZW50Q29udGV4dC5hbmltYXRlO1xyXG4gICAgLy8gT25seSBhbGxvdyBgaW5pdGlhbGAgdG8gdHJpZ2dlciBjb250ZXh0IHJlLXJlbmRlcnMgaWYgdGhpcyBpcyBhIGBzdGF0aWNgIGNvbXBvbmVudCAoaWUgd2UncmUgb24gdGhlIEZyYW1lciBjYW52YXMpXHJcbiAgICAvLyBvciBpbiBhbm90aGVyIG5vbi1hbmltYXRpb24vaW50ZXJhY3Rpb24gZW52aXJvbm1lbnQuXHJcbiAgICB2YXIgaW5pdGlhbERlcGVuZGVuY3kgPSBpc1N0YXRpYyA/IHRhcmdldEluaXRpYWwgOiBudWxsO1xyXG4gICAgLy8gT25seSBhbGxvdyBgYW5pbWF0ZWAgdG8gdHJpZ2dlciBjb250ZXh0IHJlLXJlbmRlcnMgaWYgaXQncyBhIHZhcmlhbnQgbGFiZWwuIElmIHRoaXMgaXMgYW4gYXJyYXkgb2ZcclxuICAgIC8vIHZhcmlhbnQgbGFiZWxzIHRoZXJlJ3MgcHJvYmFibHkgYW4gb3B0aW1pc2F0aW9uIHRvIGRlZXAtY29tcGFyZSBidXQgaXQgbWlnaHQgYmUgYW4gb3Zlci1vcHRpbWlzYXRpb24uXHJcbiAgICAvLyBXZSB3YW50IHRvIGRvIHRoaXMgYXMgd2UgcmVseSBvbiBSZWFjdCdzIGNvbXBvbmVudCByZW5kZXJpbmcgb3JkZXIgZWFjaCByZW5kZXIgY3ljbGUgdG8gZGV0ZXJtaW5lXHJcbiAgICAvLyB0aGUgbmV3IG9yZGVyIG9mIGFueSBjaGlsZCBjb21wb25lbnRzIGZvciB0aGUgYHN0YWdnZXJDaGlsZHJlbmAgZnVuY3Rpb25hbGl0eS5cclxuICAgIHZhciBhbmltYXRlRGVwZW5kZW5jeSA9IHNob3VsZFByb3BhZ2F0ZUNvbnRyb2xzICYmIGlzVmFyaWFudExhYmVsKHRhcmdldEFuaW1hdGUpXHJcbiAgICAgICAgPyB0YXJnZXRBbmltYXRlXHJcbiAgICAgICAgOiBudWxsO1xyXG4gICAgLy8gVGhlIGNvbnRleHQgdG8gcHJvdmlkZSB0byB0aGUgY2hpbGQuIFdlIGB1c2VNZW1vYCBiZWNhdXNlIGFsdGhvdWdoIGBjb250cm9sc2AgYW5kIGBpbml0aWFsYCBhcmVcclxuICAgIC8vIHVubGlrZWx5IHRvIGNoYW5nZSwgYnkgbWFraW5nIHRoZSBjb250ZXh0IGFuIG9iamVjdCBpdCdsbCBiZSBjb25zaWRlcmVkIGEgbmV3IHZhbHVlIGV2ZXJ5IHJlbmRlci5cclxuICAgIC8vIFNvIGFsbCBjaGlsZCBtb3Rpb24gY29tcG9uZW50cyB3aWxsIHJlLXJlbmRlciBhcyBhIHJlc3VsdC5cclxuICAgIHZhciBjb250ZXh0ID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7IHJldHVybiAoe1xyXG4gICAgICAgIGNvbnRyb2xzOiBzaG91bGRQcm9wYWdhdGVDb250cm9sc1xyXG4gICAgICAgICAgICA/IGNvbnRyb2xzXHJcbiAgICAgICAgICAgIDogcGFyZW50Q29udGV4dC5jb250cm9scyxcclxuICAgICAgICBpbml0aWFsOiB0YXJnZXRJbml0aWFsLFxyXG4gICAgICAgIGFuaW1hdGU6IHRhcmdldEFuaW1hdGUsXHJcbiAgICAgICAgdmFsdWVzOiB2YWx1ZXMsXHJcbiAgICAgICAgaGFzTW91bnRlZDogaGFzTW91bnRlZCxcclxuICAgICAgICBpc1JlZHVjZWRNb3Rpb246IHBhcmVudENvbnRleHQuaXNSZWR1Y2VkTW90aW9uLFxyXG4gICAgfSk7IH0sIFtpbml0aWFsRGVwZW5kZW5jeSwgYW5pbWF0ZURlcGVuZGVuY3ksIHBhcmVudENvbnRleHQuaXNSZWR1Y2VkTW90aW9uXSk7XHJcbiAgICAvLyBVcGRhdGUgdGhlIGBzdGF0aWNgIHByb3BlcnR5IGV2ZXJ5IHJlbmRlci4gVGhpcyBpcyB1bmxpa2VseSB0byBjaGFuZ2UgYnV0IGFsc28gZXNzZW50aWFsbHkgZnJlZS5cclxuICAgIGNvbnRleHQuc3RhdGljID0gaXNTdGF0aWM7XHJcbiAgICAvLyBTZXQgaW5pdGlhbCBzdGF0ZS4gSWYgdGhpcyBpcyBhIHN0YXRpYyBjb21wb25lbnQgKGllIGluIEZyYW1lciBjYW52YXMpLCByZXNwb25kIHRvIHVwZGF0ZXNcclxuICAgIC8vIGluIGBpbml0aWFsYC5cclxuICAgIHVzZUluaXRpYWxPckV2ZXJ5UmVuZGVyKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW5pdGlhbFRvQXBwbHkgPSBpbml0aWFsU3RhdGUgfHwgcGFyZW50Q29udGV4dC5pbml0aWFsO1xyXG4gICAgICAgIGluaXRpYWxUb0FwcGx5ICYmIGNvbnRyb2xzLmFwcGx5KGluaXRpYWxUb0FwcGx5KTtcclxuICAgIH0sICFpc1N0YXRpYyk7XHJcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGhhc01vdW50ZWQuY3VycmVudCA9IHRydWU7XHJcbiAgICB9LCBbXSk7XHJcbiAgICByZXR1cm4gY29udGV4dDtcclxufTtcblxuLyoqXHJcbiAqIENyZWF0ZXMgYW4gaW1wZXJhdGl2ZSBzZXQgb2YgY29udHJvbHMgdG8gdHJpZ2dlciBhbmltYXRpb25zLlxyXG4gKlxyXG4gKiBUaGlzIGFsbG93cyBhIGNvbnNvbGlkYXRlZCwgdW5pZm9ybSBBUEkgZm9yIGFuaW1hdGlvbnMsIHRvIGJlIHRyaWdnZXJlZCBieSBvdGhlciBBUElzIGxpa2UgdGhlIGBhbmltYXRlYCBwcm9wLCBvciB0aGUgZ2VzdHVyZSBoYW5kbGVycy5cclxuICpcclxuICogQHBhcmFtIHZhbHVlc1xyXG4gKiBAcGFyYW0gcHJvcHNcclxuICogQHBhcmFtIHJlZlxyXG4gKiBAcGFyYW0gc3Vic2NyaWJlVG9QYXJlbnRDb250cm9sc1xyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIHVzZVZhbHVlQW5pbWF0aW9uQ29udHJvbHMoY29uZmlnLCBwcm9wcywgc3Vic2NyaWJlVG9QYXJlbnRDb250cm9scykge1xyXG4gICAgdmFyIHZhcmlhbnRzID0gcHJvcHMudmFyaWFudHMsIHRyYW5zaXRpb24gPSBwcm9wcy50cmFuc2l0aW9uO1xyXG4gICAgdmFyIHBhcmVudENvbnRyb2xzID0gdXNlQ29udGV4dChNb3Rpb25Db250ZXh0KS5jb250cm9scztcclxuICAgIHZhciBwcmVzZW5jZUNvbnRleHQgPSB1c2VDb250ZXh0KFByZXNlbmNlQ29udGV4dCk7XHJcbiAgICB2YXIgY29udHJvbHMgPSB1c2VDb25zdGFudChmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgVmFsdWVBbmltYXRpb25Db250cm9scyhjb25maWcpOyB9KTtcclxuICAgIC8vIFJlc2V0IGFuZCByZXN1YnNjcmliZSBjaGlsZHJlbiBldmVyeSByZW5kZXIgdG8gZW5zdXJlIHN0YWdnZXIgb3JkZXIgaXMgY29ycmVjdFxyXG4gICAgaWYgKCFwcmVzZW5jZUNvbnRleHQgfHwgcHJlc2VuY2VDb250ZXh0LmlzUHJlc2VudCkge1xyXG4gICAgICAgIGNvbnRyb2xzLnJlc2V0Q2hpbGRyZW4oKTtcclxuICAgICAgICBjb250cm9scy5zZXRQcm9wcyhwcm9wcyk7XHJcbiAgICAgICAgY29udHJvbHMuc2V0VmFyaWFudHModmFyaWFudHMpO1xyXG4gICAgICAgIGNvbnRyb2xzLnNldERlZmF1bHRUcmFuc2l0aW9uKHRyYW5zaXRpb24pO1xyXG4gICAgfVxyXG4gICAgLy8gV2UgaGF2ZSB0byBzdWJzY3JpYmUgdG8gdGhlIHBhcmVudCBjb250cm9scyB3aXRoaW4gYSB1c2VFZmZlY3QgcmF0aGVyIHRoYW4gZHVyaW5nIHJlbmRlcixcclxuICAgIC8vIGFzXHJcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmIChzdWJzY3JpYmVUb1BhcmVudENvbnRyb2xzICYmIHBhcmVudENvbnRyb2xzKSB7XHJcbiAgICAgICAgICAgIHBhcmVudENvbnRyb2xzLmFkZENoaWxkKGNvbnRyb2xzKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gUmVtb3ZlIHJlZmVyZW5jZSB0byBvbkFuaW1hdGlvbkNvbXBsZXRlIGZyb20gY29udHJvbHMuIEFsbCB0aGUgTW90aW9uVmFsdWVzXHJcbiAgICAgICAgICAgIC8vIGFyZSB1bnN1YnNjcmliZWQgZnJvbSB0aGlzIGNvbXBvbmVudCBzZXBhcmF0ZWx5LiBXZSBsZXQgYW5pbWF0aW9ucyBydW4gb3V0XHJcbiAgICAgICAgICAgIC8vIGFzIHRoZXkgbWlnaHQgYmUgYW5pbWF0aW5nIG90aGVyIGNvbXBvbmVudHMuXHJcbiAgICAgICAgICAgIHZhciBvbkFuaW1hdGlvbkNvbXBsZXRlID0gcHJvcHMub25BbmltYXRpb25Db21wbGV0ZSwgdW5tb3VudFByb3BzID0gX19yZXN0KHByb3BzLCBbXCJvbkFuaW1hdGlvbkNvbXBsZXRlXCJdKTtcclxuICAgICAgICAgICAgY29udHJvbHMuc2V0UHJvcHModW5tb3VudFByb3BzKTtcclxuICAgICAgICAgICAgcGFyZW50Q29udHJvbHMgJiYgcGFyZW50Q29udHJvbHMucmVtb3ZlQ2hpbGQoY29udHJvbHMpO1xyXG4gICAgICAgIH07XHJcbiAgICB9LCBbXSk7XHJcbiAgICByZXR1cm4gY29udHJvbHM7XHJcbn1cblxudmFyIGNoZWNrU2hvdWxkSW5oZXJpdFZhcmlhbnQgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgIHZhciBhbmltYXRlID0gX2EuYW5pbWF0ZSwgdmFyaWFudHMgPSBfYS52YXJpYW50cywgX2IgPSBfYS5pbmhlcml0LCBpbmhlcml0ID0gX2IgPT09IHZvaWQgMCA/IHRydWUgOiBfYjtcclxuICAgIHJldHVybiAoaW5oZXJpdCAmJlxyXG4gICAgICAgICEhdmFyaWFudHMgJiZcclxuICAgICAgICAoIWFuaW1hdGUgfHwgYW5pbWF0ZSBpbnN0YW5jZW9mIEFuaW1hdGlvbkNvbnRyb2xzKSk7XHJcbn07XG5cbi8qKlxyXG4gKiBVc2VzIHRoZSByZWYgdGhhdCBpcyBwYXNzZWQgaW4sIG9yIGNyZWF0ZXMgYSBuZXcgb25lXHJcbiAqIEBwYXJhbSBleHRlcm5hbCAtIEV4dGVybmFsIHJlZlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIHVzZUV4dGVybmFsUmVmKGV4dGVybmFsUmVmKSB7XHJcbiAgICAvLyBXZSdyZSBjb25kaXRpb25hbGx5IGNhbGxpbmcgYHVzZVJlZmAgaGVyZSB3aGljaCBpcyBzb3J0IG9mIG5hdWdodHkgYXMgaG9va3NcclxuICAgIC8vIHNob3VsZG4ndCBiZSBjYWxsZWQgY29uZGl0aW9uYWxseS4gSG93ZXZlciwgRnJhbWVyIE1vdGlvbiB3aWxsIGJyZWFrIGlmIHRoaXNcclxuICAgIC8vIGNvbmRpdGlvbiBjaGFuZ2VzIGFueXdheS4gSXQgbWlnaHQgYmUgcG9zc2libGUgdG8gdXNlIGFuIGludmFyaWFudCBoZXJlIHRvXHJcbiAgICAvLyBtYWtlIGl0IGV4cGxpY2l0LCBidXQgSSBleHBlY3QgY2hhbmdpbmcgYHJlZmAgaXMgbm90IG5vcm1hbCBiZWhhdmlvdXIuXHJcbiAgICB2YXIgcmVmID0gIWV4dGVybmFsUmVmIHx8IHR5cGVvZiBleHRlcm5hbFJlZiA9PT0gXCJmdW5jdGlvblwiXHJcbiAgICAgICAgPyB1c2VSZWYobnVsbClcclxuICAgICAgICA6IGV4dGVybmFsUmVmO1xyXG4gICAgLy8gSGFuZGxlIGByZWZgIGZ1bmN0aW9ucy4gQWdhaW4sIGNhbGxpbmcgdGhlIGhvb2sgY29uZGl0aW9uYWxseSBpcyBraW5kIG9mIG5hdWdodHlcclxuICAgIC8vIGJ1dCBgcmVmYCB0eXBlcyBjaGFuZ2luZyBiZXR3ZWVuIHJlbmRlcnMgd291bGQgYnJlYWsgTW90aW9uIGFueXdheS4gSWYgd2UgcmVjZWl2ZVxyXG4gICAgLy8gYnVnIHJlcG9ydHMgYWJvdXQgdGhpcywgd2Ugc2hvdWxkIHRyYWNrIHRoZSBwcm92aWRlZCByZWYgYW5kIHRocm93IGFuIGludmFyaWFudFxyXG4gICAgLy8gcmF0aGVyIHRoYW4gbW92ZSB0aGUgY29uZGl0aW9uYWwgdG8gaW5zaWRlIHRoZSB1c2VFZmZlY3QgYXMgdGhpcyB3aWxsIGJlIGZpcmVkXHJcbiAgICAvLyBmb3IgZXZlcnkgRnJhbWUgY29tcG9uZW50IHdpdGhpbiBGcmFtZXIuXHJcbiAgICBpZiAoZXh0ZXJuYWxSZWYgJiYgdHlwZW9mIGV4dGVybmFsUmVmID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBleHRlcm5hbFJlZihyZWYuY3VycmVudCk7XHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBleHRlcm5hbFJlZihudWxsKTsgfTtcclxuICAgICAgICB9LCBbXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVmO1xyXG59XG5cbi8qKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbnZhciBjcmVhdGVNb3Rpb25Db21wb25lbnQgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgIHZhciBnZXRWYWx1ZUNvbnRyb2xzQ29uZmlnID0gX2EuZ2V0VmFsdWVDb250cm9sc0NvbmZpZywgbG9hZEZ1bmN0aW9uYWxpdHlDb21wb25lbnRzID0gX2EubG9hZEZ1bmN0aW9uYWxpdHlDb21wb25lbnRzLCByZW5kZXJDb21wb25lbnQgPSBfYS5yZW5kZXJDb21wb25lbnQ7XHJcbiAgICBmdW5jdGlvbiBNb3Rpb25Db21wb25lbnQocHJvcHMsIGV4dGVybmFsUmVmKSB7XHJcbiAgICAgICAgdmFyIHJlZiA9IHVzZUV4dGVybmFsUmVmKGV4dGVybmFsUmVmKTtcclxuICAgICAgICB2YXIgcGFyZW50Q29udGV4dCA9IHVzZUNvbnRleHQoTW90aW9uQ29udGV4dCk7XHJcbiAgICAgICAgdmFyIGlzU3RhdGljID0gcGFyZW50Q29udGV4dC5zdGF0aWMgfHwgcHJvcHMuc3RhdGljIHx8IGZhbHNlO1xyXG4gICAgICAgIHZhciB2YWx1ZXMgPSB1c2VNb3Rpb25WYWx1ZXMocHJvcHMpO1xyXG4gICAgICAgIHZhciBzdHlsZSA9IHVzZU1vdGlvblN0eWxlcyh2YWx1ZXMsIHByb3BzLnN0eWxlLCBpc1N0YXRpYywgcHJvcHMudHJhbnNmb3JtVmFsdWVzKTtcclxuICAgICAgICB2YXIgc2hvdWxkSW5oZXJpdFZhcmlhbnQgPSBjaGVja1Nob3VsZEluaGVyaXRWYXJpYW50KHByb3BzKTtcclxuICAgICAgICB2YXIgY29udHJvbHNDb25maWcgPSB1c2VDb25zdGFudChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBnZXRWYWx1ZUNvbnRyb2xzQ29uZmlnKHJlZiwgdmFsdWVzKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB2YXIgY29udHJvbHMgPSB1c2VWYWx1ZUFuaW1hdGlvbkNvbnRyb2xzKGNvbnRyb2xzQ29uZmlnLCBwcm9wcywgc2hvdWxkSW5oZXJpdFZhcmlhbnQpO1xyXG4gICAgICAgIHZhciBjb250ZXh0ID0gdXNlTW90aW9uQ29udGV4dChwYXJlbnRDb250ZXh0LCBjb250cm9scywgdmFsdWVzLCBpc1N0YXRpYywgcHJvcHMpO1xyXG4gICAgICAgIHZhciBmdW5jdGlvbmFsaXR5ID0gaXNTdGF0aWNcclxuICAgICAgICAgICAgPyBudWxsXHJcbiAgICAgICAgICAgIDogbG9hZEZ1bmN0aW9uYWxpdHlDb21wb25lbnRzKHJlZiwgdmFsdWVzLCBwcm9wcywgcGFyZW50Q29udGV4dCwgY29udHJvbHMsIHNob3VsZEluaGVyaXRWYXJpYW50KTtcclxuICAgICAgICB2YXIgcmVuZGVyZWRDb21wb25lbnQgPSByZW5kZXJDb21wb25lbnQocmVmLCBzdHlsZSwgdmFsdWVzLCBwcm9wcywgaXNTdGF0aWMpO1xyXG4gICAgICAgIHJldHVybiAoY3JlYXRlRWxlbWVudChGcmFnbWVudCwgbnVsbCxcclxuICAgICAgICAgICAgY3JlYXRlRWxlbWVudChNb3Rpb25Db250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBjb250ZXh0IH0sIHJlbmRlcmVkQ29tcG9uZW50KSxcclxuICAgICAgICAgICAgY3JlYXRlRWxlbWVudChGcmFnbWVudCwgbnVsbCxcclxuICAgICAgICAgICAgICAgIGNyZWF0ZUVsZW1lbnQoTW91bnQsIHsgaW5uZXJSZWY6IHJlZiwgdmFsdWVzOiB2YWx1ZXMsIGlzU3RhdGljOiBpc1N0YXRpYyB9KSxcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uYWxpdHkpKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZm9yd2FyZFJlZihNb3Rpb25Db21wb25lbnQpO1xyXG59O1xuXG4vKipcclxuICogQGludGVybmFsXHJcbiAqL1xyXG52YXIgaHRtbEVsZW1lbnRzID0gW1xyXG4gICAgXCJhXCIsXHJcbiAgICBcImFiYnJcIixcclxuICAgIFwiYWRkcmVzc1wiLFxyXG4gICAgXCJhcmVhXCIsXHJcbiAgICBcImFydGljbGVcIixcclxuICAgIFwiYXNpZGVcIixcclxuICAgIFwiYXVkaW9cIixcclxuICAgIFwiYlwiLFxyXG4gICAgXCJiYXNlXCIsXHJcbiAgICBcImJkaVwiLFxyXG4gICAgXCJiZG9cIixcclxuICAgIFwiYmlnXCIsXHJcbiAgICBcImJsb2NrcXVvdGVcIixcclxuICAgIFwiYm9keVwiLFxyXG4gICAgXCJiclwiLFxyXG4gICAgXCJidXR0b25cIixcclxuICAgIFwiY2FudmFzXCIsXHJcbiAgICBcImNhcHRpb25cIixcclxuICAgIFwiY2l0ZVwiLFxyXG4gICAgXCJjb2RlXCIsXHJcbiAgICBcImNvbFwiLFxyXG4gICAgXCJjb2xncm91cFwiLFxyXG4gICAgXCJkYXRhXCIsXHJcbiAgICBcImRhdGFsaXN0XCIsXHJcbiAgICBcImRkXCIsXHJcbiAgICBcImRlbFwiLFxyXG4gICAgXCJkZXRhaWxzXCIsXHJcbiAgICBcImRmblwiLFxyXG4gICAgXCJkaWFsb2dcIixcclxuICAgIFwiZGl2XCIsXHJcbiAgICBcImRsXCIsXHJcbiAgICBcImR0XCIsXHJcbiAgICBcImVtXCIsXHJcbiAgICBcImVtYmVkXCIsXHJcbiAgICBcImZpZWxkc2V0XCIsXHJcbiAgICBcImZpZ2NhcHRpb25cIixcclxuICAgIFwiZmlndXJlXCIsXHJcbiAgICBcImZvb3RlclwiLFxyXG4gICAgXCJmb3JtXCIsXHJcbiAgICBcImgxXCIsXHJcbiAgICBcImgyXCIsXHJcbiAgICBcImgzXCIsXHJcbiAgICBcImg0XCIsXHJcbiAgICBcImg1XCIsXHJcbiAgICBcImg2XCIsXHJcbiAgICBcImhlYWRcIixcclxuICAgIFwiaGVhZGVyXCIsXHJcbiAgICBcImhncm91cFwiLFxyXG4gICAgXCJoclwiLFxyXG4gICAgXCJodG1sXCIsXHJcbiAgICBcImlcIixcclxuICAgIFwiaWZyYW1lXCIsXHJcbiAgICBcImltZ1wiLFxyXG4gICAgXCJpbnB1dFwiLFxyXG4gICAgXCJpbnNcIixcclxuICAgIFwia2JkXCIsXHJcbiAgICBcImtleWdlblwiLFxyXG4gICAgXCJsYWJlbFwiLFxyXG4gICAgXCJsZWdlbmRcIixcclxuICAgIFwibGlcIixcclxuICAgIFwibGlua1wiLFxyXG4gICAgXCJtYWluXCIsXHJcbiAgICBcIm1hcFwiLFxyXG4gICAgXCJtYXJrXCIsXHJcbiAgICBcIm1lbnVcIixcclxuICAgIFwibWVudWl0ZW1cIixcclxuICAgIFwibWV0YVwiLFxyXG4gICAgXCJtZXRlclwiLFxyXG4gICAgXCJuYXZcIixcclxuICAgIFwibm9zY3JpcHRcIixcclxuICAgIFwib2JqZWN0XCIsXHJcbiAgICBcIm9sXCIsXHJcbiAgICBcIm9wdGdyb3VwXCIsXHJcbiAgICBcIm9wdGlvblwiLFxyXG4gICAgXCJvdXRwdXRcIixcclxuICAgIFwicFwiLFxyXG4gICAgXCJwYXJhbVwiLFxyXG4gICAgXCJwaWN0dXJlXCIsXHJcbiAgICBcInByZVwiLFxyXG4gICAgXCJwcm9ncmVzc1wiLFxyXG4gICAgXCJxXCIsXHJcbiAgICBcInJwXCIsXHJcbiAgICBcInJ0XCIsXHJcbiAgICBcInJ1YnlcIixcclxuICAgIFwic1wiLFxyXG4gICAgXCJzYW1wXCIsXHJcbiAgICBcInNjcmlwdFwiLFxyXG4gICAgXCJzZWN0aW9uXCIsXHJcbiAgICBcInNlbGVjdFwiLFxyXG4gICAgXCJzbWFsbFwiLFxyXG4gICAgXCJzb3VyY2VcIixcclxuICAgIFwic3BhblwiLFxyXG4gICAgXCJzdHJvbmdcIixcclxuICAgIFwic3R5bGVcIixcclxuICAgIFwic3ViXCIsXHJcbiAgICBcInN1bW1hcnlcIixcclxuICAgIFwic3VwXCIsXHJcbiAgICBcInRhYmxlXCIsXHJcbiAgICBcInRib2R5XCIsXHJcbiAgICBcInRkXCIsXHJcbiAgICBcInRleHRhcmVhXCIsXHJcbiAgICBcInRmb290XCIsXHJcbiAgICBcInRoXCIsXHJcbiAgICBcInRoZWFkXCIsXHJcbiAgICBcInRpbWVcIixcclxuICAgIFwidGl0bGVcIixcclxuICAgIFwidHJcIixcclxuICAgIFwidHJhY2tcIixcclxuICAgIFwidVwiLFxyXG4gICAgXCJ1bFwiLFxyXG4gICAgXCJ2YXJcIixcclxuICAgIFwidmlkZW9cIixcclxuICAgIFwid2JyXCIsXHJcbiAgICBcIndlYnZpZXdcIixcclxuXTtcclxuLyoqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxudmFyIHN2Z0VsZW1lbnRzID0gW1xyXG4gICAgXCJhbmltYXRlXCIsXHJcbiAgICBcImNpcmNsZVwiLFxyXG4gICAgXCJjbGlwUGF0aFwiLFxyXG4gICAgXCJkZWZzXCIsXHJcbiAgICBcImRlc2NcIixcclxuICAgIFwiZWxsaXBzZVwiLFxyXG4gICAgXCJmZUJsZW5kXCIsXHJcbiAgICBcImZlQ29sb3JNYXRyaXhcIixcclxuICAgIFwiZmVDb21wb25lbnRUcmFuc2ZlclwiLFxyXG4gICAgXCJmZUNvbXBvc2l0ZVwiLFxyXG4gICAgXCJmZUNvbnZvbHZlTWF0cml4XCIsXHJcbiAgICBcImZlRGlmZnVzZUxpZ2h0aW5nXCIsXHJcbiAgICBcImZlRGlzcGxhY2VtZW50TWFwXCIsXHJcbiAgICBcImZlRGlzdGFudExpZ2h0XCIsXHJcbiAgICBcImZlRHJvcFNoYWRvd1wiLFxyXG4gICAgXCJmZUZsb29kXCIsXHJcbiAgICBcImZlRnVuY0FcIixcclxuICAgIFwiZmVGdW5jQlwiLFxyXG4gICAgXCJmZUZ1bmNHXCIsXHJcbiAgICBcImZlRnVuY1JcIixcclxuICAgIFwiZmVHYXVzc2lhbkJsdXJcIixcclxuICAgIFwiZmVJbWFnZVwiLFxyXG4gICAgXCJmZU1lcmdlXCIsXHJcbiAgICBcImZlTWVyZ2VOb2RlXCIsXHJcbiAgICBcImZlTW9ycGhvbG9neVwiLFxyXG4gICAgXCJmZU9mZnNldFwiLFxyXG4gICAgXCJmZVBvaW50TGlnaHRcIixcclxuICAgIFwiZmVTcGVjdWxhckxpZ2h0aW5nXCIsXHJcbiAgICBcImZlU3BvdExpZ2h0XCIsXHJcbiAgICBcImZlVGlsZVwiLFxyXG4gICAgXCJmZVR1cmJ1bGVuY2VcIixcclxuICAgIFwiZmlsdGVyXCIsXHJcbiAgICBcImZvcmVpZ25PYmplY3RcIixcclxuICAgIFwiZ1wiLFxyXG4gICAgXCJpbWFnZVwiLFxyXG4gICAgXCJsaW5lXCIsXHJcbiAgICBcImxpbmVhckdyYWRpZW50XCIsXHJcbiAgICBcIm1hcmtlclwiLFxyXG4gICAgXCJtYXNrXCIsXHJcbiAgICBcIm1ldGFkYXRhXCIsXHJcbiAgICBcInBhdGhcIixcclxuICAgIFwicGF0dGVyblwiLFxyXG4gICAgXCJwb2x5Z29uXCIsXHJcbiAgICBcInBvbHlsaW5lXCIsXHJcbiAgICBcInJhZGlhbEdyYWRpZW50XCIsXHJcbiAgICBcInJlY3RcIixcclxuICAgIFwic3RvcFwiLFxyXG4gICAgXCJzdmdcIixcclxuICAgIFwic3dpdGNoXCIsXHJcbiAgICBcInN5bWJvbFwiLFxyXG4gICAgXCJ0ZXh0XCIsXHJcbiAgICBcInRleHRQYXRoXCIsXHJcbiAgICBcInRzcGFuXCIsXHJcbiAgICBcInVzZVwiLFxyXG4gICAgXCJ2aWV3XCIsXHJcbl07XG5cbi8qKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbnZhciBNb3Rpb25QbHVnaW5Db250ZXh0ID0gY3JlYXRlQ29udGV4dCh7XHJcbiAgICB0cmFuc2Zvcm1QYWdlUG9pbnQ6IGZ1bmN0aW9uIChwKSB7IHJldHVybiBwOyB9LFxyXG59KTtcclxuLyoqXHJcbiAqIEByZW1hcmtzIEZvciBub3cgSSB0aGluayB0aGlzIHNob3VsZCByZW1haW4gYSBwcml2YXRlIEFQSSBmb3Igb3VyIG93biB1c2VcclxuICogdW50aWwgd2UgY2FuIGZpZ3VyZSBvdXQgYSBuaWNlciB3YXkgb2YgYWxsb3dpbmcgcGVvcGxlIHRvIGFkZCB0aGVzZVxyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIE1vdGlvblBsdWdpbnMoX2EpIHtcclxuICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBwcm9wcyA9IF9fcmVzdChfYSwgW1wiY2hpbGRyZW5cIl0pO1xyXG4gICAgdmFyIHBsdWdpbkNvbnRleHQgPSB1c2VDb250ZXh0KE1vdGlvblBsdWdpbkNvbnRleHQpO1xyXG4gICAgdmFyIHZhbHVlID0gdXNlUmVmKF9fYXNzaWduKHt9LCBwbHVnaW5Db250ZXh0KSkuY3VycmVudDtcclxuICAgIC8vIE11dGF0aXZlIHRvIHByZXZlbnQgdHJpZ2dlcmluZyByZXJlbmRlcnMgaW4gYWxsIGxpc3RlbmluZ1xyXG4gICAgLy8gY29tcG9uZW50cyBldmVyeSB0aW1lIHRoaXMgY29tcG9uZW50IHJlbmRlcnNcclxuICAgIGZvciAodmFyIGtleSBpbiBwcm9wcykge1xyXG4gICAgICAgIHZhbHVlW2tleV0gPSBwcm9wc1trZXldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIChjcmVhdGVFbGVtZW50KE1vdGlvblBsdWdpbkNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IHZhbHVlIH0sIGNoaWxkcmVuKSk7XHJcbn1cblxuZnVuY3Rpb24gdXNlVW5tb3VudEVmZmVjdChjYWxsYmFjaykge1xyXG4gICAgcmV0dXJuIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBjYWxsYmFjaygpOyB9OyB9LCBbXSk7XHJcbn1cblxuZnVuY3Rpb24gYWRkRG9tRXZlbnQodGFyZ2V0LCBldmVudE5hbWUsIGhhbmRsZXIsIG9wdGlvbnMpIHtcclxuICAgIGlmICghaGFuZGxlcilcclxuICAgICAgICByZXR1cm47XHJcbiAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhhbmRsZXIsIG9wdGlvbnMpO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucyk7IH07XHJcbn1cclxuLyoqXHJcbiAqIEF0dGFjaGVzIGFuIGV2ZW50IGxpc3RlbmVyIGRpcmVjdGx5IHRvIHRoZSBwcm92aWRlZCBET00gZWxlbWVudC5cclxuICpcclxuICogQnlwYXNzaW5nIFJlYWN0J3MgZXZlbnQgc3lzdGVtIGNhbiBiZSBkZXNpcmFibGUsIGZvciBpbnN0YW5jZSB3aGVuIGF0dGFjaGluZyBub24tcGFzc2l2ZVxyXG4gKiBldmVudCBoYW5kbGVycy5cclxuICpcclxuICogYGBganN4XHJcbiAqIGNvbnN0IHJlZiA9IHVzZVJlZihudWxsKVxyXG4gKlxyXG4gKiB1c2VEb21FdmVudChyZWYsICd3aGVlbCcsIG9uV2hlZWwsIHsgcGFzc2l2ZTogZmFsc2UgfSlcclxuICpcclxuICogcmV0dXJuIDxkaXYgcmVmPXtyZWZ9IC8+XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcGFyYW0gcmVmIC0gUmVhY3QuUmVmT2JqZWN0IHRoYXQncyBiZWVuIHByb3ZpZGVkIHRvIHRoZSBlbGVtZW50IHlvdSB3YW50IHRvIGJpbmQgdGhlIGxpc3RlbmVyIHRvLlxyXG4gKiBAcGFyYW0gZXZlbnROYW1lIC0gTmFtZSBvZiB0aGUgZXZlbnQgeW91IHdhbnQgbGlzdGVuIGZvci5cclxuICogQHBhcmFtIGhhbmRsZXIgLSBGdW5jdGlvbiB0byBmaXJlIHdoZW4gcmVjZWl2aW5nIHRoZSBldmVudC5cclxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRvIHBhc3MgdG8gYEV2ZW50LmFkZEV2ZW50TGlzdGVuZXJgLlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VEb21FdmVudChyZWYsIGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucykge1xyXG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZWxlbWVudCA9IHJlZi5jdXJyZW50O1xyXG4gICAgICAgIGlmIChoYW5kbGVyICYmIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGFkZERvbUV2ZW50KGVsZW1lbnQsIGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgW3JlZiwgZXZlbnROYW1lLCBoYW5kbGVyLCBvcHRpb25zXSk7XHJcbn1cblxuZnVuY3Rpb24gaXNNb3VzZUV2ZW50KGV2ZW50KSB7XHJcbiAgICAvLyBQb2ludGVyRXZlbnQgaW5oZXJpdHMgZnJvbSBNb3VzZUV2ZW50IHNvIHdlIGNhbid0IHVzZSBhIHN0cmFpZ2h0IGluc3RhbmNlb2YgY2hlY2suXHJcbiAgICBpZiAodHlwZW9mIFBvaW50ZXJFdmVudCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBldmVudCBpbnN0YW5jZW9mIFBvaW50ZXJFdmVudCkge1xyXG4gICAgICAgIHJldHVybiAhIShldmVudC5wb2ludGVyVHlwZSA9PT0gXCJtb3VzZVwiKTtcclxuICAgIH1cclxuICAgIHJldHVybiBldmVudCBpbnN0YW5jZW9mIE1vdXNlRXZlbnQ7XHJcbn1cclxuZnVuY3Rpb24gaXNUb3VjaEV2ZW50KGV2ZW50KSB7XHJcbiAgICB2YXIgaGFzVG91Y2hlcyA9ICEhZXZlbnQudG91Y2hlcztcclxuICAgIHJldHVybiBoYXNUb3VjaGVzO1xyXG59XG5cbi8qKlxyXG4gKiBGaWx0ZXJzIG91dCBldmVudHMgbm90IGF0dGFjaGVkIHRvIHRoZSBwcmltYXJ5IHBvaW50ZXIgKGN1cnJlbnRseSBsZWZ0IG1vdXNlIGJ1dHRvbilcclxuICogQHBhcmFtIGV2ZW50SGFuZGxlclxyXG4gKi9cclxuZnVuY3Rpb24gZmlsdGVyUHJpbWFyeVBvaW50ZXIoZXZlbnRIYW5kbGVyKSB7XHJcbiAgICBpZiAoIWV2ZW50SGFuZGxlcilcclxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIHZhciBpc01vdXNlRXZlbnQgPSBldmVudCBpbnN0YW5jZW9mIE1vdXNlRXZlbnQ7XHJcbiAgICAgICAgdmFyIGlzUHJpbWFyeVBvaW50ZXIgPSAhaXNNb3VzZUV2ZW50IHx8XHJcbiAgICAgICAgICAgIChpc01vdXNlRXZlbnQgJiYgZXZlbnQuYnV0dG9uID09PSAwKTtcclxuICAgICAgICBpZiAoaXNQcmltYXJ5UG9pbnRlcikge1xyXG4gICAgICAgICAgICBldmVudEhhbmRsZXIoZXZlbnQpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxudmFyIGRlZmF1bHRQYWdlUG9pbnQgPSB7IHBhZ2VYOiAwLCBwYWdlWTogMCB9O1xyXG5mdW5jdGlvbiBwb2ludEZyb21Ub3VjaChlKSB7XHJcbiAgICB2YXIgcHJpbWFyeVRvdWNoID0gZS50b3VjaGVzWzBdIHx8IGUuY2hhbmdlZFRvdWNoZXNbMF07XHJcbiAgICB2YXIgX2EgPSBwcmltYXJ5VG91Y2ggfHwgZGVmYXVsdFBhZ2VQb2ludCwgcGFnZVggPSBfYS5wYWdlWCwgcGFnZVkgPSBfYS5wYWdlWTtcclxuICAgIHJldHVybiB7IHg6IHBhZ2VYLCB5OiBwYWdlWSB9O1xyXG59XHJcbmZ1bmN0aW9uIHBvaW50RnJvbU1vdXNlKF9hKSB7XHJcbiAgICB2YXIgX2IgPSBfYS5wYWdlWCwgcGFnZVggPSBfYiA9PT0gdm9pZCAwID8gMCA6IF9iLCBfYyA9IF9hLnBhZ2VZLCBwYWdlWSA9IF9jID09PSB2b2lkIDAgPyAwIDogX2M7XHJcbiAgICByZXR1cm4geyB4OiBwYWdlWCwgeTogcGFnZVkgfTtcclxufVxyXG5mdW5jdGlvbiBleHRyYWN0RXZlbnRJbmZvKGV2ZW50KSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHBvaW50OiBpc1RvdWNoRXZlbnQoZXZlbnQpXHJcbiAgICAgICAgICAgID8gcG9pbnRGcm9tVG91Y2goZXZlbnQpXHJcbiAgICAgICAgICAgIDogcG9pbnRGcm9tTW91c2UoZXZlbnQpLFxyXG4gICAgfTtcclxufVxyXG52YXIgd3JhcEhhbmRsZXIgPSBmdW5jdGlvbiAoaGFuZGxlciwgc2hvdWxkRmlsdGVyUHJpbWFyeVBvaW50ZXIpIHtcclxuICAgIGlmIChzaG91bGRGaWx0ZXJQcmltYXJ5UG9pbnRlciA9PT0gdm9pZCAwKSB7IHNob3VsZEZpbHRlclByaW1hcnlQb2ludGVyID0gZmFsc2U7IH1cclxuICAgIGlmICghaGFuZGxlcilcclxuICAgICAgICByZXR1cm47XHJcbiAgICB2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHsgcmV0dXJuIGhhbmRsZXIoZXZlbnQsIGV4dHJhY3RFdmVudEluZm8oZXZlbnQpKTsgfTtcclxuICAgIHJldHVybiBzaG91bGRGaWx0ZXJQcmltYXJ5UG9pbnRlclxyXG4gICAgICAgID8gZmlsdGVyUHJpbWFyeVBvaW50ZXIobGlzdGVuZXIpXHJcbiAgICAgICAgOiBsaXN0ZW5lcjtcclxufTtcblxudmFyIGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XHJcbi8vIFdlIGNoZWNrIGZvciBldmVudCBzdXBwb3J0IHZpYSBmdW5jdGlvbnMgaW4gY2FzZSB0aGV5J3ZlIGJlZW4gbW9ja2VkIGJ5IGEgdGVzdGluZyBzdWl0ZS5cclxudmFyIHN1cHBvcnRzUG9pbnRlckV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiBpc0Jyb3dzZXIgJiYgd2luZG93Lm9ucG9pbnRlcmRvd24gPT09IG51bGw7XHJcbn07XHJcbnZhciBzdXBwb3J0c1RvdWNoRXZlbnRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIGlzQnJvd3NlciAmJiB3aW5kb3cub250b3VjaHN0YXJ0ID09PSBudWxsO1xyXG59O1xyXG52YXIgc3VwcG9ydHNNb3VzZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiBpc0Jyb3dzZXIgJiYgd2luZG93Lm9ubW91c2Vkb3duID09PSBudWxsO1xyXG59O1xuXG52YXIgbW91c2VFdmVudE5hbWVzID0ge1xyXG4gICAgcG9pbnRlcmRvd246IFwibW91c2Vkb3duXCIsXHJcbiAgICBwb2ludGVybW92ZTogXCJtb3VzZW1vdmVcIixcclxuICAgIHBvaW50ZXJ1cDogXCJtb3VzZXVwXCIsXHJcbiAgICBwb2ludGVyY2FuY2VsOiBcIm1vdXNlY2FuY2VsXCIsXHJcbiAgICBwb2ludGVyb3ZlcjogXCJtb3VzZW92ZXJcIixcclxuICAgIHBvaW50ZXJvdXQ6IFwibW91c2VvdXRcIixcclxuICAgIHBvaW50ZXJlbnRlcjogXCJtb3VzZWVudGVyXCIsXHJcbiAgICBwb2ludGVybGVhdmU6IFwibW91c2VsZWF2ZVwiLFxyXG59O1xyXG52YXIgdG91Y2hFdmVudE5hbWVzID0ge1xyXG4gICAgcG9pbnRlcmRvd246IFwidG91Y2hzdGFydFwiLFxyXG4gICAgcG9pbnRlcm1vdmU6IFwidG91Y2htb3ZlXCIsXHJcbiAgICBwb2ludGVydXA6IFwidG91Y2hlbmRcIixcclxuICAgIHBvaW50ZXJjYW5jZWw6IFwidG91Y2hjYW5jZWxcIixcclxufTtcclxuZnVuY3Rpb24gZ2V0UG9pbnRlckV2ZW50TmFtZShuYW1lKSB7XHJcbiAgICBpZiAoc3VwcG9ydHNQb2ludGVyRXZlbnRzKCkpIHtcclxuICAgICAgICByZXR1cm4gbmFtZTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHN1cHBvcnRzVG91Y2hFdmVudHMoKSkge1xyXG4gICAgICAgIHJldHVybiB0b3VjaEV2ZW50TmFtZXNbbmFtZV07XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChzdXBwb3J0c01vdXNlRXZlbnRzKCkpIHtcclxuICAgICAgICByZXR1cm4gbW91c2VFdmVudE5hbWVzW25hbWVdO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5hbWU7XHJcbn1cclxuZnVuY3Rpb24gYWRkUG9pbnRlckV2ZW50KHRhcmdldCwgZXZlbnROYW1lLCBoYW5kbGVyLCBvcHRpb25zKSB7XHJcbiAgICByZXR1cm4gYWRkRG9tRXZlbnQodGFyZ2V0LCBnZXRQb2ludGVyRXZlbnROYW1lKGV2ZW50TmFtZSksIHdyYXBIYW5kbGVyKGhhbmRsZXIsIGV2ZW50TmFtZSA9PT0gXCJwb2ludGVyZG93blwiKSwgb3B0aW9ucyk7XHJcbn1cclxuZnVuY3Rpb24gdXNlUG9pbnRlckV2ZW50KHJlZiwgZXZlbnROYW1lLCBoYW5kbGVyLCBvcHRpb25zKSB7XHJcbiAgICByZXR1cm4gdXNlRG9tRXZlbnQocmVmLCBnZXRQb2ludGVyRXZlbnROYW1lKGV2ZW50TmFtZSksIHdyYXBIYW5kbGVyKGhhbmRsZXIsIGV2ZW50TmFtZSA9PT0gXCJwb2ludGVyZG93blwiKSwgb3B0aW9ucyk7XHJcbn1cblxuLyoqIEBwdWJsaWMgKi9cclxudmFyIFBvaW50O1xyXG4oZnVuY3Rpb24gKFBvaW50KSB7XHJcbiAgICAvKiogQGJldGEgKi9cclxuICAgIFBvaW50LnN1YnRyYWN0ID0gZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgICAgICByZXR1cm4geyB4OiBhLnggLSBiLngsIHk6IGEueSAtIGIueSB9O1xyXG4gICAgfTtcclxuICAgIC8qKiBAYmV0YSAqL1xyXG4gICAgUG9pbnQucmVsYXRpdmVUbyA9IGZ1bmN0aW9uIChpZE9yRWxlbSkge1xyXG4gICAgICAgIHZhciBlbGVtO1xyXG4gICAgICAgIHZhciBnZXRFbGVtID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBDYWNoaW5nIGVsZW1lbnQgaGVyZSBjb3VsZCBiZSBsZWFreSBiZWNhdXNlIG9mIFJlYWN0IGxpZmVjeWNsZVxyXG4gICAgICAgICAgICBpZiAoZWxlbSAhPT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW07XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaWRPckVsZW0gPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICAgICAgICAgIGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZE9yRWxlbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBlbGVtID0gaWRPckVsZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGVsZW07XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgICAgIHZhciB4ID0gX2EueCwgeSA9IF9hLnk7XHJcbiAgICAgICAgICAgIHZhciBsb2NhbEVsZW0gPSBnZXRFbGVtKCk7XHJcbiAgICAgICAgICAgIGlmICghbG9jYWxFbGVtKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgdmFyIHJlY3QgPSBsb2NhbEVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB4OiB4IC0gcmVjdC5sZWZ0IC0gd2luZG93LnNjcm9sbFgsXHJcbiAgICAgICAgICAgICAgICB5OiB5IC0gcmVjdC50b3AgLSB3aW5kb3cuc2Nyb2xsWSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxufSkoUG9pbnQgfHwgKFBvaW50ID0ge30pKTtcblxudmFyIGlzVmlld3BvcnRTY3JvbGxCbG9ja2VkID0gZmFsc2U7XHJcbnZhciBpc0Jyb3dzZXIkMSA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XHJcbmlmIChpc0Jyb3dzZXIkMSkge1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBpZiAoaXNWaWV3cG9ydFNjcm9sbEJsb2NrZWQpIHtcclxuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9XHJcbiAgICB9LCB7IHBhc3NpdmU6IGZhbHNlIH0pO1xyXG59XHJcbnZhciBibG9ja1ZpZXdwb3J0U2Nyb2xsID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKGlzVmlld3BvcnRTY3JvbGxCbG9ja2VkID0gdHJ1ZSk7IH07XHJcbnZhciB1bmJsb2NrVmlld3BvcnRTY3JvbGwgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAoaXNWaWV3cG9ydFNjcm9sbEJsb2NrZWQgPSBmYWxzZSk7IH07XG5cbi8qKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbnZhciBQYW5TZXNzaW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gUGFuU2Vzc2lvbihldmVudCwgaGFuZGxlcnMsIF9hKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB2YXIgdHJhbnNmb3JtUGFnZVBvaW50ID0gKF9hID09PSB2b2lkIDAgPyB7fSA6IF9hKS50cmFuc2Zvcm1QYWdlUG9pbnQ7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQGludGVybmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5zdGFydEV2ZW50ID0gbnVsbDtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAaW50ZXJuYWxcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmxhc3RNb3ZlRXZlbnQgPSBudWxsO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMubGFzdE1vdmVFdmVudEluZm8gPSBudWxsO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuaGFuZGxlcnMgPSB7fTtcclxuICAgICAgICB0aGlzLnVwZGF0ZVBvaW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoIShfdGhpcy5sYXN0TW92ZUV2ZW50ICYmIF90aGlzLmxhc3RNb3ZlRXZlbnRJbmZvKSlcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgdmFyIGluZm8gPSBnZXRQYW5JbmZvKF90aGlzLmxhc3RNb3ZlRXZlbnRJbmZvLCBfdGhpcy5oaXN0b3J5KTtcclxuICAgICAgICAgICAgdmFyIGlzUGFuU3RhcnRlZCA9IF90aGlzLnN0YXJ0RXZlbnQgIT09IG51bGw7XHJcbiAgICAgICAgICAgIC8vIE9ubHkgc3RhcnQgcGFubmluZyBpZiB0aGUgb2Zmc2V0IGlzIGxhcmdlciB0aGFuIDMgcGl4ZWxzLiBJZiB3ZSBtYWtlIGl0XHJcbiAgICAgICAgICAgIC8vIGFueSBsYXJnZXIgdGhhbiB0aGlzIHdlJ2xsIHdhbnQgdG8gcmVzZXQgdGhlIHBvaW50ZXIgaGlzdG9yeVxyXG4gICAgICAgICAgICAvLyBvbiB0aGUgZmlyc3QgdXBkYXRlIHRvIGF2b2lkIHZpc3VhbCBzbmFwcGluZyB0byB0aGUgY3Vyc29lLlxyXG4gICAgICAgICAgICB2YXIgaXNEaXN0YW5jZVBhc3RUaHJlc2hvbGQgPSBkaXN0YW5jZShpbmZvLm9mZnNldCwgeyB4OiAwLCB5OiAwIH0pID49IDM7XHJcbiAgICAgICAgICAgIGlmICghaXNQYW5TdGFydGVkICYmICFpc0Rpc3RhbmNlUGFzdFRocmVzaG9sZClcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgdmFyIHBvaW50ID0gaW5mby5wb2ludDtcclxuICAgICAgICAgICAgdmFyIHRpbWVzdGFtcCA9IGdldEZyYW1lRGF0YSgpLnRpbWVzdGFtcDtcclxuICAgICAgICAgICAgX3RoaXMuaGlzdG9yeS5wdXNoKF9fYXNzaWduKF9fYXNzaWduKHt9LCBwb2ludCksIHsgdGltZXN0YW1wOiB0aW1lc3RhbXAgfSkpO1xyXG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5oYW5kbGVycywgb25TdGFydCA9IF9hLm9uU3RhcnQsIG9uTW92ZSA9IF9hLm9uTW92ZTtcclxuICAgICAgICAgICAgaWYgKCFpc1BhblN0YXJ0ZWQpIHtcclxuICAgICAgICAgICAgICAgIG9uU3RhcnQgJiYgb25TdGFydChfdGhpcy5sYXN0TW92ZUV2ZW50LCBpbmZvKTtcclxuICAgICAgICAgICAgICAgIF90aGlzLnN0YXJ0RXZlbnQgPSBfdGhpcy5sYXN0TW92ZUV2ZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG9uTW92ZSAmJiBvbk1vdmUoX3RoaXMubGFzdE1vdmVFdmVudCwgaW5mbyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICAvLyBJZiB3ZSBoYXZlIG1vcmUgdGhhbiBvbmUgdG91Y2gsIGRvbid0IHN0YXJ0IGRldGVjdGluZyB0aGlzIGdlc3R1cmVcclxuICAgICAgICBpZiAoaXNUb3VjaEV2ZW50KGV2ZW50KSAmJiBldmVudC50b3VjaGVzLmxlbmd0aCA+IDEpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB0aGlzLmhhbmRsZXJzID0gaGFuZGxlcnM7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1QYWdlUG9pbnQgPSB0cmFuc2Zvcm1QYWdlUG9pbnQ7XHJcbiAgICAgICAgdmFyIGluZm8gPSBleHRyYWN0RXZlbnRJbmZvKGV2ZW50KTtcclxuICAgICAgICB2YXIgaW5pdGlhbEluZm8gPSB0cmFuc2Zvcm1Qb2ludChpbmZvLCB0aGlzLnRyYW5zZm9ybVBhZ2VQb2ludCk7XHJcbiAgICAgICAgdmFyIHBvaW50ID0gaW5pdGlhbEluZm8ucG9pbnQ7XHJcbiAgICAgICAgdmFyIHRpbWVzdGFtcCA9IGdldEZyYW1lRGF0YSgpLnRpbWVzdGFtcDtcclxuICAgICAgICB0aGlzLmhpc3RvcnkgPSBbX19hc3NpZ24oX19hc3NpZ24oe30sIHBvaW50KSwgeyB0aW1lc3RhbXA6IHRpbWVzdGFtcCB9KV07XHJcbiAgICAgICAgdmFyIG9uU2Vzc2lvblN0YXJ0ID0gaGFuZGxlcnMub25TZXNzaW9uU3RhcnQ7XHJcbiAgICAgICAgb25TZXNzaW9uU3RhcnQgJiZcclxuICAgICAgICAgICAgb25TZXNzaW9uU3RhcnQoZXZlbnQsIGdldFBhbkluZm8oaW5pdGlhbEluZm8sIHRoaXMuaGlzdG9yeSkpO1xyXG4gICAgICAgIHZhciByZW1vdmVPblBvaW50ZXJNb3ZlID0gYWRkUG9pbnRlckV2ZW50KHdpbmRvdywgXCJwb2ludGVybW92ZVwiLCBmdW5jdGlvbiAoZXZlbnQsIGluZm8pIHsgcmV0dXJuIF90aGlzLmhhbmRsZVBvaW50ZXJNb3ZlKGV2ZW50LCBpbmZvKTsgfSk7XHJcbiAgICAgICAgdmFyIHJlbW92ZU9uUG9pbnRlclVwID0gYWRkUG9pbnRlckV2ZW50KHdpbmRvdywgXCJwb2ludGVydXBcIiwgZnVuY3Rpb24gKGV2ZW50LCBpbmZvKSB7IHJldHVybiBfdGhpcy5oYW5kbGVQb2ludGVyVXAoZXZlbnQsIGluZm8pOyB9KTtcclxuICAgICAgICB0aGlzLnJlbW92ZUxpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmVtb3ZlT25Qb2ludGVyTW92ZSAmJiByZW1vdmVPblBvaW50ZXJNb3ZlKCk7XHJcbiAgICAgICAgICAgIHJlbW92ZU9uUG9pbnRlclVwICYmIHJlbW92ZU9uUG9pbnRlclVwKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIFBhblNlc3Npb24ucHJvdG90eXBlLmhhbmRsZVBvaW50ZXJNb3ZlID0gZnVuY3Rpb24gKGV2ZW50LCBpbmZvKSB7XHJcbiAgICAgICAgdGhpcy5sYXN0TW92ZUV2ZW50ID0gZXZlbnQ7XHJcbiAgICAgICAgdGhpcy5sYXN0TW92ZUV2ZW50SW5mbyA9IHRyYW5zZm9ybVBvaW50KGluZm8sIHRoaXMudHJhbnNmb3JtUGFnZVBvaW50KTtcclxuICAgICAgICAvLyBCZWNhdXNlIFNhZmFyaSBkb2Vzbid0IHRyaWdnZXIgbW91c2V1cCBldmVudHMgd2hlbiBpdCdzIGFib3ZlIGEgYDxzZWxlY3Q+YFxyXG4gICAgICAgIGlmIChpc01vdXNlRXZlbnQoZXZlbnQpICYmIGV2ZW50LmJ1dHRvbnMgPT09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVQb2ludGVyVXAoZXZlbnQsIGluZm8pO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFRocm90dGxlIG1vdXNlIG1vdmUgZXZlbnQgdG8gb25jZSBwZXIgZnJhbWVcclxuICAgICAgICBzeW5jLnVwZGF0ZSh0aGlzLnVwZGF0ZVBvaW50LCB0cnVlKTtcclxuICAgIH07XHJcbiAgICBQYW5TZXNzaW9uLnByb3RvdHlwZS5oYW5kbGVQb2ludGVyVXAgPSBmdW5jdGlvbiAoZXZlbnQsIGluZm8pIHtcclxuICAgICAgICB0aGlzLmVuZCgpO1xyXG4gICAgICAgIHZhciBvbkVuZCA9IHRoaXMuaGFuZGxlcnMub25FbmQ7XHJcbiAgICAgICAgaWYgKCFvbkVuZClcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHZhciBwYW5JbmZvID0gZ2V0UGFuSW5mbyh0cmFuc2Zvcm1Qb2ludChpbmZvLCB0aGlzLnRyYW5zZm9ybVBhZ2VQb2ludCksIHRoaXMuaGlzdG9yeSk7XHJcbiAgICAgICAgb25FbmQgJiYgb25FbmQoZXZlbnQsIHBhbkluZm8pO1xyXG4gICAgfTtcclxuICAgIFBhblNlc3Npb24ucHJvdG90eXBlLnVwZGF0ZUhhbmRsZXJzID0gZnVuY3Rpb24gKGhhbmRsZXJzKSB7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVycyA9IGhhbmRsZXJzO1xyXG4gICAgfTtcclxuICAgIFBhblNlc3Npb24ucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUxpc3RlbmVycyAmJiB0aGlzLnJlbW92ZUxpc3RlbmVycygpO1xyXG4gICAgICAgIGNhbmNlbFN5bmMudXBkYXRlKHRoaXMudXBkYXRlUG9pbnQpO1xyXG4gICAgICAgIHVuYmxvY2tWaWV3cG9ydFNjcm9sbCgpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBQYW5TZXNzaW9uO1xyXG59KCkpO1xyXG5mdW5jdGlvbiB0cmFuc2Zvcm1Qb2ludChpbmZvLCB0cmFuc2Zvcm1QYWdlUG9pbnQpIHtcclxuICAgIHJldHVybiB0cmFuc2Zvcm1QYWdlUG9pbnQgPyB7IHBvaW50OiB0cmFuc2Zvcm1QYWdlUG9pbnQoaW5mby5wb2ludCkgfSA6IGluZm87XHJcbn1cclxuZnVuY3Rpb24gZ2V0UGFuSW5mbyhfYSwgaGlzdG9yeSkge1xyXG4gICAgdmFyIHBvaW50ID0gX2EucG9pbnQ7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHBvaW50OiBwb2ludCxcclxuICAgICAgICBkZWx0YTogUG9pbnQuc3VidHJhY3QocG9pbnQsIGxhc3REZXZpY2VQb2ludChoaXN0b3J5KSksXHJcbiAgICAgICAgb2Zmc2V0OiBQb2ludC5zdWJ0cmFjdChwb2ludCwgc3RhcnREZXZpY2VQb2ludChoaXN0b3J5KSksXHJcbiAgICAgICAgdmVsb2NpdHk6IGdldFZlbG9jaXR5JDEoaGlzdG9yeSwgMC4xKSxcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gc3RhcnREZXZpY2VQb2ludChoaXN0b3J5KSB7XHJcbiAgICByZXR1cm4gaGlzdG9yeVswXTtcclxufVxyXG5mdW5jdGlvbiBsYXN0RGV2aWNlUG9pbnQoaGlzdG9yeSkge1xyXG4gICAgcmV0dXJuIGhpc3RvcnlbaGlzdG9yeS5sZW5ndGggLSAxXTtcclxufVxyXG5mdW5jdGlvbiBnZXRWZWxvY2l0eSQxKGhpc3RvcnksIHRpbWVEZWx0YSkge1xyXG4gICAgaWYgKGhpc3RvcnkubGVuZ3RoIDwgMikge1xyXG4gICAgICAgIHJldHVybiB7IHg6IDAsIHk6IDAgfTtcclxuICAgIH1cclxuICAgIHZhciBpID0gaGlzdG9yeS5sZW5ndGggLSAxO1xyXG4gICAgdmFyIHRpbWVzdGFtcGVkUG9pbnQgPSBudWxsO1xyXG4gICAgdmFyIGxhc3RQb2ludCA9IGxhc3REZXZpY2VQb2ludChoaXN0b3J5KTtcclxuICAgIHdoaWxlIChpID49IDApIHtcclxuICAgICAgICB0aW1lc3RhbXBlZFBvaW50ID0gaGlzdG9yeVtpXTtcclxuICAgICAgICBpZiAobGFzdFBvaW50LnRpbWVzdGFtcCAtIHRpbWVzdGFtcGVkUG9pbnQudGltZXN0YW1wID5cclxuICAgICAgICAgICAgc2Vjb25kc1RvTWlsbGlzZWNvbmRzKHRpbWVEZWx0YSkpIHtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGktLTtcclxuICAgIH1cclxuICAgIGlmICghdGltZXN0YW1wZWRQb2ludCkge1xyXG4gICAgICAgIHJldHVybiB7IHg6IDAsIHk6IDAgfTtcclxuICAgIH1cclxuICAgIHZhciB0aW1lID0gKGxhc3RQb2ludC50aW1lc3RhbXAgLSB0aW1lc3RhbXBlZFBvaW50LnRpbWVzdGFtcCkgLyAxMDAwO1xyXG4gICAgaWYgKHRpbWUgPT09IDApIHtcclxuICAgICAgICByZXR1cm4geyB4OiAwLCB5OiAwIH07XHJcbiAgICB9XHJcbiAgICB2YXIgY3VycmVudFZlbG9jaXR5ID0ge1xyXG4gICAgICAgIHg6IChsYXN0UG9pbnQueCAtIHRpbWVzdGFtcGVkUG9pbnQueCkgLyB0aW1lLFxyXG4gICAgICAgIHk6IChsYXN0UG9pbnQueSAtIHRpbWVzdGFtcGVkUG9pbnQueSkgLyB0aW1lLFxyXG4gICAgfTtcclxuICAgIGlmIChjdXJyZW50VmVsb2NpdHkueCA9PT0gSW5maW5pdHkpIHtcclxuICAgICAgICBjdXJyZW50VmVsb2NpdHkueCA9IDA7XHJcbiAgICB9XHJcbiAgICBpZiAoY3VycmVudFZlbG9jaXR5LnkgPT09IEluZmluaXR5KSB7XHJcbiAgICAgICAgY3VycmVudFZlbG9jaXR5LnkgPSAwO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGN1cnJlbnRWZWxvY2l0eTtcclxufVxuXG4vKipcclxuICpcclxuICogQHBhcmFtIGhhbmRsZXJzIC1cclxuICogQHBhcmFtIHJlZiAtXHJcbiAqXHJcbiAqIEBpbnRlcm5hbHJlbWFya3NcclxuICogQ3VycmVudGx5IHRoaXMgc2V0cyBuZXcgcGFuIGdlc3R1cmUgZnVuY3Rpb25zIGV2ZXJ5IHJlbmRlci4gVGhlIG1lbW8gcm91dGUgaGFzIGJlZW4gZXhwbG9yZWRcclxuICogaW4gdGhlIHBhc3QgYnV0IHVsdGltYXRlbHkgd2UncmUgc3RpbGwgY3JlYXRpbmcgbmV3IGZ1bmN0aW9ucyBldmVyeSByZW5kZXIuIEFuIG9wdGltaXNhdGlvblxyXG4gKiB0byBleHBsb3JlIGlzIGNyZWF0aW5nIHRoZSBwYW4gZ2VzdHVyZXMgYW5kIGxvYWRpbmcgdGhlbSBpbnRvIGEgYHJlZmAuXHJcbiAqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuZnVuY3Rpb24gdXNlUGFuR2VzdHVyZShfYSwgcmVmKSB7XHJcbiAgICB2YXIgb25QYW4gPSBfYS5vblBhbiwgb25QYW5TdGFydCA9IF9hLm9uUGFuU3RhcnQsIG9uUGFuRW5kID0gX2Eub25QYW5FbmQsIG9uUGFuU2Vzc2lvblN0YXJ0ID0gX2Eub25QYW5TZXNzaW9uU3RhcnQ7XHJcbiAgICB2YXIgaGFzUGFuRXZlbnRzID0gb25QYW4gfHwgb25QYW5TdGFydCB8fCBvblBhbkVuZCB8fCBvblBhblNlc3Npb25TdGFydDtcclxuICAgIHZhciBwYW5TZXNzaW9uID0gdXNlUmVmKG51bGwpO1xyXG4gICAgdmFyIHRyYW5zZm9ybVBhZ2VQb2ludCA9IHVzZUNvbnRleHQoTW90aW9uUGx1Z2luQ29udGV4dCkudHJhbnNmb3JtUGFnZVBvaW50O1xyXG4gICAgdmFyIGhhbmRsZXJzID0ge1xyXG4gICAgICAgIG9uU2Vzc2lvblN0YXJ0OiBvblBhblNlc3Npb25TdGFydCxcclxuICAgICAgICBvblN0YXJ0OiBvblBhblN0YXJ0LFxyXG4gICAgICAgIG9uTW92ZTogb25QYW4sXHJcbiAgICAgICAgb25FbmQ6IGZ1bmN0aW9uIChldmVudCwgaW5mbykge1xyXG4gICAgICAgICAgICBwYW5TZXNzaW9uLmN1cnJlbnQgPSBudWxsO1xyXG4gICAgICAgICAgICBvblBhbkVuZCAmJiBvblBhbkVuZChldmVudCwgaW5mbyk7XHJcbiAgICAgICAgfSxcclxuICAgIH07XHJcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmIChwYW5TZXNzaW9uLmN1cnJlbnQgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgcGFuU2Vzc2lvbi5jdXJyZW50LnVwZGF0ZUhhbmRsZXJzKGhhbmRsZXJzKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIGZ1bmN0aW9uIG9uUG9pbnRlckRvd24oZXZlbnQpIHtcclxuICAgICAgICBwYW5TZXNzaW9uLmN1cnJlbnQgPSBuZXcgUGFuU2Vzc2lvbihldmVudCwgaGFuZGxlcnMsIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtUGFnZVBvaW50OiB0cmFuc2Zvcm1QYWdlUG9pbnQsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICB1c2VQb2ludGVyRXZlbnQocmVmLCBcInBvaW50ZXJkb3duXCIsIGhhc1BhbkV2ZW50cyAmJiBvblBvaW50ZXJEb3duKTtcclxuICAgIHVzZVVubW91bnRFZmZlY3QoZnVuY3Rpb24gKCkgeyByZXR1cm4gcGFuU2Vzc2lvbi5jdXJyZW50ICYmIHBhblNlc3Npb24uY3VycmVudC5lbmQoKTsgfSk7XHJcbn1cblxuLyoqXHJcbiAqIFJlY3Vyc2l2ZWx5IHRyYXZlcnNlIHVwIHRoZSB0cmVlIHRvIGNoZWNrIHdoZXRoZXIgdGhlIHByb3ZpZGVkIGNoaWxkIG5vZGVcclxuICogaXMgdGhlIHBhcmVudCBvciBhIGRlc2NlbmRhbnQgb2YgaXQuXHJcbiAqXHJcbiAqIEBwYXJhbSBwYXJlbnQgLSBFbGVtZW50IHRvIGZpbmRcclxuICogQHBhcmFtIGNoaWxkIC0gRWxlbWVudCB0byB0ZXN0IGFnYWluc3QgcGFyZW50XHJcbiAqL1xyXG52YXIgaXNOb2RlT3JDaGlsZCA9IGZ1bmN0aW9uIChwYXJlbnQsIGNoaWxkKSB7XHJcbiAgICBpZiAoIWNoaWxkKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocGFyZW50ID09PSBjaGlsZCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGlzTm9kZU9yQ2hpbGQocGFyZW50LCBjaGlsZC5wYXJlbnRFbGVtZW50KTtcclxuICAgIH1cclxufTtcblxudmFyIG9yZGVyID0gW1wid2hpbGVIb3ZlclwiLCBcIndoaWxlVGFwXCIsIFwid2hpbGVEcmFnXCJdO1xyXG52YXIgZ2V0R2VzdHVyZVByaW9yaXR5ID0gZnVuY3Rpb24gKGdlc3R1cmUpIHtcclxuICAgIHJldHVybiBvcmRlci5pbmRleE9mKGdlc3R1cmUpICsgMTtcclxufTtcblxuZnVuY3Rpb24gY3JlYXRlTG9jayhuYW1lKSB7XHJcbiAgICB2YXIgbG9jayA9IG51bGw7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBvcGVuTG9jayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbG9jayA9IG51bGw7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAobG9jayA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICBsb2NrID0gbmFtZTtcclxuICAgICAgICAgICAgcmV0dXJuIG9wZW5Mb2NrO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9O1xyXG59XHJcbnZhciBnbG9iYWxIb3Jpem9udGFsTG9jayA9IGNyZWF0ZUxvY2soXCJkcmFnSG9yaXpvbnRhbFwiKTtcclxudmFyIGdsb2JhbFZlcnRpY2FsTG9jayA9IGNyZWF0ZUxvY2soXCJkcmFnVmVydGljYWxcIik7XHJcbmZ1bmN0aW9uIGdldEdsb2JhbExvY2soZHJhZykge1xyXG4gICAgdmFyIGxvY2sgPSBmYWxzZTtcclxuICAgIGlmIChkcmFnID09PSBcInlcIikge1xyXG4gICAgICAgIGxvY2sgPSBnbG9iYWxWZXJ0aWNhbExvY2soKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGRyYWcgPT09IFwieFwiKSB7XHJcbiAgICAgICAgbG9jayA9IGdsb2JhbEhvcml6b250YWxMb2NrKCk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB2YXIgb3Blbkhvcml6b250YWxfMSA9IGdsb2JhbEhvcml6b250YWxMb2NrKCk7XHJcbiAgICAgICAgdmFyIG9wZW5WZXJ0aWNhbF8xID0gZ2xvYmFsVmVydGljYWxMb2NrKCk7XHJcbiAgICAgICAgaWYgKG9wZW5Ib3Jpem9udGFsXzEgJiYgb3BlblZlcnRpY2FsXzEpIHtcclxuICAgICAgICAgICAgbG9jayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG9wZW5Ib3Jpem9udGFsXzEoKTtcclxuICAgICAgICAgICAgICAgIG9wZW5WZXJ0aWNhbF8xKCk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBSZWxlYXNlIHRoZSBsb2NrcyBiZWNhdXNlIHdlIGRvbid0IHVzZSB0aGVtXHJcbiAgICAgICAgICAgIGlmIChvcGVuSG9yaXpvbnRhbF8xKVxyXG4gICAgICAgICAgICAgICAgb3Blbkhvcml6b250YWxfMSgpO1xyXG4gICAgICAgICAgICBpZiAob3BlblZlcnRpY2FsXzEpXHJcbiAgICAgICAgICAgICAgICBvcGVuVmVydGljYWxfMSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBsb2NrO1xyXG59XG5cbnZhciB0YXBHZXN0dXJlUHJpb3JpdHkgPSBnZXRHZXN0dXJlUHJpb3JpdHkoXCJ3aGlsZVRhcFwiKTtcclxuLyoqXHJcbiAqIEBwYXJhbSBoYW5kbGVycyAtXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuZnVuY3Rpb24gdXNlVGFwR2VzdHVyZShfYSwgcmVmKSB7XHJcbiAgICB2YXIgb25UYXAgPSBfYS5vblRhcCwgb25UYXBTdGFydCA9IF9hLm9uVGFwU3RhcnQsIG9uVGFwQ2FuY2VsID0gX2Eub25UYXBDYW5jZWwsIHdoaWxlVGFwID0gX2Eud2hpbGVUYXAsIGNvbnRyb2xzID0gX2EuY29udHJvbHM7XHJcbiAgICB2YXIgaGFzVGFwTGlzdGVuZXJzID0gb25UYXAgfHwgb25UYXBTdGFydCB8fCBvblRhcENhbmNlbCB8fCB3aGlsZVRhcDtcclxuICAgIHZhciBpc1RhcHBpbmcgPSB1c2VSZWYoZmFsc2UpO1xyXG4gICAgdmFyIGNhbmNlbFBvaW50ZXJFdmVudExpc3RlbmVyID0gdXNlUmVmKG51bGwpO1xyXG4gICAgZnVuY3Rpb24gcmVtb3ZlUG9pbnRlclVwKCkge1xyXG4gICAgICAgIGNhbmNlbFBvaW50ZXJFdmVudExpc3RlbmVyLmN1cnJlbnQgJiZcclxuICAgICAgICAgICAgY2FuY2VsUG9pbnRlckV2ZW50TGlzdGVuZXIuY3VycmVudCgpO1xyXG4gICAgICAgIGNhbmNlbFBvaW50ZXJFdmVudExpc3RlbmVyLmN1cnJlbnQgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgaWYgKHdoaWxlVGFwICYmIGNvbnRyb2xzKSB7XHJcbiAgICAgICAgY29udHJvbHMuc2V0T3ZlcnJpZGUod2hpbGVUYXAsIHRhcEdlc3R1cmVQcmlvcml0eSk7XHJcbiAgICB9XHJcbiAgICAvLyBXZSBsb2FkIHRoaXMgZXZlbnQgaGFuZGxlciBpbnRvIGEgcmVmIHNvIHdlIGNhbiBsYXRlciByZWZlciB0b1xyXG4gICAgLy8gb25Qb2ludGVyVXAuY3VycmVudCB3aGljaCB3aWxsIGFsd2F5cyBoYXZlIHJlZmVyZW5jZSB0byB0aGUgbGF0ZXN0IHByb3BzXHJcbiAgICB2YXIgb25Qb2ludGVyVXAgPSB1c2VSZWYobnVsbCk7XHJcbiAgICBvblBvaW50ZXJVcC5jdXJyZW50ID0gZnVuY3Rpb24gKGV2ZW50LCBpbmZvKSB7XHJcbiAgICAgICAgdmFyIGVsZW1lbnQgPSByZWYuY3VycmVudDtcclxuICAgICAgICByZW1vdmVQb2ludGVyVXAoKTtcclxuICAgICAgICBpZiAoIWlzVGFwcGluZy5jdXJyZW50IHx8ICFlbGVtZW50KVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgaXNUYXBwaW5nLmN1cnJlbnQgPSBmYWxzZTtcclxuICAgICAgICBpZiAoY29udHJvbHMgJiYgd2hpbGVUYXApIHtcclxuICAgICAgICAgICAgY29udHJvbHMuY2xlYXJPdmVycmlkZSh0YXBHZXN0dXJlUHJpb3JpdHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBDaGVjayB0aGUgZ2VzdHVyZSBsb2NrIC0gaWYgd2UgZ2V0IGl0LCBpdCBtZWFucyBubyBkcmFnIGdlc3R1cmUgaXMgYWN0aXZlXHJcbiAgICAgICAgLy8gYW5kIHdlIGNhbiBzYWZlbHkgZmlyZSB0aGUgdGFwIGdlc3R1cmUuXHJcbiAgICAgICAgdmFyIG9wZW5HZXN0dXJlTG9jayA9IGdldEdsb2JhbExvY2sodHJ1ZSk7XHJcbiAgICAgICAgaWYgKCFvcGVuR2VzdHVyZUxvY2spXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBvcGVuR2VzdHVyZUxvY2soKTtcclxuICAgICAgICBpZiAoIWlzTm9kZU9yQ2hpbGQoZWxlbWVudCwgZXZlbnQudGFyZ2V0KSkge1xyXG4gICAgICAgICAgICBvblRhcENhbmNlbCAmJiBvblRhcENhbmNlbChldmVudCwgaW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBvblRhcCAmJiBvblRhcChldmVudCwgaW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGZ1bmN0aW9uIG9uUG9pbnRlckRvd24oZXZlbnQsIGluZm8pIHtcclxuICAgICAgICByZW1vdmVQb2ludGVyVXAoKTtcclxuICAgICAgICBjYW5jZWxQb2ludGVyRXZlbnRMaXN0ZW5lci5jdXJyZW50ID0gYWRkUG9pbnRlckV2ZW50KHdpbmRvdywgXCJwb2ludGVydXBcIiwgZnVuY3Rpb24gKGV2ZW50LCBpbmZvKSB7IHJldHVybiBvblBvaW50ZXJVcC5jdXJyZW50KGV2ZW50LCBpbmZvKTsgfSk7XHJcbiAgICAgICAgdmFyIGVsZW1lbnQgPSByZWYuY3VycmVudDtcclxuICAgICAgICBpZiAoIWVsZW1lbnQgfHwgaXNUYXBwaW5nLmN1cnJlbnQpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBpc1RhcHBpbmcuY3VycmVudCA9IHRydWU7XHJcbiAgICAgICAgb25UYXBTdGFydCAmJiBvblRhcFN0YXJ0KGV2ZW50LCBpbmZvKTtcclxuICAgICAgICBpZiAoY29udHJvbHMgJiYgd2hpbGVUYXApIHtcclxuICAgICAgICAgICAgY29udHJvbHMuc3RhcnRPdmVycmlkZSh0YXBHZXN0dXJlUHJpb3JpdHkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHVzZVBvaW50ZXJFdmVudChyZWYsIFwicG9pbnRlcmRvd25cIiwgaGFzVGFwTGlzdGVuZXJzID8gb25Qb2ludGVyRG93biA6IHVuZGVmaW5lZCk7XHJcbiAgICB1c2VVbm1vdW50RWZmZWN0KHJlbW92ZVBvaW50ZXJVcCk7XHJcbn1cblxudmFyIGhvdmVyUHJpb3JpdHkgPSBnZXRHZXN0dXJlUHJpb3JpdHkoXCJ3aGlsZUhvdmVyXCIpO1xyXG52YXIgZmlsdGVyVG91Y2ggPSBmdW5jdGlvbiAobGlzdGVuZXIpIHsgcmV0dXJuIGZ1bmN0aW9uIChldmVudCwgaW5mbykge1xyXG4gICAgaWYgKGlzTW91c2VFdmVudChldmVudCkpXHJcbiAgICAgICAgbGlzdGVuZXIoZXZlbnQsIGluZm8pO1xyXG59OyB9O1xyXG4vKipcclxuICpcclxuICogQHBhcmFtIHByb3BzXHJcbiAqIEBwYXJhbSByZWZcclxuICogQGludGVybmFsXHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VIb3Zlckdlc3R1cmUoX2EsIHJlZikge1xyXG4gICAgdmFyIHdoaWxlSG92ZXIgPSBfYS53aGlsZUhvdmVyLCBvbkhvdmVyU3RhcnQgPSBfYS5vbkhvdmVyU3RhcnQsIG9uSG92ZXJFbmQgPSBfYS5vbkhvdmVyRW5kLCBjb250cm9scyA9IF9hLmNvbnRyb2xzO1xyXG4gICAgaWYgKHdoaWxlSG92ZXIgJiYgY29udHJvbHMpIHtcclxuICAgICAgICBjb250cm9scy5zZXRPdmVycmlkZSh3aGlsZUhvdmVyLCBob3ZlclByaW9yaXR5KTtcclxuICAgIH1cclxuICAgIHVzZVBvaW50ZXJFdmVudChyZWYsIFwicG9pbnRlcmVudGVyXCIsIGZpbHRlclRvdWNoKGZ1bmN0aW9uIChldmVudCwgaW5mbykge1xyXG4gICAgICAgIGlmIChvbkhvdmVyU3RhcnQpXHJcbiAgICAgICAgICAgIG9uSG92ZXJTdGFydChldmVudCwgaW5mbyk7XHJcbiAgICAgICAgaWYgKHdoaWxlSG92ZXIgJiYgY29udHJvbHMpIHtcclxuICAgICAgICAgICAgY29udHJvbHMuc3RhcnRPdmVycmlkZShob3ZlclByaW9yaXR5KTtcclxuICAgICAgICB9XHJcbiAgICB9KSk7XHJcbiAgICB1c2VQb2ludGVyRXZlbnQocmVmLCBcInBvaW50ZXJsZWF2ZVwiLCBmaWx0ZXJUb3VjaChmdW5jdGlvbiAoZXZlbnQsIGluZm8pIHtcclxuICAgICAgICBpZiAob25Ib3ZlckVuZClcclxuICAgICAgICAgICAgb25Ib3ZlckVuZChldmVudCwgaW5mbyk7XHJcbiAgICAgICAgaWYgKHdoaWxlSG92ZXIgJiYgY29udHJvbHMpIHtcclxuICAgICAgICAgICAgY29udHJvbHMuY2xlYXJPdmVycmlkZShob3ZlclByaW9yaXR5KTtcclxuICAgICAgICB9XHJcbiAgICB9KSk7XHJcbn1cblxuLyoqXHJcbiAqIEFkZCBwYW4gYW5kIHRhcCBnZXN0dXJlIHJlY29nbml0aW9uIHRvIGFuIGVsZW1lbnQuXHJcbiAqXHJcbiAqIEBwYXJhbSBwcm9wcyAtIEdlc3R1cmUgZXZlbnQgaGFuZGxlcnNcclxuICogQHBhcmFtIHJlZiAtIFJlYWN0IGByZWZgIGNvbnRhaW5pbmcgYSBET00gYEVsZW1lbnRgXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmZ1bmN0aW9uIHVzZUdlc3R1cmVzKHByb3BzLCByZWYpIHtcclxuICAgIHVzZVBhbkdlc3R1cmUocHJvcHMsIHJlZik7XHJcbiAgICB1c2VUYXBHZXN0dXJlKHByb3BzLCByZWYpO1xyXG4gICAgdXNlSG92ZXJHZXN0dXJlKHByb3BzLCByZWYpO1xyXG59XG5cbnZhciBtYWtlUmVuZGVybGVzc0NvbXBvbmVudCA9IGZ1bmN0aW9uIChob29rKSB7IHJldHVybiBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgIGhvb2socHJvcHMpO1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbn07IH07XG5cbnZhciBnZXN0dXJlUHJvcHMgPSBbXHJcbiAgICBcIm9uUGFuXCIsXHJcbiAgICBcIm9uUGFuU3RhcnRcIixcclxuICAgIFwib25QYW5FbmRcIixcclxuICAgIFwib25QYW5TZXNzaW9uU3RhcnRcIixcclxuICAgIFwib25UYXBcIixcclxuICAgIFwib25UYXBTdGFydFwiLFxyXG4gICAgXCJvblRhcENhbmNlbFwiLFxyXG4gICAgXCJ3aGlsZVRhcFwiLFxyXG4gICAgXCJ3aGlsZUhvdmVyXCIsXHJcbiAgICBcIm9uSG92ZXJTdGFydFwiLFxyXG4gICAgXCJvbkhvdmVyRW5kXCIsXHJcbl07XHJcbnZhciBHZXN0dXJlcyA9IHtcclxuICAgIGtleTogXCJnZXN0dXJlc1wiLFxyXG4gICAgc2hvdWxkUmVuZGVyOiBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgICAgICByZXR1cm4gZ2VzdHVyZVByb3BzLnNvbWUoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gcHJvcHMuaGFzT3duUHJvcGVydHkoa2V5KTsgfSk7XHJcbiAgICB9LFxyXG4gICAgQ29tcG9uZW50OiBtYWtlUmVuZGVybGVzc0NvbXBvbmVudChmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICB2YXIgaW5uZXJSZWYgPSBfYS5pbm5lclJlZiwgcHJvcHMgPSBfX3Jlc3QoX2EsIFtcImlubmVyUmVmXCJdKTtcclxuICAgICAgICB1c2VHZXN0dXJlcyhwcm9wcywgaW5uZXJSZWYpO1xyXG4gICAgfSksXHJcbn07XG5cbnZhciBpc1JlZk9iamVjdCA9IGZ1bmN0aW9uIChyZWYpIHtcclxuICAgIHJldHVybiB0eXBlb2YgcmVmID09PSBcIm9iamVjdFwiICYmIHJlZi5oYXNPd25Qcm9wZXJ0eShcImN1cnJlbnRcIik7XHJcbn07XG5cbnZhciBub29wID0gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHY7IH07XHJcbnZhciBDb21wb25lbnREcmFnQ29udHJvbHMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBDb21wb25lbnREcmFnQ29udHJvbHMoX2EpIHtcclxuICAgICAgICB2YXIgcmVmID0gX2EucmVmLCB2YWx1ZXMgPSBfYS52YWx1ZXMsIGNvbnRyb2xzID0gX2EuY29udHJvbHM7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVHJhY2sgd2hldGhlciB3ZSdyZSBjdXJyZW50bHkgZHJhZ2dpbmcuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaW50ZXJuYWxcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmlzRHJhZ2dpbmcgPSBmYWxzZTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgY3VycmVudCBkaXJlY3Rpb24gb2YgZHJhZywgb3IgYG51bGxgIGlmIGJvdGguXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaW50ZXJuYWxcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmN1cnJlbnREaXJlY3Rpb24gPSBudWxsO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBwZXJtaXR0ZWQgdC9yL2IvbCBib3VuZGFyaWVzIG9mIHRyYXZlbCwgaW4gcGl4ZWxzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGludGVybmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5jb25zdHJhaW50cyA9IGZhbHNlO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgcmVmZXJlbmNlIHRvIHRoZSBob3N0IGNvbXBvbmVudCdzIGxhdGVzdCBwcm9wcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMucHJvcHMgPSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybVBhZ2VQb2ludDogbm9vcCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFJlZmVyZW5jZXMgdG8gdGhlIE1vdGlvblZhbHVlcyB1c2VkIGZvciB0cmFja2luZyB0aGUgY3VycmVudCBkcmFnZ2VkIHBvaW50LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGludGVybmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5wb2ludCA9IHt9O1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBvcmlnaW4gcG9pbnQgZm9yIHRoZSBjdXJyZW50IGRyYWcgZ2VzdHVyZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMub3JpZ2luID0ge1xyXG4gICAgICAgICAgICB4OiBtb3Rpb25WYWx1ZSgwKSxcclxuICAgICAgICAgICAgeTogbW90aW9uVmFsdWUoMCksXHJcbiAgICAgICAgfTtcclxuICAgICAgICAvLyBUaGlzIGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgZHJhZyBnZXN0dXJlIGxvY2ssIGVuc3VyaW5nIG9ubHkgb25lIGNvbXBvbmVudFxyXG4gICAgICAgIC8vIGNhbiBcImNhcHR1cmVcIiB0aGUgZHJhZyBvZiBvbmUgb3IgYm90aCBheGVzLlxyXG4gICAgICAgIC8vIFRPRE86IExvb2sgaW50byBtb3ZpbmcgdGhpcyBpbnRvIHBhbnNlc3Npb24/XHJcbiAgICAgICAgdGhpcy5vcGVuR2xvYmFsTG9jayA9IG51bGw7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQGludGVybmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5wYW5TZXNzaW9uID0gbnVsbDtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIHJlZmVyZW5jZSB0byB0aGUgcHJldmlvdXMgY29uc3RyYWludHMgYm91bmRpbmcgYm94XHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaW50ZXJuYWxcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnByZXZDb25zdHJhaW50c0JveCA9IHtcclxuICAgICAgICAgICAgd2lkdGg6IDAsXHJcbiAgICAgICAgICAgIGhlaWdodDogMCxcclxuICAgICAgICAgICAgeDogMCxcclxuICAgICAgICAgICAgeTogMCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMucmVmID0gcmVmO1xyXG4gICAgICAgIHRoaXMudmFsdWVzID0gdmFsdWVzO1xyXG4gICAgICAgIHRoaXMuY29udHJvbHMgPSBjb250cm9scztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU3RhcnQgZHJhZ2dpbmcgdGhlIGhvc3QgY29tcG9uZW50LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBldmVudCAtIFRoZSBvcmlnaW5hdGluZyBwb2ludGVyIGV2ZW50LlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLVxyXG4gICAgICpcclxuICAgICAqIEBwdWJsaWNcclxuICAgICAqL1xyXG4gICAgQ29tcG9uZW50RHJhZ0NvbnRyb2xzLnByb3RvdHlwZS5zdGFydCA9IGZ1bmN0aW9uIChvcmlnaW5FdmVudCwgX2EpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBfYiA9IChfYSA9PT0gdm9pZCAwID8ge30gOiBfYSkuc25hcFRvQ3Vyc29yLCBzbmFwVG9DdXJzb3IgPSBfYiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYjtcclxuICAgICAgICBzbmFwVG9DdXJzb3IgJiYgdGhpcy5zbmFwVG9DdXJzb3Iob3JpZ2luRXZlbnQpO1xyXG4gICAgICAgIHZhciBvblNlc3Npb25TdGFydCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gSW5pdGlhdGUgdmlld3BvcnQgc2Nyb2xsIGJsb2NraW5nIG9uIHRvdWNoIHN0YXJ0LiBUaGlzIGlzIGEgdmVyeSBhZ2dyZXNzaXZlIGFwcHJvYWNoXHJcbiAgICAgICAgICAgIC8vIHdoaWNoIGhhcyBjb21lIG91dCBvZiB0aGUgZGlmZmljdWx0eSBpbiB1cyBiZWluZyBhYmxlIHRvIGRvIHRoaXMgb25jZSBhIHNjcm9sbCBnZXN0dXJlXHJcbiAgICAgICAgICAgIC8vIGhhcyBpbml0aWF0ZWQgaW4gbW9iaWxlIGJyb3dzZXJzLiBUaGlzIG1lYW5zIGlmIHRoZXJlJ3MgYSBob3Jpem9udGFsbHktc2Nyb2xsaW5nIGNhcm91c2VsXHJcbiAgICAgICAgICAgIC8vIG9uIGEgcGFnZSB3ZSBjYW4ndCBsZXQgYSB1c2VyIHNjcm9sbCB0aGUgcGFnZSBpdHNlbGYgZnJvbSBpdC4gSWRlYWxseSB3aGF0IHdlJ2QgZG8gaXNcclxuICAgICAgICAgICAgLy8gdHJpZ2dlciB0aGlzIG9uY2Ugd2UndmUgZ290IGEgc2Nyb2xsIGRpcmVjdGlvbiBkZXRlcm1pbmVkLiBUaGlzIGFwcHJvYWNoIHNvcnQtb2Ygd29ya2VkXHJcbiAgICAgICAgICAgIC8vIGJ1dCBpZiB0aGUgY29tcG9uZW50IHdhcyBkcmFnZ2VkIHRvbyBmYXIgaW4gYSBzaW5nbGUgZnJhbWUgcGFnZSBzY3JvbGxpbmcgd291bGQgaW5pdGlhdGUuXHJcbiAgICAgICAgICAgIGJsb2NrVmlld3BvcnRTY3JvbGwoKTtcclxuICAgICAgICAgICAgLy8gU3RvcCBhbnkgYW5pbWF0aW9ucyBvbiBib3RoIGF4aXMgdmFsdWVzIGltbWVkaWF0ZWx5LiBUaGlzIGFsbG93cyB0aGUgdXNlciB0byB0aHJvdyBhbmQgY2F0Y2hcclxuICAgICAgICAgICAgLy8gdGhlIGNvbXBvbmVudC5cclxuICAgICAgICAgICAgYm90aEF4aXMoZnVuY3Rpb24gKGF4aXMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBheGlzUG9pbnQgPSBfdGhpcy5wb2ludFtheGlzXTtcclxuICAgICAgICAgICAgICAgIGF4aXNQb2ludCAmJiBheGlzUG9pbnQuc3RvcCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBvblN0YXJ0ID0gZnVuY3Rpb24gKGV2ZW50LCBpbmZvKSB7XHJcbiAgICAgICAgICAgIC8vIElmIGNvbnN0cmFpbnRzIGFyZSBhbiBlbGVtZW50LCByZXNvbHZlIHRoZW0gYWdhaW4gaW4gY2FzZSB0aGV5J3ZlIHVwZGF0ZWQuXHJcbiAgICAgICAgICAgIGlmIChfdGhpcy5jb25zdHJhaW50c05lZWRSZXNvbHV0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgZHJhZ0NvbnN0cmFpbnRzID0gX2EuZHJhZ0NvbnN0cmFpbnRzLCB0cmFuc2Zvcm1QYWdlUG9pbnRfMSA9IF9hLnRyYW5zZm9ybVBhZ2VQb2ludDtcclxuICAgICAgICAgICAgICAgIF90aGlzLmNvbnN0cmFpbnRzID0gY2FsY3VsYXRlQ29uc3RyYWludHNGcm9tRG9tKGRyYWdDb25zdHJhaW50cywgX3RoaXMucmVmLCBfdGhpcy5wb2ludCwgdHJhbnNmb3JtUGFnZVBvaW50XzEpO1xyXG4gICAgICAgICAgICAgICAgX3RoaXMuYXBwbHlDb25zdHJhaW50c1RvUG9pbnQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBTZXQgcG9pbnQgb3JpZ2luIGFuZCBzdG9wIGFueSBleGlzdGluZyBhbmltYXRpb25zLlxyXG4gICAgICAgICAgICBib3RoQXhpcyhmdW5jdGlvbiAoYXhpcykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGF4aXNQb2ludCA9IF90aGlzLnBvaW50W2F4aXNdO1xyXG4gICAgICAgICAgICAgICAgaWYgKCFheGlzUG9pbnQpXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgX3RoaXMub3JpZ2luW2F4aXNdLnNldChheGlzUG9pbnQuZ2V0KCkpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gQXR0ZW1wdCB0byBncmFiIHRoZSBnbG9iYWwgZHJhZyBnZXN0dXJlIGxvY2sgLSBtYXliZSBtYWtlIHRoaXMgcGFydCBvZiBQYW5TZXNzaW9uXHJcbiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBkcmFnID0gX2IuZHJhZywgZHJhZ1Byb3BhZ2F0aW9uID0gX2IuZHJhZ1Byb3BhZ2F0aW9uO1xyXG4gICAgICAgICAgICBpZiAoZHJhZyAmJiAhZHJhZ1Byb3BhZ2F0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMub3Blbkdsb2JhbExvY2spXHJcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMub3Blbkdsb2JhbExvY2soKTtcclxuICAgICAgICAgICAgICAgIF90aGlzLm9wZW5HbG9iYWxMb2NrID0gZ2V0R2xvYmFsTG9jayhkcmFnKTtcclxuICAgICAgICAgICAgICAgIGlmICghX3RoaXMub3Blbkdsb2JhbExvY2spXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF90aGlzLmlzRHJhZ2dpbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICBfdGhpcy5jdXJyZW50RGlyZWN0aW9uID0gbnVsbDtcclxuICAgICAgICAgICAgdmFyIG9uRHJhZ1N0YXJ0ID0gX3RoaXMucHJvcHMub25EcmFnU3RhcnQ7XHJcbiAgICAgICAgICAgIG9uRHJhZ1N0YXJ0ICYmXHJcbiAgICAgICAgICAgICAgICBvbkRyYWdTdGFydChldmVudCwgY29udmVydFBhblRvRHJhZyhpbmZvLCBfdGhpcy5wb2ludCkpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIG9uTW92ZSA9IGZ1bmN0aW9uIChldmVudCwgaW5mbykge1xyXG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgZHJhZ1Byb3BhZ2F0aW9uID0gX2EuZHJhZ1Byb3BhZ2F0aW9uLCBkcmFnRGlyZWN0aW9uTG9jayA9IF9hLmRyYWdEaXJlY3Rpb25Mb2NrO1xyXG4gICAgICAgICAgICAvLyBJZiB3ZSBkaWRuJ3Qgc3VjY2Vzc2Z1bGx5IHJlY2VpdmUgdGhlIGdlc3R1cmUgbG9jaywgZWFybHkgcmV0dXJuLlxyXG4gICAgICAgICAgICBpZiAoIWRyYWdQcm9wYWdhdGlvbiAmJiAhX3RoaXMub3Blbkdsb2JhbExvY2spXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIHZhciBvZmZzZXQgPSBpbmZvLm9mZnNldDtcclxuICAgICAgICAgICAgLy8gQXR0ZW1wdCB0byBkZXRlY3QgZHJhZyBkaXJlY3Rpb24gaWYgZGlyZWN0aW9uTG9jayBpcyB0cnVlXHJcbiAgICAgICAgICAgIGlmIChkcmFnRGlyZWN0aW9uTG9jayAmJiBfdGhpcy5jdXJyZW50RGlyZWN0aW9uID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5jdXJyZW50RGlyZWN0aW9uID0gZ2V0Q3VycmVudERpcmVjdGlvbihvZmZzZXQpO1xyXG4gICAgICAgICAgICAgICAgLy8gSWYgd2UndmUgc3VjY2Vzc2Z1bGx5IHNldCBhIGRpcmVjdGlvbiwgbm90aWZ5IGxpc3RlbmVyXHJcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuY3VycmVudERpcmVjdGlvbiAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBvbkRpcmVjdGlvbkxvY2sgPSBfdGhpcy5wcm9wcy5vbkRpcmVjdGlvbkxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgb25EaXJlY3Rpb25Mb2NrICYmIG9uRGlyZWN0aW9uTG9jayhfdGhpcy5jdXJyZW50RGlyZWN0aW9uKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBfdGhpcy51cGRhdGVQb2ludChcInhcIiwgb2Zmc2V0KTtcclxuICAgICAgICAgICAgX3RoaXMudXBkYXRlUG9pbnQoXCJ5XCIsIG9mZnNldCk7XHJcbiAgICAgICAgICAgIHZhciBvbkRyYWcgPSBfdGhpcy5wcm9wcy5vbkRyYWc7XHJcbiAgICAgICAgICAgIG9uRHJhZyAmJiBvbkRyYWcoZXZlbnQsIGNvbnZlcnRQYW5Ub0RyYWcoaW5mbywgX3RoaXMucG9pbnQpKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBvbkVuZCA9IGZ1bmN0aW9uIChldmVudCwgaW5mbykge1xyXG4gICAgICAgICAgICBfdGhpcy5zdG9wKGV2ZW50LCBpbmZvKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciB0cmFuc2Zvcm1QYWdlUG9pbnQgPSB0aGlzLnByb3BzLnRyYW5zZm9ybVBhZ2VQb2ludDtcclxuICAgICAgICB0aGlzLnBhblNlc3Npb24gPSBuZXcgUGFuU2Vzc2lvbihvcmlnaW5FdmVudCwge1xyXG4gICAgICAgICAgICBvblNlc3Npb25TdGFydDogb25TZXNzaW9uU3RhcnQsXHJcbiAgICAgICAgICAgIG9uU3RhcnQ6IG9uU3RhcnQsXHJcbiAgICAgICAgICAgIG9uTW92ZTogb25Nb3ZlLFxyXG4gICAgICAgICAgICBvbkVuZDogb25FbmQsXHJcbiAgICAgICAgfSwgeyB0cmFuc2Zvcm1QYWdlUG9pbnQ6IHRyYW5zZm9ybVBhZ2VQb2ludCB9KTtcclxuICAgIH07XHJcbiAgICBDb21wb25lbnREcmFnQ29udHJvbHMucHJvdG90eXBlLmNhbmNlbERyYWcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdW5ibG9ja1ZpZXdwb3J0U2Nyb2xsKCk7XHJcbiAgICAgICAgdGhpcy5pc0RyYWdnaW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5wYW5TZXNzaW9uICYmIHRoaXMucGFuU2Vzc2lvbi5lbmQoKTtcclxuICAgICAgICB0aGlzLnBhblNlc3Npb24gPSBudWxsO1xyXG4gICAgICAgIGlmICghdGhpcy5wcm9wcy5kcmFnUHJvcGFnYXRpb24gJiYgdGhpcy5vcGVuR2xvYmFsTG9jaykge1xyXG4gICAgICAgICAgICB0aGlzLm9wZW5HbG9iYWxMb2NrKCk7XHJcbiAgICAgICAgICAgIHRoaXMub3Blbkdsb2JhbExvY2sgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBDb21wb25lbnREcmFnQ29udHJvbHMucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbiAoZXZlbnQsIGluZm8pIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgKF9hID0gdGhpcy5wYW5TZXNzaW9uKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW5kKCk7XHJcbiAgICAgICAgdGhpcy5wYW5TZXNzaW9uID0gbnVsbDtcclxuICAgICAgICB2YXIgaXNEcmFnZ2luZyA9IHRoaXMuaXNEcmFnZ2luZztcclxuICAgICAgICB0aGlzLmNhbmNlbERyYWcoKTtcclxuICAgICAgICBpZiAoIWlzRHJhZ2dpbmcpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB2YXIgX2IgPSB0aGlzLnByb3BzLCBkcmFnTW9tZW50dW0gPSBfYi5kcmFnTW9tZW50dW0sIGRyYWdFbGFzdGljID0gX2IuZHJhZ0VsYXN0aWMsIG9uRHJhZ0VuZCA9IF9iLm9uRHJhZ0VuZDtcclxuICAgICAgICBpZiAoZHJhZ01vbWVudHVtIHx8IGRyYWdFbGFzdGljKSB7XHJcbiAgICAgICAgICAgIHZhciB2ZWxvY2l0eSA9IGluZm8udmVsb2NpdHk7XHJcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0ZURyYWdFbmQodmVsb2NpdHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5yZWNvcmRCb3hJbmZvKHRoaXMuY29uc3RyYWludHMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBvbkRyYWdFbmQgJiYgb25EcmFnRW5kKGV2ZW50LCBjb252ZXJ0UGFuVG9EcmFnKGluZm8sIHRoaXMucG9pbnQpKTtcclxuICAgIH07XHJcbiAgICBDb21wb25lbnREcmFnQ29udHJvbHMucHJvdG90eXBlLnJlY29yZEJveEluZm8gPSBmdW5jdGlvbiAoY29uc3RyYWludHMpIHtcclxuICAgICAgICBpZiAoY29uc3RyYWludHMpIHtcclxuICAgICAgICAgICAgdmFyIHJpZ2h0ID0gY29uc3RyYWludHMucmlnaHQsIGxlZnQgPSBjb25zdHJhaW50cy5sZWZ0LCBib3R0b20gPSBjb25zdHJhaW50cy5ib3R0b20sIHRvcF8xID0gY29uc3RyYWludHMudG9wO1xyXG4gICAgICAgICAgICB0aGlzLnByZXZDb25zdHJhaW50c0JveC53aWR0aCA9IChyaWdodCB8fCAwKSAtIChsZWZ0IHx8IDApO1xyXG4gICAgICAgICAgICB0aGlzLnByZXZDb25zdHJhaW50c0JveC5oZWlnaHQgPSAoYm90dG9tIHx8IDApIC0gKHRvcF8xIHx8IDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5wb2ludC54KVxyXG4gICAgICAgICAgICB0aGlzLnByZXZDb25zdHJhaW50c0JveC54ID0gdGhpcy5wb2ludC54LmdldCgpO1xyXG4gICAgICAgIGlmICh0aGlzLnBvaW50LnkpXHJcbiAgICAgICAgICAgIHRoaXMucHJldkNvbnN0cmFpbnRzQm94LnkgPSB0aGlzLnBvaW50LnkuZ2V0KCk7XHJcbiAgICB9O1xyXG4gICAgQ29tcG9uZW50RHJhZ0NvbnRyb2xzLnByb3RvdHlwZS5zbmFwVG9DdXJzb3IgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciB0cmFuc2Zvcm1QYWdlUG9pbnQgPSB0aGlzLnByb3BzLnRyYW5zZm9ybVBhZ2VQb2ludDtcclxuICAgICAgICB2YXIgcG9pbnQgPSBleHRyYWN0RXZlbnRJbmZvKGV2ZW50KS5wb2ludDtcclxuICAgICAgICB2YXIgYm91bmRpbmdCb3ggPSBnZXRCb3VuZGluZ0JveCh0aGlzLnJlZiwgdHJhbnNmb3JtUGFnZVBvaW50KTtcclxuICAgICAgICB2YXIgY2VudGVyID0ge1xyXG4gICAgICAgICAgICB4OiBib3VuZGluZ0JveC53aWR0aCAvIDIgKyBib3VuZGluZ0JveC5sZWZ0ICsgd2luZG93LnNjcm9sbFgsXHJcbiAgICAgICAgICAgIHk6IGJvdW5kaW5nQm94LmhlaWdodCAvIDIgKyBib3VuZGluZ0JveC50b3AgKyB3aW5kb3cuc2Nyb2xsWSxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBvZmZzZXQgPSB7XHJcbiAgICAgICAgICAgIHg6IHBvaW50LnggLSBjZW50ZXIueCxcclxuICAgICAgICAgICAgeTogcG9pbnQueSAtIGNlbnRlci55LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgYm90aEF4aXMoZnVuY3Rpb24gKGF4aXMpIHtcclxuICAgICAgICAgICAgdmFyIHBvaW50ID0gX3RoaXMucG9pbnRbYXhpc107XHJcbiAgICAgICAgICAgIGlmICghcG9pbnQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIF90aGlzLm9yaWdpbltheGlzXS5zZXQocG9pbnQuZ2V0KCkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMudXBkYXRlUG9pbnQoXCJ4XCIsIG9mZnNldCk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVQb2ludChcInlcIiwgb2Zmc2V0KTtcclxuICAgIH07XHJcbiAgICBDb21wb25lbnREcmFnQ29udHJvbHMucHJvdG90eXBlLnNldFBvaW50ID0gZnVuY3Rpb24gKGF4aXMsIHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5wb2ludFtheGlzXSA9IHZhbHVlO1xyXG4gICAgfTtcclxuICAgIENvbXBvbmVudERyYWdDb250cm9scy5wcm90b3R5cGUudXBkYXRlUG9pbnQgPSBmdW5jdGlvbiAoYXhpcywgb2Zmc2V0KSB7XHJcbiAgICAgICAgdmFyIF9hID0gdGhpcy5wcm9wcywgZHJhZyA9IF9hLmRyYWcsIGRyYWdFbGFzdGljID0gX2EuZHJhZ0VsYXN0aWM7XHJcbiAgICAgICAgdmFyIGF4aXNQb2ludCA9IHRoaXMucG9pbnRbYXhpc107XHJcbiAgICAgICAgLy8gSWYgd2UncmUgbm90IGRyYWdnaW5nIHRoaXMgYXhpcywgZG8gYW4gZWFybHkgcmV0dXJuLlxyXG4gICAgICAgIGlmICghc2hvdWxkRHJhZyhheGlzLCBkcmFnLCB0aGlzLmN1cnJlbnREaXJlY3Rpb24pIHx8ICFheGlzUG9pbnQpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB2YXIgY3VycmVudCA9IGFwcGx5Q29uc3RyYWludHMoYXhpcywgdGhpcy5vcmlnaW5bYXhpc10uZ2V0KCkgKyBvZmZzZXRbYXhpc10sIHRoaXMuY29uc3RyYWludHMsIGRyYWdFbGFzdGljKTtcclxuICAgICAgICBheGlzUG9pbnQuc2V0KGN1cnJlbnQpO1xyXG4gICAgfTtcclxuICAgIENvbXBvbmVudERyYWdDb250cm9scy5wcm90b3R5cGUudXBkYXRlUHJvcHMgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBfYiA9IF9hLmRyYWcsIGRyYWcgPSBfYiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYiwgX2MgPSBfYS5kcmFnRGlyZWN0aW9uTG9jaywgZHJhZ0RpcmVjdGlvbkxvY2sgPSBfYyA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYywgX2QgPSBfYS5kcmFnUHJvcGFnYXRpb24sIGRyYWdQcm9wYWdhdGlvbiA9IF9kID09PSB2b2lkIDAgPyBmYWxzZSA6IF9kLCBfZSA9IF9hLmRyYWdDb25zdHJhaW50cywgZHJhZ0NvbnN0cmFpbnRzID0gX2UgPT09IHZvaWQgMCA/IGZhbHNlIDogX2UsIF9mID0gX2EuZHJhZ0VsYXN0aWMsIGRyYWdFbGFzdGljID0gX2YgPT09IHZvaWQgMCA/IHRydWUgOiBfZiwgX2cgPSBfYS5kcmFnTW9tZW50dW0sIGRyYWdNb21lbnR1bSA9IF9nID09PSB2b2lkIDAgPyB0cnVlIDogX2csIHJlbWFpbmluZ1Byb3BzID0gX19yZXN0KF9hLCBbXCJkcmFnXCIsIFwiZHJhZ0RpcmVjdGlvbkxvY2tcIiwgXCJkcmFnUHJvcGFnYXRpb25cIiwgXCJkcmFnQ29uc3RyYWludHNcIiwgXCJkcmFnRWxhc3RpY1wiLCBcImRyYWdNb21lbnR1bVwiXSk7XHJcbiAgICAgICAgdGhpcy5wcm9wcyA9IF9fYXNzaWduKHsgZHJhZzogZHJhZyxcclxuICAgICAgICAgICAgZHJhZ0RpcmVjdGlvbkxvY2s6IGRyYWdEaXJlY3Rpb25Mb2NrLFxyXG4gICAgICAgICAgICBkcmFnUHJvcGFnYXRpb246IGRyYWdQcm9wYWdhdGlvbixcclxuICAgICAgICAgICAgZHJhZ0NvbnN0cmFpbnRzOiBkcmFnQ29uc3RyYWludHMsXHJcbiAgICAgICAgICAgIGRyYWdFbGFzdGljOiBkcmFnRWxhc3RpYyxcclxuICAgICAgICAgICAgZHJhZ01vbWVudHVtOiBkcmFnTW9tZW50dW0gfSwgcmVtYWluaW5nUHJvcHMpO1xyXG4gICAgICAgIHZhciBfZHJhZ1ZhbHVlWCA9IHJlbWFpbmluZ1Byb3BzLl9kcmFnVmFsdWVYLCBfZHJhZ1ZhbHVlWSA9IHJlbWFpbmluZ1Byb3BzLl9kcmFnVmFsdWVZLCBkcmFnT3JpZ2luWCA9IHJlbWFpbmluZ1Byb3BzLmRyYWdPcmlnaW5YLCBkcmFnT3JpZ2luWSA9IHJlbWFpbmluZ1Byb3BzLmRyYWdPcmlnaW5ZO1xyXG4gICAgICAgIGlmIChkcmFnT3JpZ2luWClcclxuICAgICAgICAgICAgdGhpcy5vcmlnaW4ueCA9IGRyYWdPcmlnaW5YO1xyXG4gICAgICAgIGlmIChkcmFnT3JpZ2luWSlcclxuICAgICAgICAgICAgdGhpcy5vcmlnaW4ueSA9IGRyYWdPcmlnaW5ZO1xyXG4gICAgICAgIC8vIEdldCB0aGUgYE1vdGlvblZhbHVlYCBmb3IgYm90aCBkcmFnZ2FibGUgYXhlcywgb3IgY3JlYXRlIHRoZW0gaWYgdGhleSBkb24ndCBhbHJlYWR5XHJcbiAgICAgICAgLy8gZXhpc3Qgb24gdGhpcyBjb21wb25lbnQuXHJcbiAgICAgICAgYm90aEF4aXMoZnVuY3Rpb24gKGF4aXMpIHtcclxuICAgICAgICAgICAgaWYgKCFzaG91bGREcmFnKGF4aXMsIGRyYWcsIF90aGlzLmN1cnJlbnREaXJlY3Rpb24pKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB2YXIgZGVmYXVsdFZhbHVlID0gYXhpcyA9PT0gXCJ4XCIgPyBfZHJhZ1ZhbHVlWCA6IF9kcmFnVmFsdWVZO1xyXG4gICAgICAgICAgICBfdGhpcy5zZXRQb2ludChheGlzLCBkZWZhdWx0VmFsdWUgfHwgX3RoaXMudmFsdWVzLmdldChheGlzLCAwKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gSWYgYGRyYWdDb25zdHJhaW50c2AgaXMgYSBSZWFjdCBgcmVmYCwgd2Ugc2hvdWxkIHJlc29sdmUgdGhlIGNvbnN0cmFpbnRzIG9uY2UgdGhlXHJcbiAgICAgICAgLy8gY29tcG9uZW50IGhhcyByZW5kZXJlZC5cclxuICAgICAgICB0aGlzLmNvbnN0cmFpbnRzTmVlZFJlc29sdXRpb24gPSBpc1JlZk9iamVjdChkcmFnQ29uc3RyYWludHMpO1xyXG4gICAgICAgIHRoaXMuY29uc3RyYWludHMgPSB0aGlzLmNvbnN0cmFpbnRzTmVlZFJlc29sdXRpb25cclxuICAgICAgICAgICAgPyB0aGlzLmNvbnN0cmFpbnRzIHx8IGZhbHNlXHJcbiAgICAgICAgICAgIDogZHJhZ0NvbnN0cmFpbnRzO1xyXG4gICAgfTtcclxuICAgIENvbXBvbmVudERyYWdDb250cm9scy5wcm90b3R5cGUuYXBwbHlDb25zdHJhaW50c1RvUG9pbnQgPSBmdW5jdGlvbiAoY29uc3RyYWludHMpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIGlmIChjb25zdHJhaW50cyA9PT0gdm9pZCAwKSB7IGNvbnN0cmFpbnRzID0gdGhpcy5jb25zdHJhaW50czsgfVxyXG4gICAgICAgIHJldHVybiBib3RoQXhpcyhmdW5jdGlvbiAoYXhpcykge1xyXG4gICAgICAgICAgICB2YXIgYXhpc1BvaW50ID0gX3RoaXMucG9pbnRbYXhpc107XHJcbiAgICAgICAgICAgIGF4aXNQb2ludCAmJlxyXG4gICAgICAgICAgICAgICAgIWF4aXNQb2ludC5pc0FuaW1hdGluZygpICYmXHJcbiAgICAgICAgICAgICAgICBhcHBseUNvbnN0cmFpbnRzKGF4aXMsIGF4aXNQb2ludCwgY29uc3RyYWludHMsIDApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIENvbXBvbmVudERyYWdDb250cm9scy5wcm90b3R5cGUuYW5pbWF0ZURyYWdFbmQgPSBmdW5jdGlvbiAodmVsb2NpdHkpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBfYSA9IHRoaXMucHJvcHMsIGRyYWcgPSBfYS5kcmFnLCBkcmFnTW9tZW50dW0gPSBfYS5kcmFnTW9tZW50dW0sIGRyYWdFbGFzdGljID0gX2EuZHJhZ0VsYXN0aWMsIGRyYWdUcmFuc2l0aW9uID0gX2EuZHJhZ1RyYW5zaXRpb24sIF9kcmFnVmFsdWVYID0gX2EuX2RyYWdWYWx1ZVgsIF9kcmFnVmFsdWVZID0gX2EuX2RyYWdWYWx1ZVksIF9kcmFnVHJhbnNpdGlvbkNvbnRyb2xzID0gX2EuX2RyYWdUcmFuc2l0aW9uQ29udHJvbHM7XHJcbiAgICAgICAgdmFyIG1vbWVudHVtQW5pbWF0aW9ucyA9IGJvdGhBeGlzKGZ1bmN0aW9uIChheGlzKSB7XHJcbiAgICAgICAgICAgIHZhciBfYTtcclxuICAgICAgICAgICAgaWYgKCFzaG91bGREcmFnKGF4aXMsIGRyYWcsIF90aGlzLmN1cnJlbnREaXJlY3Rpb24pKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHRyYW5zaXRpb24gPSBfdGhpcy5jb25zdHJhaW50c1xyXG4gICAgICAgICAgICAgICAgPyBnZXRDb25zdHJhaW50cyhheGlzLCBfdGhpcy5jb25zdHJhaW50cylcclxuICAgICAgICAgICAgICAgIDoge307XHJcbiAgICAgICAgICAgIC8qKlxyXG4gICAgICAgICAgICAgKiBPdmVyZGFtcCB0aGUgYm91bmRhcnkgc3ByaW5nIGlmIGBkcmFnRWxhc3RpY2AgaXMgZGlzYWJsZWQuIFRoZXJlJ3Mgc3RpbGwgYSBmcmFtZVxyXG4gICAgICAgICAgICAgKiBvZiBzcHJpbmcgYW5pbWF0aW9ucyBzbyB3ZSBzaG91bGQgbG9vayBpbnRvIGFkZGluZyBhIGRpc2FibGUgc3ByaW5nIG9wdGlvbiB0byBgaW5lcnRpYWAuXHJcbiAgICAgICAgICAgICAqIFdlIGNvdWxkIGRvIHNvbWV0aGluZyBoZXJlIHdoZXJlIHdlIGFmZmVjdCB0aGUgYGJvdW5jZVN0aWZmbmVzc2AgYW5kIGBib3VuY2VEYW1waW5nYFxyXG4gICAgICAgICAgICAgKiB1c2luZyB0aGUgdmFsdWUgb2YgYGRyYWdFbGFzdGljYC5cclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgIHZhciBib3VuY2VTdGlmZm5lc3MgPSBkcmFnRWxhc3RpYyA/IDIwMCA6IDEwMDAwMDA7XHJcbiAgICAgICAgICAgIHZhciBib3VuY2VEYW1waW5nID0gZHJhZ0VsYXN0aWMgPyA0MCA6IDEwMDAwMDAwO1xyXG4gICAgICAgICAgICB2YXIgYW5pbWF0aW9uQ29udHJvbHMgPSBfZHJhZ1RyYW5zaXRpb25Db250cm9scyB8fCBfdGhpcy5jb250cm9scztcclxuICAgICAgICAgICAgdmFyIGluZXJ0aWEgPSBfX2Fzc2lnbihfX2Fzc2lnbih7IHR5cGU6IFwiaW5lcnRpYVwiLCB2ZWxvY2l0eTogZHJhZ01vbWVudHVtID8gdmVsb2NpdHlbYXhpc10gOiAwLCBib3VuY2VTdGlmZm5lc3M6IGJvdW5jZVN0aWZmbmVzcyxcclxuICAgICAgICAgICAgICAgIGJvdW5jZURhbXBpbmc6IGJvdW5jZURhbXBpbmcsIHRpbWVDb25zdGFudDogNzUwLCByZXN0RGVsdGE6IDEgfSwgZHJhZ1RyYW5zaXRpb24pLCB0cmFuc2l0aW9uKTtcclxuICAgICAgICAgICAgdmFyIGV4dGVybmFsQXhpc01vdGlvblZhbHVlID0gYXhpcyA9PT0gXCJ4XCIgPyBfZHJhZ1ZhbHVlWCA6IF9kcmFnVmFsdWVZO1xyXG4gICAgICAgICAgICAvLyBJZiB3ZSdyZSBub3QgYW5pbWF0aW5nIG9uIGFuIGV4dGVybmFsbHktcHJvdmlkZWQgYE1vdGlvblZhbHVlYCB3ZSBjYW4gdXNlIHRoZVxyXG4gICAgICAgICAgICAvLyBjb21wb25lbnQncyBhbmltYXRpb24gY29udHJvbHMgd2hpY2ggd2lsbCBoYW5kbGUgaW50ZXJhY3Rpb25zIHdpdGggd2hpbGVIb3ZlciAoZXRjKSxcclxuICAgICAgICAgICAgLy8gb3RoZXJ3aXNlIHdlIGp1c3QgaGF2ZSB0byBhbmltYXRlIHRoZSBgTW90aW9uVmFsdWVgIGl0c2VsZi5cclxuICAgICAgICAgICAgcmV0dXJuIGV4dGVybmFsQXhpc01vdGlvblZhbHVlXHJcbiAgICAgICAgICAgICAgICA/IHN0YXJ0QW5pbWF0aW9uKGF4aXMsIGV4dGVybmFsQXhpc01vdGlvblZhbHVlLCAwLCBpbmVydGlhKVxyXG4gICAgICAgICAgICAgICAgOiBhbmltYXRpb25Db250cm9scy5zdGFydCgoX2EgPSB7fSxcclxuICAgICAgICAgICAgICAgICAgICBfYVtheGlzXSA9IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgX2EudHJhbnNpdGlvbiA9IGluZXJ0aWEsXHJcbiAgICAgICAgICAgICAgICAgICAgX2EpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBSdW4gYWxsIGFuaW1hdGlvbnMgYW5kIHRoZW4gcmVzb2x2ZSB0aGUgbmV3IGRyYWcgY29uc3RyYWludHMuXHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKG1vbWVudHVtQW5pbWF0aW9ucykudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIF90aGlzLnJlY29yZEJveEluZm8oX3RoaXMuY29uc3RyYWludHMpO1xyXG4gICAgICAgICAgICBfdGhpcy5zY2FsZVBvaW50KCk7XHJcbiAgICAgICAgICAgIHZhciBvbkRyYWdUcmFuc2l0aW9uRW5kID0gX3RoaXMucHJvcHMub25EcmFnVHJhbnNpdGlvbkVuZDtcclxuICAgICAgICAgICAgb25EcmFnVHJhbnNpdGlvbkVuZCAmJiBvbkRyYWdUcmFuc2l0aW9uRW5kKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgQ29tcG9uZW50RHJhZ0NvbnRyb2xzLnByb3RvdHlwZS5zY2FsZVBvaW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdmFyIF9hID0gdGhpcy5wcm9wcywgZHJhZ0NvbnN0cmFpbnRzID0gX2EuZHJhZ0NvbnN0cmFpbnRzLCB0cmFuc2Zvcm1QYWdlUG9pbnQgPSBfYS50cmFuc2Zvcm1QYWdlUG9pbnQ7XHJcbiAgICAgICAgaWYgKCFpc1JlZk9iamVjdChkcmFnQ29uc3RyYWludHMpKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgdmFyIGNvbnN0cmFpbnRzQm94ID0gZ2V0Qm91bmRpbmdCb3goZHJhZ0NvbnN0cmFpbnRzLCB0cmFuc2Zvcm1QYWdlUG9pbnQpO1xyXG4gICAgICAgIHZhciBkcmFnZ2FibGVCb3ggPSBnZXRCb3VuZGluZ0JveCh0aGlzLnJlZiwgdHJhbnNmb3JtUGFnZVBvaW50KTtcclxuICAgICAgICAvLyBTY2FsZSBhIHBvaW50IHJlbGF0aXZlIHRvIHRoZSB0cmFuc2Zvcm1hdGlvbiBvZiBhIGNvbnN0cmFpbnRzLXByb3ZpZGluZyBlbGVtZW50LlxyXG4gICAgICAgIHZhciBzY2FsZUF4aXNQb2ludCA9IGZ1bmN0aW9uIChheGlzLCBkaW1lbnNpb24pIHtcclxuICAgICAgICAgICAgdmFyIHBvaW50VG9TY2FsZSA9IF90aGlzLnBvaW50W2F4aXNdO1xyXG4gICAgICAgICAgICBpZiAoIXBvaW50VG9TY2FsZSlcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgLy8gU3RvcCBhbnkgY3VycmVudCBhbmltYXRpb25zIGFzIHRoZXkgYnVnIG91dCBpZiB5b3UgcmVzaXplIGR1cmluZyBvbmVcclxuICAgICAgICAgICAgaWYgKHBvaW50VG9TY2FsZS5pc0FuaW1hdGluZygpKSB7XHJcbiAgICAgICAgICAgICAgICBwb2ludFRvU2NhbGUuc3RvcCgpO1xyXG4gICAgICAgICAgICAgICAgX3RoaXMucmVjb3JkQm94SW5mbygpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIElmIHRoZSBwcmV2aW91cyBkaW1lbnNpb24gd2FzIGAwYCAoZGVmYXVsdCksIHNldCBgc2NhbGVgIHRvIGAxYCB0byBwcmV2ZW50XHJcbiAgICAgICAgICAgIC8vIGRpdmlkZSBieSB6ZXJvIGVycm9ycy5cclxuICAgICAgICAgICAgdmFyIHNjYWxlID0gX3RoaXMucHJldkNvbnN0cmFpbnRzQm94W2RpbWVuc2lvbl1cclxuICAgICAgICAgICAgICAgID8gKGNvbnN0cmFpbnRzQm94W2RpbWVuc2lvbl0gLSBkcmFnZ2FibGVCb3hbZGltZW5zaW9uXSkgL1xyXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnByZXZDb25zdHJhaW50c0JveFtkaW1lbnNpb25dXHJcbiAgICAgICAgICAgICAgICA6IDE7XHJcbiAgICAgICAgICAgIHBvaW50VG9TY2FsZS5zZXQoX3RoaXMucHJldkNvbnN0cmFpbnRzQm94W2F4aXNdICogc2NhbGUpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgc2NhbGVBeGlzUG9pbnQoXCJ4XCIsIFwid2lkdGhcIik7XHJcbiAgICAgICAgc2NhbGVBeGlzUG9pbnQoXCJ5XCIsIFwiaGVpZ2h0XCIpO1xyXG4gICAgfTtcclxuICAgIENvbXBvbmVudERyYWdDb250cm9scy5wcm90b3R5cGUubW91bnQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdmFyIHN0b3BQb2ludGVyTGlzdGVuZXIgPSBhZGRQb2ludGVyRXZlbnQoZWxlbWVudCwgXCJwb2ludGVyZG93blwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRyYWcgPSBfYS5kcmFnLCBfYiA9IF9hLmRyYWdMaXN0ZW5lciwgZHJhZ0xpc3RlbmVyID0gX2IgPT09IHZvaWQgMCA/IHRydWUgOiBfYjtcclxuICAgICAgICAgICAgZHJhZyAmJiBkcmFnTGlzdGVuZXIgJiYgX3RoaXMuc3RhcnQoZXZlbnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHZhciBzdG9wUmVzaXplTGlzdGVuZXIgPSBhZGREb21FdmVudCh3aW5kb3csIFwicmVzaXplXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnNjYWxlUG9pbnQoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAodGhpcy5jb25zdHJhaW50c05lZWRSZXNvbHV0aW9uKSB7XHJcbiAgICAgICAgICAgIHZhciBfYSA9IHRoaXMucHJvcHMsIGRyYWdDb25zdHJhaW50cyA9IF9hLmRyYWdDb25zdHJhaW50cywgdHJhbnNmb3JtUGFnZVBvaW50ID0gX2EudHJhbnNmb3JtUGFnZVBvaW50O1xyXG4gICAgICAgICAgICB2YXIgY29uc3RyYWludHMgPSBjYWxjdWxhdGVDb25zdHJhaW50c0Zyb21Eb20oZHJhZ0NvbnN0cmFpbnRzLCB0aGlzLnJlZiwgdGhpcy5wb2ludCwgdHJhbnNmb3JtUGFnZVBvaW50KTtcclxuICAgICAgICAgICAgdGhpcy5hcHBseUNvbnN0cmFpbnRzVG9Qb2ludChjb25zdHJhaW50cyk7XHJcbiAgICAgICAgICAgIHRoaXMucmVjb3JkQm94SW5mbyhjb25zdHJhaW50cyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKCF0aGlzLmlzRHJhZ2dpbmcgJiYgdGhpcy5jb25zdHJhaW50cykge1xyXG4gICAgICAgICAgICB0aGlzLmFwcGx5Q29uc3RyYWludHNUb1BvaW50KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHN0b3BQb2ludGVyTGlzdGVuZXIgJiYgc3RvcFBvaW50ZXJMaXN0ZW5lcigpO1xyXG4gICAgICAgICAgICBzdG9wUmVzaXplTGlzdGVuZXIgJiYgc3RvcFJlc2l6ZUxpc3RlbmVyKCk7XHJcbiAgICAgICAgICAgIF90aGlzLmNhbmNlbERyYWcoKTtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBDb21wb25lbnREcmFnQ29udHJvbHM7XHJcbn0oKSk7XHJcbi8vIENhbGwgYSBoYW5kbGVyIG9uY2UgZm9yIGVhY2ggYXhpc1xyXG5mdW5jdGlvbiBib3RoQXhpcyhoYW5kbGVyKSB7XHJcbiAgICByZXR1cm4gW2hhbmRsZXIoXCJ4XCIpLCBoYW5kbGVyKFwieVwiKV07XHJcbn1cclxuZnVuY3Rpb24gY29udmVydFBhblRvRHJhZyhpbmZvLCBwb2ludCkge1xyXG4gICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCBpbmZvKSwgeyBwb2ludDoge1xyXG4gICAgICAgICAgICB4OiBwb2ludC54ID8gcG9pbnQueC5nZXQoKSA6IDAsXHJcbiAgICAgICAgICAgIHk6IHBvaW50LnkgPyBwb2ludC55LmdldCgpIDogMCxcclxuICAgICAgICB9IH0pO1xyXG59XHJcbmZ1bmN0aW9uIGdldENvbnN0cmFpbnRzKGF4aXMsIF9hKSB7XHJcbiAgICB2YXIgdG9wID0gX2EudG9wLCByaWdodCA9IF9hLnJpZ2h0LCBib3R0b20gPSBfYS5ib3R0b20sIGxlZnQgPSBfYS5sZWZ0O1xyXG4gICAgaWYgKGF4aXMgPT09IFwieFwiKSB7XHJcbiAgICAgICAgcmV0dXJuIHsgbWluOiBsZWZ0LCBtYXg6IHJpZ2h0IH07XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZXR1cm4geyBtaW46IHRvcCwgbWF4OiBib3R0b20gfTtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBzaG91bGREcmFnKGRpcmVjdGlvbiwgZHJhZywgY3VycmVudERpcmVjdGlvbikge1xyXG4gICAgcmV0dXJuICgoZHJhZyA9PT0gdHJ1ZSB8fCBkcmFnID09PSBkaXJlY3Rpb24pICYmXHJcbiAgICAgICAgKGN1cnJlbnREaXJlY3Rpb24gPT09IG51bGwgfHwgY3VycmVudERpcmVjdGlvbiA9PT0gZGlyZWN0aW9uKSk7XHJcbn1cclxuLyoqXHJcbiAqIEJhc2VkIG9uIGFuIHgveSBvZmZzZXQgZGV0ZXJtaW5lIHRoZSBjdXJyZW50IGRyYWcgZGlyZWN0aW9uLiBJZiBib3RoIGF4aXMnIG9mZnNldHMgYXJlIGxvd2VyXHJcbiAqIHRoYW4gdGhlIHByb3ZpZGVkIHRocmVzaG9sZCwgcmV0dXJuIGBudWxsYC5cclxuICpcclxuICogQHBhcmFtIG9mZnNldCAtIFRoZSB4L3kgb2Zmc2V0IGZyb20gb3JpZ2luLlxyXG4gKiBAcGFyYW0gbG9ja1RocmVzaG9sZCAtIChPcHRpb25hbCkgLSB0aGUgbWluaW11bSBhYnNvbHV0ZSBvZmZzZXQgYmVmb3JlIHdlIGNhbiBkZXRlcm1pbmUgYSBkcmFnIGRpcmVjdGlvbi5cclxuICovXHJcbmZ1bmN0aW9uIGdldEN1cnJlbnREaXJlY3Rpb24ob2Zmc2V0LCBsb2NrVGhyZXNob2xkKSB7XHJcbiAgICBpZiAobG9ja1RocmVzaG9sZCA9PT0gdm9pZCAwKSB7IGxvY2tUaHJlc2hvbGQgPSAxMDsgfVxyXG4gICAgdmFyIGRpcmVjdGlvbiA9IG51bGw7XHJcbiAgICBpZiAoTWF0aC5hYnMob2Zmc2V0LnkpID4gbG9ja1RocmVzaG9sZCkge1xyXG4gICAgICAgIGRpcmVjdGlvbiA9IFwieVwiO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoTWF0aC5hYnMob2Zmc2V0LngpID4gbG9ja1RocmVzaG9sZCkge1xyXG4gICAgICAgIGRpcmVjdGlvbiA9IFwieFwiO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGRpcmVjdGlvbjtcclxufVxyXG4vKipcclxuICogVGFrZXMgYSBwYXJlbnQgRWxlbWVudCBhbmQgYSBkcmFnZ2FibGUgRWxlbWVudCBhbmQgcmV0dXJucyBwaXhlbC1iYXNlZCBkcmFnIGNvbnN0cmFpbnRzLlxyXG4gKlxyXG4gKiBAcGFyYW0gY29uc3RyYWludHNSZWZcclxuICogQHBhcmFtIGRyYWdnYWJsZVJlZlxyXG4gKi9cclxuZnVuY3Rpb24gY2FsY3VsYXRlQ29uc3RyYWludHNGcm9tRG9tKGNvbnN0cmFpbnRzUmVmLCBkcmFnZ2FibGVSZWYsIHBvaW50LCB0cmFuc2Zvcm1QYWdlUG9pbnQpIHtcclxuICAgIGludmFyaWFudChjb25zdHJhaW50c1JlZi5jdXJyZW50ICE9PSBudWxsICYmIGRyYWdnYWJsZVJlZi5jdXJyZW50ICE9PSBudWxsLCBcIklmIGBkcmFnQ29uc3RyYWludHNgIGlzIHNldCBhcyBhIFJlYWN0IHJlZiwgdGhhdCByZWYgbXVzdCBiZSBwYXNzZWQgdG8gYW5vdGhlciBjb21wb25lbnQncyBgcmVmYCBwcm9wLlwiKTtcclxuICAgIHZhciBwYXJlbnRCb3VuZGluZ0JveCA9IGdldEJvdW5kaW5nQm94KGNvbnN0cmFpbnRzUmVmLCB0cmFuc2Zvcm1QYWdlUG9pbnQpO1xyXG4gICAgdmFyIGRyYWdnYWJsZUJvdW5kaW5nQm94ID0gZ2V0Qm91bmRpbmdCb3goZHJhZ2dhYmxlUmVmLCB0cmFuc2Zvcm1QYWdlUG9pbnQpO1xyXG4gICAgdmFyIGxlZnQgPSBwYXJlbnRCb3VuZGluZ0JveC5sZWZ0IC1cclxuICAgICAgICBkcmFnZ2FibGVCb3VuZGluZ0JveC5sZWZ0ICtcclxuICAgICAgICBnZXRDdXJyZW50T2Zmc2V0KHBvaW50LngpO1xyXG4gICAgdmFyIHRvcCA9IHBhcmVudEJvdW5kaW5nQm94LnRvcCAtXHJcbiAgICAgICAgZHJhZ2dhYmxlQm91bmRpbmdCb3gudG9wICtcclxuICAgICAgICBnZXRDdXJyZW50T2Zmc2V0KHBvaW50LnkpO1xyXG4gICAgdmFyIHJpZ2h0ID0gcGFyZW50Qm91bmRpbmdCb3gud2lkdGggLSBkcmFnZ2FibGVCb3VuZGluZ0JveC53aWR0aCArIGxlZnQ7XHJcbiAgICB2YXIgYm90dG9tID0gcGFyZW50Qm91bmRpbmdCb3guaGVpZ2h0IC0gZHJhZ2dhYmxlQm91bmRpbmdCb3guaGVpZ2h0ICsgdG9wO1xyXG4gICAgcmV0dXJuIHsgdG9wOiB0b3AsIGxlZnQ6IGxlZnQsIHJpZ2h0OiByaWdodCwgYm90dG9tOiBib3R0b20gfTtcclxufVxyXG5mdW5jdGlvbiBnZXRCb3VuZGluZ0JveChyZWYsIHRyYW5zZm9ybVBhZ2VQb2ludCkge1xyXG4gICAgdmFyIHJlY3QgPSByZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIHZhciBfYSA9IHRyYW5zZm9ybVBhZ2VQb2ludCh7XHJcbiAgICAgICAgeDogcmVjdC5sZWZ0LFxyXG4gICAgICAgIHk6IHJlY3QudG9wLFxyXG4gICAgfSksIGxlZnQgPSBfYS54LCB0b3AgPSBfYS55O1xyXG4gICAgdmFyIF9iID0gdHJhbnNmb3JtUGFnZVBvaW50KHtcclxuICAgICAgICB4OiByZWN0LndpZHRoLFxyXG4gICAgICAgIHk6IHJlY3QuaGVpZ2h0LFxyXG4gICAgfSksIHdpZHRoID0gX2IueCwgaGVpZ2h0ID0gX2IueTtcclxuICAgIHJldHVybiB7IGxlZnQ6IGxlZnQsIHRvcDogdG9wLCB3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0IH07XHJcbn1cclxuZnVuY3Rpb24gZ2V0Q3VycmVudE9mZnNldChwb2ludCkge1xyXG4gICAgcmV0dXJuIHBvaW50ID8gcG9pbnQuZ2V0KCkgOiAwO1xyXG59XHJcbmZ1bmN0aW9uIGFwcGx5Q29uc3RyYWludHMoYXhpcywgdmFsdWUsIGNvbnN0cmFpbnRzLCBkcmFnRWxhc3RpYykge1xyXG4gICAgdmFyIGNvbnN0cmFpbmVkVmFsdWUgPSB2YWx1ZSBpbnN0YW5jZW9mIE1vdGlvblZhbHVlID8gdmFsdWUuZ2V0KCkgOiB2YWx1ZTtcclxuICAgIGlmICghY29uc3RyYWludHMpIHtcclxuICAgICAgICByZXR1cm4gY29uc3RyYWluZWRWYWx1ZTtcclxuICAgIH1cclxuICAgIHZhciBfYSA9IGdldENvbnN0cmFpbnRzKGF4aXMsIGNvbnN0cmFpbnRzKSwgbWluID0gX2EubWluLCBtYXggPSBfYS5tYXg7XHJcbiAgICBpZiAobWluICE9PSB1bmRlZmluZWQgJiYgY29uc3RyYWluZWRWYWx1ZSA8IG1pbikge1xyXG4gICAgICAgIGNvbnN0cmFpbmVkVmFsdWUgPSBkcmFnRWxhc3RpY1xyXG4gICAgICAgICAgICA/IGFwcGx5T3ZlcmRyYWcobWluLCBjb25zdHJhaW5lZFZhbHVlLCBkcmFnRWxhc3RpYylcclxuICAgICAgICAgICAgOiBNYXRoLm1heChtaW4sIGNvbnN0cmFpbmVkVmFsdWUpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAobWF4ICE9PSB1bmRlZmluZWQgJiYgY29uc3RyYWluZWRWYWx1ZSA+IG1heCkge1xyXG4gICAgICAgIGNvbnN0cmFpbmVkVmFsdWUgPSBkcmFnRWxhc3RpY1xyXG4gICAgICAgICAgICA/IGFwcGx5T3ZlcmRyYWcobWF4LCBjb25zdHJhaW5lZFZhbHVlLCBkcmFnRWxhc3RpYylcclxuICAgICAgICAgICAgOiBNYXRoLm1pbihtYXgsIGNvbnN0cmFpbmVkVmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgTW90aW9uVmFsdWUpIHtcclxuICAgICAgICB2YWx1ZS5zZXQoY29uc3RyYWluZWRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29uc3RyYWluZWRWYWx1ZTtcclxufVxyXG5mdW5jdGlvbiBhcHBseU92ZXJkcmFnKG9yaWdpbiwgY3VycmVudCwgZHJhZ0VsYXN0aWMpIHtcclxuICAgIHZhciBkcmFnRmFjdG9yID0gdHlwZW9mIGRyYWdFbGFzdGljID09PSBcIm51bWJlclwiID8gZHJhZ0VsYXN0aWMgOiAwLjM1O1xyXG4gICAgcmV0dXJuIG1peChvcmlnaW4sIGN1cnJlbnQsIGRyYWdGYWN0b3IpO1xyXG59XG5cbi8qKlxyXG4gKiBBIGhvb2sgdGhhdCBhbGxvd3MgYW4gZWxlbWVudCB0byBiZSBkcmFnZ2VkLlxyXG4gKlxyXG4gKiBAcGFyYW0gcGFyYW1cclxuICogQHBhcmFtIHJlZlxyXG4gKiBAcGFyYW0gdmFsdWVzXHJcbiAqIEBwYXJhbSBjb250cm9sc1xyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIHVzZURyYWcocHJvcHMsIHJlZiwgdmFsdWVzLCBjb250cm9scykge1xyXG4gICAgdmFyIGdyb3VwRHJhZ0NvbnRyb2xzID0gcHJvcHMuZHJhZ0NvbnRyb2xzO1xyXG4gICAgdmFyIHRyYW5zZm9ybVBhZ2VQb2ludCA9IHVzZUNvbnRleHQoTW90aW9uUGx1Z2luQ29udGV4dCkudHJhbnNmb3JtUGFnZVBvaW50O1xyXG4gICAgdmFyIGRyYWdDb250cm9scyA9IHVzZUNvbnN0YW50KGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldyBDb21wb25lbnREcmFnQ29udHJvbHMoeyByZWY6IHJlZiwgdmFsdWVzOiB2YWx1ZXMsIGNvbnRyb2xzOiBjb250cm9scyB9KTsgfSk7XHJcbiAgICBkcmFnQ29udHJvbHMudXBkYXRlUHJvcHMoX19hc3NpZ24oX19hc3NpZ24oe30sIHByb3BzKSwgeyB0cmFuc2Zvcm1QYWdlUG9pbnQ6IHRyYW5zZm9ybVBhZ2VQb2ludCB9KSk7XHJcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkgeyByZXR1cm4gZ3JvdXBEcmFnQ29udHJvbHMgJiYgZ3JvdXBEcmFnQ29udHJvbHMuc3Vic2NyaWJlKGRyYWdDb250cm9scyk7IH0sIFtkcmFnQ29udHJvbHNdKTtcclxuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7IHJldHVybiBkcmFnQ29udHJvbHMubW91bnQocmVmLmN1cnJlbnQpOyB9LCBbXSk7XHJcbn1cblxudmFyIERyYWcgPSB7XHJcbiAgICBrZXk6IFwiZHJhZ1wiLFxyXG4gICAgc2hvdWxkUmVuZGVyOiBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuICEhcHJvcHMuZHJhZzsgfSxcclxuICAgIENvbXBvbmVudDogbWFrZVJlbmRlcmxlc3NDb21wb25lbnQoZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgdmFyIGlubmVyUmVmID0gX2EuaW5uZXJSZWYsIHZhbHVlcyA9IF9hLnZhbHVlcywgY29udHJvbHMgPSBfYS5jb250cm9scywgcHJvcHMgPSBfX3Jlc3QoX2EsIFtcImlubmVyUmVmXCIsIFwidmFsdWVzXCIsIFwiY29udHJvbHNcIl0pO1xyXG4gICAgICAgIHJldHVybiB1c2VEcmFnKHByb3BzLCBpbm5lclJlZiwgdmFsdWVzLCBjb250cm9scyk7XHJcbiAgICB9KSxcclxufTtcblxuZnVuY3Rpb24gaXNDU1NWYXJpYWJsZSh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiB2YWx1ZS5zdGFydHNXaXRoKFwidmFyKC0tXCIpO1xyXG59XHJcbi8qKlxyXG4gKiBQYXJzZSBGcmFtZXIncyBzcGVjaWFsIENTUyB2YXJpYWJsZSBmb3JtYXQgaW50byBhIENTUyB0b2tlbiBhbmQgYSBmYWxsYmFjay5cclxuICpcclxuICogYGBgXHJcbiAqIGB2YXIoLS1mb28sICNmZmYpYCA9PiBbYC0tZm9vYCwgJyNmZmYnXVxyXG4gKiBgYGBcclxuICpcclxuICogQHBhcmFtIGN1cnJlbnRcclxuICovXHJcbnZhciBjc3NWYXJpYWJsZVJlZ2V4ID0gL3ZhclxcKCgtLVthLXpBLVowLTktX10rKSw/ID8oW2EtekEtWjAtOSAoKSUjLiwtXSspP1xcKS87XHJcbmZ1bmN0aW9uIHBhcnNlQ1NTVmFyaWFibGUoY3VycmVudCkge1xyXG4gICAgdmFyIG1hdGNoID0gY3NzVmFyaWFibGVSZWdleC5leGVjKGN1cnJlbnQpO1xyXG4gICAgaWYgKCFtYXRjaClcclxuICAgICAgICByZXR1cm4gWyxdO1xyXG4gICAgdmFyIHRva2VuID0gbWF0Y2hbMV0sIGZhbGxiYWNrID0gbWF0Y2hbMl07XHJcbiAgICByZXR1cm4gW3Rva2VuLCBmYWxsYmFja107XHJcbn1cclxudmFyIG1heERlcHRoID0gNDtcclxuZnVuY3Rpb24gZ2V0VmFyaWFibGVWYWx1ZShjdXJyZW50LCBlbGVtZW50LCBkZXB0aCkge1xyXG4gICAgaWYgKGRlcHRoID09PSB2b2lkIDApIHsgZGVwdGggPSAxOyB9XHJcbiAgICBpbnZhcmlhbnQoZGVwdGggPD0gbWF4RGVwdGgsIFwiTWF4IENTUyB2YXJpYWJsZSBmYWxsYmFjayBkZXB0aCBkZXRlY3RlZCBpbiBwcm9wZXJ0eSBcXFwiXCIgKyBjdXJyZW50ICsgXCJcXFwiLiBUaGlzIG1heSBpbmRpY2F0ZSBhIGNpcmN1bGFyIGZhbGxiYWNrIGRlcGVuZGVuY3kuXCIpO1xyXG4gICAgdmFyIF9hID0gcGFyc2VDU1NWYXJpYWJsZShjdXJyZW50KSwgdG9rZW4gPSBfYVswXSwgZmFsbGJhY2sgPSBfYVsxXTtcclxuICAgIC8vIE5vIENTUyB2YXJpYWJsZSBkZXRlY3RlZFxyXG4gICAgaWYgKCF0b2tlbilcclxuICAgICAgICByZXR1cm47XHJcbiAgICAvLyBBdHRlbXB0IHRvIHJlYWQgdGhpcyBDU1MgdmFyaWFibGUgb2ZmIHRoZSBlbGVtZW50XHJcbiAgICB2YXIgcmVzb2x2ZWQgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS5nZXRQcm9wZXJ0eVZhbHVlKHRva2VuKTtcclxuICAgIGlmIChyZXNvbHZlZCkge1xyXG4gICAgICAgIHJldHVybiByZXNvbHZlZDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGlzQ1NTVmFyaWFibGUoZmFsbGJhY2spKSB7XHJcbiAgICAgICAgLy8gVGhlIGZhbGxiYWNrIG1pZ2h0IGl0c2VsZiBiZSBhIENTUyB2YXJpYWJsZSwgaW4gd2hpY2ggY2FzZSB3ZSBhdHRlbXB0IHRvIHJlc29sdmUgaXQgdG9vLlxyXG4gICAgICAgIHJldHVybiBnZXRWYXJpYWJsZVZhbHVlKGZhbGxiYWNrLCBlbGVtZW50LCBkZXB0aCArIDEpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbGxiYWNrO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBSZXNvbHZlIENTUyB2YXJpYWJsZXMgZnJvbVxyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIHJlc29sdmVDU1NWYXJpYWJsZXModmFsdWVzLCByZWYsIF9hLCB0cmFuc2l0aW9uRW5kKSB7XHJcbiAgICB2YXIgdGFyZ2V0ID0gX19yZXN0KF9hLCBbXSk7XHJcbiAgICB2YXIgZWxlbWVudCA9IHJlZi5jdXJyZW50O1xyXG4gICAgaWYgKCEoZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSlcclxuICAgICAgICByZXR1cm4geyB0YXJnZXQ6IHRhcmdldCwgdHJhbnNpdGlvbkVuZDogdHJhbnNpdGlvbkVuZCB9O1xyXG4gICAgLy8gSWYgYHRyYW5zaXRpb25FbmRgIGlzbid0IGB1bmRlZmluZWRgLCBjbG9uZSBpdC4gV2UgY291bGQgY2xvbmUgYHRhcmdldGAgYW5kIGB0cmFuc2l0aW9uRW5kYFxyXG4gICAgLy8gb25seSBpZiB0aGV5IGNoYW5nZSBidXQgSSB0aGluayB0aGlzIHJlYWRzIGNsZWFyZXIgYW5kIHRoaXMgaXNuJ3QgYSBwZXJmb3JtYW5jZS1jcml0aWNhbCBwYXRoLlxyXG4gICAgaWYgKHRyYW5zaXRpb25FbmQpIHtcclxuICAgICAgICB0cmFuc2l0aW9uRW5kID0gX19hc3NpZ24oe30sIHRyYW5zaXRpb25FbmQpO1xyXG4gICAgfVxyXG4gICAgLy8gR28gdGhyb3VnaCBleGlzdGluZyBgTW90aW9uVmFsdWVgcyBhbmQgZW5zdXJlIGFueSBleGlzdGluZyBDU1MgdmFyaWFibGVzIGFyZSByZXNvbHZlZFxyXG4gICAgdmFsdWVzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnQgPSB2YWx1ZS5nZXQoKTtcclxuICAgICAgICBpZiAoIWlzQ1NTVmFyaWFibGUoY3VycmVudCkpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB2YXIgcmVzb2x2ZWQgPSBnZXRWYXJpYWJsZVZhbHVlKGN1cnJlbnQsIGVsZW1lbnQpO1xyXG4gICAgICAgIGlmIChyZXNvbHZlZClcclxuICAgICAgICAgICAgdmFsdWUuc2V0KHJlc29sdmVkKTtcclxuICAgIH0pO1xyXG4gICAgLy8gQ3ljbGUgdGhyb3VnaCBldmVyeSB0YXJnZXQgcHJvcGVydHkgYW5kIHJlc29sdmUgQ1NTIHZhcmlhYmxlcy4gQ3VycmVudGx5XHJcbiAgICAvLyB3ZSBvbmx5IHJlYWQgc2luZ2xlLXZhciBwcm9wZXJ0aWVzIGxpa2UgYHZhcigtLWZvbylgLCBub3QgYGNhbGModmFyKC0tZm9vKSArIDIwcHgpYFxyXG4gICAgZm9yICh2YXIga2V5IGluIHRhcmdldCkge1xyXG4gICAgICAgIHZhciBjdXJyZW50ID0gdGFyZ2V0W2tleV07XHJcbiAgICAgICAgaWYgKCFpc0NTU1ZhcmlhYmxlKGN1cnJlbnQpKVxyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB2YXIgcmVzb2x2ZWQgPSBnZXRWYXJpYWJsZVZhbHVlKGN1cnJlbnQsIGVsZW1lbnQpO1xyXG4gICAgICAgIGlmICghcmVzb2x2ZWQpXHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIC8vIENsb25lIHRhcmdldCBpZiBpdCBoYXNuJ3QgYWxyZWFkeSBiZWVuXHJcbiAgICAgICAgdGFyZ2V0W2tleV0gPSByZXNvbHZlZDtcclxuICAgICAgICAvLyBJZiB0aGUgdXNlciBoYXNuJ3QgYWxyZWFkeSBzZXQgdGhpcyBrZXkgb24gYHRyYW5zaXRpb25FbmRgLCBzZXQgaXQgdG8gdGhlIHVucmVzb2x2ZWRcclxuICAgICAgICAvLyBDU1MgdmFyaWFibGUuIFRoaXMgd2lsbCBlbnN1cmUgdGhhdCBhZnRlciB0aGUgYW5pbWF0aW9uIHRoZSBjb21wb25lbnQgd2lsbCByZWZsZWN0XHJcbiAgICAgICAgLy8gY2hhbmdlcyBpbiB0aGUgdmFsdWUgb2YgdGhlIENTUyB2YXJpYWJsZS5cclxuICAgICAgICBpZiAodHJhbnNpdGlvbkVuZCAmJiB0cmFuc2l0aW9uRW5kW2tleV0gPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uRW5kW2tleV0gPSBjdXJyZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7IHRhcmdldDogdGFyZ2V0LCB0cmFuc2l0aW9uRW5kOiB0cmFuc2l0aW9uRW5kIH07XHJcbn1cblxudmFyIHBvc2l0aW9uYWxLZXlzID0gbmV3IFNldChbXHJcbiAgICBcIndpZHRoXCIsXHJcbiAgICBcImhlaWdodFwiLFxyXG4gICAgXCJ0b3BcIixcclxuICAgIFwibGVmdFwiLFxyXG4gICAgXCJyaWdodFwiLFxyXG4gICAgXCJib3R0b21cIixcclxuICAgIFwieFwiLFxyXG4gICAgXCJ5XCIsXHJcbl0pO1xyXG52YXIgaXNQb3NpdGlvbmFsS2V5ID0gZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gcG9zaXRpb25hbEtleXMuaGFzKGtleSk7IH07XHJcbnZhciBoYXNQb3NpdGlvbmFsS2V5ID0gZnVuY3Rpb24gKHRhcmdldCkge1xyXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHRhcmdldCkuc29tZShpc1Bvc2l0aW9uYWxLZXkpO1xyXG59O1xyXG52YXIgc2V0QW5kUmVzZXRWZWxvY2l0eSA9IGZ1bmN0aW9uICh2YWx1ZSwgdG8pIHtcclxuICAgIC8vIExvb2tzIG9kZCBidXQgc2V0dGluZyBpdCB0d2ljZSBkb2Vzbid0IHJlbmRlciwgaXQnbGwganVzdFxyXG4gICAgLy8gc2V0IGJvdGggcHJldiBhbmQgY3VycmVudCB0byB0aGUgbGF0ZXN0IHZhbHVlXHJcbiAgICB2YWx1ZS5zZXQodG8sIGZhbHNlKTtcclxuICAgIHZhbHVlLnNldCh0byk7XHJcbn07XHJcbnZhciBpc051bU9yUHhUeXBlID0gZnVuY3Rpb24gKHYpIHtcclxuICAgIHJldHVybiB2ID09PSBudW1iZXIgfHwgdiA9PT0gcHg7XHJcbn07XHJcbnZhciBCb3VuZGluZ0JveERpbWVuc2lvbjtcclxuKGZ1bmN0aW9uIChCb3VuZGluZ0JveERpbWVuc2lvbikge1xyXG4gICAgQm91bmRpbmdCb3hEaW1lbnNpb25bXCJ3aWR0aFwiXSA9IFwid2lkdGhcIjtcclxuICAgIEJvdW5kaW5nQm94RGltZW5zaW9uW1wiaGVpZ2h0XCJdID0gXCJoZWlnaHRcIjtcclxuICAgIEJvdW5kaW5nQm94RGltZW5zaW9uW1wibGVmdFwiXSA9IFwibGVmdFwiO1xyXG4gICAgQm91bmRpbmdCb3hEaW1lbnNpb25bXCJyaWdodFwiXSA9IFwicmlnaHRcIjtcclxuICAgIEJvdW5kaW5nQm94RGltZW5zaW9uW1widG9wXCJdID0gXCJ0b3BcIjtcclxuICAgIEJvdW5kaW5nQm94RGltZW5zaW9uW1wiYm90dG9tXCJdID0gXCJib3R0b21cIjtcclxufSkoQm91bmRpbmdCb3hEaW1lbnNpb24gfHwgKEJvdW5kaW5nQm94RGltZW5zaW9uID0ge30pKTtcclxudmFyIGdldFBvc0Zyb21NYXRyaXggPSBmdW5jdGlvbiAobWF0cml4LCBwb3MpIHtcclxuICAgIHJldHVybiBwYXJzZUZsb2F0KG1hdHJpeC5zcGxpdChcIiwgXCIpW3Bvc10pO1xyXG59O1xyXG52YXIgZ2V0VHJhbnNsYXRlRnJvbU1hdHJpeCA9IGZ1bmN0aW9uIChwb3MyLCBwb3MzKSB7IHJldHVybiBmdW5jdGlvbiAoX2Jib3gsIF9hKSB7XHJcbiAgICB2YXIgdHJhbnNmb3JtID0gX2EudHJhbnNmb3JtO1xyXG4gICAgaWYgKHRyYW5zZm9ybSA9PT0gXCJub25lXCIgfHwgIXRyYW5zZm9ybSlcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIHZhciBtYXRyaXgzZCA9IHRyYW5zZm9ybS5tYXRjaCgvXm1hdHJpeDNkXFwoKC4rKVxcKSQvKTtcclxuICAgIGlmIChtYXRyaXgzZCkge1xyXG4gICAgICAgIHJldHVybiBnZXRQb3NGcm9tTWF0cml4KG1hdHJpeDNkWzFdLCBwb3MzKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHZhciBtYXRyaXggPSB0cmFuc2Zvcm0ubWF0Y2goL15tYXRyaXhcXCgoLispXFwpJC8pO1xyXG4gICAgICAgIGlmIChtYXRyaXgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGdldFBvc0Zyb21NYXRyaXgobWF0cml4WzFdLCBwb3MyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTsgfTtcclxudmFyIHRyYW5zZm9ybUtleXMgPSBuZXcgU2V0KFtcInhcIiwgXCJ5XCIsIFwielwiXSk7XHJcbnZhciBub25UcmFuc2xhdGlvbmFsVHJhbnNmb3JtS2V5cyA9IHRyYW5zZm9ybVByb3BzLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7IHJldHVybiAhdHJhbnNmb3JtS2V5cy5oYXMoa2V5KTsgfSk7XHJcbmZ1bmN0aW9uIHJlbW92ZU5vblRyYW5zbGF0aW9uYWxUcmFuc2Zvcm0odmFsdWVzLCBlbGVtZW50U3R5bGVyKSB7XHJcbiAgICB2YXIgcmVtb3ZlZFRyYW5zZm9ybXMgPSBbXTtcclxuICAgIG5vblRyYW5zbGF0aW9uYWxUcmFuc2Zvcm1LZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IHZhbHVlcy5nZXQoa2V5KTtcclxuICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICByZW1vdmVkVHJhbnNmb3Jtcy5wdXNoKFtrZXksIHZhbHVlLmdldCgpXSk7XHJcbiAgICAgICAgICAgIHZhbHVlLnNldChrZXkuc3RhcnRzV2l0aChcInNjYWxlXCIpID8gMSA6IDApO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgLy8gQXBwbHkgY2hhbmdlcyB0byBlbGVtZW50IGJlZm9yZSBtZWFzdXJlbWVudFxyXG4gICAgaWYgKHJlbW92ZWRUcmFuc2Zvcm1zLmxlbmd0aClcclxuICAgICAgICBlbGVtZW50U3R5bGVyLnJlbmRlcigpO1xyXG4gICAgcmV0dXJuIHJlbW92ZWRUcmFuc2Zvcm1zO1xyXG59XHJcbnZhciBwb3NpdGlvbmFsVmFsdWVzID0ge1xyXG4gICAgLy8gRGltZW5zaW9uc1xyXG4gICAgd2lkdGg6IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgICAgIHZhciB3aWR0aCA9IF9hLndpZHRoO1xyXG4gICAgICAgIHJldHVybiB3aWR0aDtcclxuICAgIH0sXHJcbiAgICBoZWlnaHQ6IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgICAgIHZhciBoZWlnaHQgPSBfYS5oZWlnaHQ7XHJcbiAgICAgICAgcmV0dXJuIGhlaWdodDtcclxuICAgIH0sXHJcbiAgICB0b3A6IGZ1bmN0aW9uIChfYmJveCwgX2EpIHtcclxuICAgICAgICB2YXIgdG9wID0gX2EudG9wO1xyXG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHRvcCk7XHJcbiAgICB9LFxyXG4gICAgbGVmdDogZnVuY3Rpb24gKF9iYm94LCBfYSkge1xyXG4gICAgICAgIHZhciBsZWZ0ID0gX2EubGVmdDtcclxuICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChsZWZ0KTtcclxuICAgIH0sXHJcbiAgICBib3R0b206IGZ1bmN0aW9uIChfYSwgX2IpIHtcclxuICAgICAgICB2YXIgaGVpZ2h0ID0gX2EuaGVpZ2h0O1xyXG4gICAgICAgIHZhciB0b3AgPSBfYi50b3A7XHJcbiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodG9wKSArIGhlaWdodDtcclxuICAgIH0sXHJcbiAgICByaWdodDogZnVuY3Rpb24gKF9hLCBfYikge1xyXG4gICAgICAgIHZhciB3aWR0aCA9IF9hLndpZHRoO1xyXG4gICAgICAgIHZhciBsZWZ0ID0gX2IubGVmdDtcclxuICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChsZWZ0KSArIHdpZHRoO1xyXG4gICAgfSxcclxuICAgIC8vIFRyYW5zZm9ybVxyXG4gICAgeDogZ2V0VHJhbnNsYXRlRnJvbU1hdHJpeCg0LCAxMyksXHJcbiAgICB5OiBnZXRUcmFuc2xhdGVGcm9tTWF0cml4KDUsIDE0KSxcclxufTtcclxudmFyIGNvbnZlcnRDaGFuZ2VkVmFsdWVUeXBlcyA9IGZ1bmN0aW9uICh0YXJnZXQsIHZhbHVlcywgZWxlbWVudCwgZWxlbWVudFN0eWxlciwgY2hhbmdlZEtleXMpIHtcclxuICAgIHZhciBvcmlnaW5CYm94ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIHZhciBlbGVtZW50Q29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XHJcbiAgICB2YXIgZGlzcGxheSA9IGVsZW1lbnRDb21wdXRlZFN0eWxlLmRpc3BsYXksIHRvcCA9IGVsZW1lbnRDb21wdXRlZFN0eWxlLnRvcCwgbGVmdCA9IGVsZW1lbnRDb21wdXRlZFN0eWxlLmxlZnQsIGJvdHRvbSA9IGVsZW1lbnRDb21wdXRlZFN0eWxlLmJvdHRvbSwgcmlnaHQgPSBlbGVtZW50Q29tcHV0ZWRTdHlsZS5yaWdodCwgdHJhbnNmb3JtID0gZWxlbWVudENvbXB1dGVkU3R5bGUudHJhbnNmb3JtO1xyXG4gICAgdmFyIG9yaWdpbkNvbXB1dGVkU3R5bGUgPSB7IHRvcDogdG9wLCBsZWZ0OiBsZWZ0LCBib3R0b206IGJvdHRvbSwgcmlnaHQ6IHJpZ2h0LCB0cmFuc2Zvcm06IHRyYW5zZm9ybSB9O1xyXG4gICAgLy8gSWYgdGhlIGVsZW1lbnQgaXMgY3VycmVudGx5IHNldCB0byBkaXNwbGF5OiBcIm5vbmVcIiwgbWFrZSBpdCB2aXNpYmxlIGJlZm9yZVxyXG4gICAgLy8gbWVhc3VyaW5nIHRoZSB0YXJnZXQgYm91bmRpbmcgYm94XHJcbiAgICBpZiAoZGlzcGxheSA9PT0gXCJub25lXCIpIHtcclxuICAgICAgICBlbGVtZW50U3R5bGVyLnNldChcImRpc3BsYXlcIiwgdGFyZ2V0LmRpc3BsYXkgfHwgXCJibG9ja1wiKTtcclxuICAgIH1cclxuICAgIC8vIEFwcGx5IHRoZSBsYXRlc3QgdmFsdWVzIChhcyBzZXQgaW4gY2hlY2tBbmRDb252ZXJ0Q2hhbmdlZFZhbHVlVHlwZXMpXHJcbiAgICBlbGVtZW50U3R5bGVyLnJlbmRlcigpO1xyXG4gICAgdmFyIHRhcmdldEJib3ggPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgY2hhbmdlZEtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgLy8gUmVzdG9yZSBzdHlsZXMgdG8gdGhlaXIgKipjYWxjdWxhdGVkIGNvbXB1dGVkIHN0eWxlKiosIG5vdCB0aGVpciBhY3R1YWxcclxuICAgICAgICAvLyBvcmlnaW5hbGx5IHNldCBzdHlsZS4gVGhpcyBhbGxvd3MgdXMgdG8gYW5pbWF0ZSBiZXR3ZWVuIGVxdWl2YWxlbnQgcGl4ZWwgdW5pdHMuXHJcbiAgICAgICAgdmFyIHZhbHVlID0gdmFsdWVzLmdldChrZXkpO1xyXG4gICAgICAgIHNldEFuZFJlc2V0VmVsb2NpdHkodmFsdWUsIHBvc2l0aW9uYWxWYWx1ZXNba2V5XShvcmlnaW5CYm94LCBvcmlnaW5Db21wdXRlZFN0eWxlKSk7XHJcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBwb3NpdGlvbmFsVmFsdWVzW2tleV0odGFyZ2V0QmJveCwgZWxlbWVudENvbXB1dGVkU3R5bGUpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdGFyZ2V0O1xyXG59O1xyXG52YXIgY2hlY2tBbmRDb252ZXJ0Q2hhbmdlZFZhbHVlVHlwZXMgPSBmdW5jdGlvbiAodmFsdWVzLCByZWYsIHRhcmdldCwgdHJhbnNpdGlvbkVuZCkge1xyXG4gICAgaWYgKHRyYW5zaXRpb25FbmQgPT09IHZvaWQgMCkgeyB0cmFuc2l0aW9uRW5kID0ge307IH1cclxuICAgIHRhcmdldCA9IF9fYXNzaWduKHt9LCB0YXJnZXQpO1xyXG4gICAgdHJhbnNpdGlvbkVuZCA9IF9fYXNzaWduKHt9LCB0cmFuc2l0aW9uRW5kKTtcclxuICAgIHZhciBlbGVtZW50ID0gcmVmLmN1cnJlbnQ7XHJcbiAgICB2YXIgZWxlbWVudFN0eWxlciA9IHN0eWxlcihlbGVtZW50KTtcclxuICAgIHZhciB0YXJnZXRQb3NpdGlvbmFsS2V5cyA9IE9iamVjdC5rZXlzKHRhcmdldCkuZmlsdGVyKGlzUG9zaXRpb25hbEtleSk7XHJcbiAgICAvLyBXZSB3YW50IHRvIHJlbW92ZSBhbnkgdHJhbnNmb3JtIHZhbHVlcyB0aGF0IGNvdWxkIGFmZmVjdCB0aGUgZWxlbWVudCdzIGJvdW5kaW5nIGJveCBiZWZvcmVcclxuICAgIC8vIGl0J3MgbWVhc3VyZWQuIFdlJ2xsIHJlYXBwbHkgdGhlc2UgbGF0ZXIuXHJcbiAgICB2YXIgcmVtb3ZlZFRyYW5zZm9ybVZhbHVlcyA9IFtdO1xyXG4gICAgdmFyIGhhc0F0dGVtcHRlZFRvUmVtb3ZlVHJhbnNmb3JtVmFsdWVzID0gZmFsc2U7XHJcbiAgICB2YXIgY2hhbmdlZFZhbHVlVHlwZUtleXMgPSB0YXJnZXRQb3NpdGlvbmFsS2V5cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XHJcbiAgICAgICAgdmFyIHZhbHVlID0gdmFsdWVzLmdldChrZXkpO1xyXG4gICAgICAgIGlmICghdmFsdWUpXHJcbiAgICAgICAgICAgIHJldHVybiBhY2M7XHJcbiAgICAgICAgdmFyIGZyb20gPSB2YWx1ZS5nZXQoKTtcclxuICAgICAgICB2YXIgdG8gPSB0YXJnZXRba2V5XTtcclxuICAgICAgICB2YXIgZnJvbVR5cGUgPSBnZXREaW1lbnNpb25WYWx1ZVR5cGUoZnJvbSk7XHJcbiAgICAgICAgdmFyIHRvVHlwZTtcclxuICAgICAgICAvLyBUT0RPOiBUaGUgY3VycmVudCBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIGJhc2ljYWxseSB0aHJvd3MgYW4gZXJyb3JcclxuICAgICAgICAvLyBpZiB5b3UgdHJ5IGFuZCBkbyB2YWx1ZSBjb252ZXJzaW9uIHZpYSBrZXlmcmFtZXMuIFRoZXJlJ3MgcHJvYmFibHlcclxuICAgICAgICAvLyBhIHdheSBvZiBkb2luZyB0aGlzIGJ1dCB0aGUgcGVyZm9ybWFuY2UgaW1wbGljYXRpb25zIHdvdWxkIG5lZWQgZ3JlYXRlciBzY3J1dGlueSxcclxuICAgICAgICAvLyBhcyBpdCdkIGJlIGRvaW5nIG11bHRpcGxlIHJlc2l6ZS1yZW1lYXN1cmUgb3BlcmF0aW9ucy5cclxuICAgICAgICBpZiAoaXNLZXlmcmFtZXNUYXJnZXQodG8pKSB7XHJcbiAgICAgICAgICAgIHZhciBudW1LZXlmcmFtZXMgPSB0by5sZW5ndGg7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSB0b1swXSA9PT0gbnVsbCA/IDEgOiAwOyBpIDwgbnVtS2V5ZnJhbWVzOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGlmICghdG9UeXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9UeXBlID0gZ2V0RGltZW5zaW9uVmFsdWVUeXBlKHRvW2ldKTtcclxuICAgICAgICAgICAgICAgICAgICBpbnZhcmlhbnQodG9UeXBlID09PSBmcm9tVHlwZSB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAoaXNOdW1PclB4VHlwZShmcm9tVHlwZSkgJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzTnVtT3JQeFR5cGUodG9UeXBlKSksIFwiS2V5ZnJhbWVzIG11c3QgYmUgb2YgdGhlIHNhbWUgZGltZW5zaW9uIGFzIHRoZSBjdXJyZW50IHZhbHVlXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW52YXJpYW50KGdldERpbWVuc2lvblZhbHVlVHlwZSh0b1tpXSkgPT09IHRvVHlwZSwgXCJBbGwga2V5ZnJhbWVzIG11c3QgYmUgb2YgdGhlIHNhbWUgdHlwZVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdG9UeXBlID0gZ2V0RGltZW5zaW9uVmFsdWVUeXBlKHRvKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGZyb21UeXBlICE9PSB0b1R5cGUpIHtcclxuICAgICAgICAgICAgLy8gSWYgdGhleSdyZSBib3RoIGp1c3QgbnVtYmVyIG9yIHB4LCBjb252ZXJ0IHRoZW0gYm90aCB0byBudW1iZXJzIHJhdGhlciB0aGFuXHJcbiAgICAgICAgICAgIC8vIHJlbHlpbmcgb24gcmVzaXplL3JlbWVhc3VyZSB0byBjb252ZXJ0ICh3aGljaCBpcyB3YXN0ZWZ1bCBpbiB0aGlzIHNpdHVhdGlvbilcclxuICAgICAgICAgICAgaWYgKGlzTnVtT3JQeFR5cGUoZnJvbVR5cGUpICYmIGlzTnVtT3JQeFR5cGUodG9UeXBlKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSB2YWx1ZS5nZXQoKTtcclxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY3VycmVudCA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlLnNldChwYXJzZUZsb2F0KGN1cnJlbnQpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRba2V5XSA9IHBhcnNlRmxvYXQodG8pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0bykgJiYgdG9UeXBlID09PSBweCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gdG8ubWFwKHBhcnNlRmxvYXQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gSWYgd2UncmUgZ29pbmcgdG8gZG8gdmFsdWUgY29udmVyc2lvbiB2aWEgRE9NIG1lYXN1cmVtZW50cywgd2UgZmlyc3RcclxuICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gcmVtb3ZlIG5vbi1wb3NpdGlvbmFsIHRyYW5zZm9ybSB2YWx1ZXMgdGhhdCBjb3VsZCBhZmZlY3QgdGhlIGJib3ggbWVhc3VyZW1lbnRzLlxyXG4gICAgICAgICAgICAgICAgaWYgKCFoYXNBdHRlbXB0ZWRUb1JlbW92ZVRyYW5zZm9ybVZhbHVlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZWRUcmFuc2Zvcm1WYWx1ZXMgPSByZW1vdmVOb25UcmFuc2xhdGlvbmFsVHJhbnNmb3JtKHZhbHVlcywgZWxlbWVudFN0eWxlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgaGFzQXR0ZW1wdGVkVG9SZW1vdmVUcmFuc2Zvcm1WYWx1ZXMgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYWNjLnB1c2goa2V5KTtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb25FbmRba2V5XSA9XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbkVuZFtrZXldICE9PSB1bmRlZmluZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgPyB0cmFuc2l0aW9uRW5kW2tleV1cclxuICAgICAgICAgICAgICAgICAgICAgICAgOiB0YXJnZXRba2V5XTtcclxuICAgICAgICAgICAgICAgIHNldEFuZFJlc2V0VmVsb2NpdHkodmFsdWUsIHRvKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYWNjO1xyXG4gICAgfSwgW10pO1xyXG4gICAgaWYgKGNoYW5nZWRWYWx1ZVR5cGVLZXlzLmxlbmd0aCkge1xyXG4gICAgICAgIHZhciBjb252ZXJ0ZWRUYXJnZXQgPSBjb252ZXJ0Q2hhbmdlZFZhbHVlVHlwZXModGFyZ2V0LCB2YWx1ZXMsIGVsZW1lbnQsIGVsZW1lbnRTdHlsZXIsIGNoYW5nZWRWYWx1ZVR5cGVLZXlzKTtcclxuICAgICAgICAvLyBJZiB3ZSByZW1vdmVkIHRyYW5zZm9ybSB2YWx1ZXMsIHJlYXBwbHkgdGhlbSBiZWZvcmUgdGhlIG5leHQgcmVuZGVyXHJcbiAgICAgICAgaWYgKHJlbW92ZWRUcmFuc2Zvcm1WYWx1ZXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHJlbW92ZWRUcmFuc2Zvcm1WYWx1ZXMuZm9yRWFjaChmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICAgICAgICAgIHZhciBrZXkgPSBfYVswXSwgdmFsdWUgPSBfYVsxXTtcclxuICAgICAgICAgICAgICAgIHZhbHVlcy5nZXQoa2V5KS5zZXQodmFsdWUpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gUmVhcHBseSBvcmlnaW5hbCB2YWx1ZXNcclxuICAgICAgICBlbGVtZW50U3R5bGVyLnJlbmRlcigpO1xyXG4gICAgICAgIHJldHVybiB7IHRhcmdldDogY29udmVydGVkVGFyZ2V0LCB0cmFuc2l0aW9uRW5kOiB0cmFuc2l0aW9uRW5kIH07XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZXR1cm4geyB0YXJnZXQ6IHRhcmdldCwgdHJhbnNpdGlvbkVuZDogdHJhbnNpdGlvbkVuZCB9O1xyXG4gICAgfVxyXG59O1xyXG4vKipcclxuICogQ29udmVydCB2YWx1ZSB0eXBlcyBmb3IgeC95L3dpZHRoL2hlaWdodC90b3AvbGVmdC9ib3R0b20vcmlnaHRcclxuICpcclxuICogQWxsb3dzIGFuaW1hdGlvbiBiZXR3ZWVuIGAnYXV0bydgIC0+IGAnMTAwJSdgIG9yIGAwYCAtPiBgJ2NhbGMoNTAlIC0gMTB2dyknYFxyXG4gKlxyXG4gKiBAcGFyYW0gdmFsdWVzXHJcbiAqIEBwYXJhbSByZWZcclxuICogQHBhcmFtIHRhcmdldFxyXG4gKiBAcGFyYW0gdHJhbnNpdGlvbkVuZFxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIHVuaXRDb252ZXJzaW9uKHZhbHVlcywgcmVmLCB0YXJnZXQsIHRyYW5zaXRpb25FbmQpIHtcclxuICAgIHJldHVybiBoYXNQb3NpdGlvbmFsS2V5KHRhcmdldClcclxuICAgICAgICA/IGNoZWNrQW5kQ29udmVydENoYW5nZWRWYWx1ZVR5cGVzKHZhbHVlcywgcmVmLCB0YXJnZXQsIHRyYW5zaXRpb25FbmQpXHJcbiAgICAgICAgOiB7IHRhcmdldDogdGFyZ2V0LCB0cmFuc2l0aW9uRW5kOiB0cmFuc2l0aW9uRW5kIH07XHJcbn1cblxudmFyIHBhcnNlRG9tVmFyaWFudCA9IGZ1bmN0aW9uICh2YWx1ZXMsIHJlZikge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICh0YXJnZXQsIHRyYW5zaXRpb25FbmQpIHtcclxuICAgICAgICB2YXIgcmVzb2x2ZWQgPSByZXNvbHZlQ1NTVmFyaWFibGVzKHZhbHVlcywgcmVmLCB0YXJnZXQsIHRyYW5zaXRpb25FbmQpO1xyXG4gICAgICAgIHRhcmdldCA9IHJlc29sdmVkLnRhcmdldDtcclxuICAgICAgICB0cmFuc2l0aW9uRW5kID0gcmVzb2x2ZWQudHJhbnNpdGlvbkVuZDtcclxuICAgICAgICByZXR1cm4gdW5pdENvbnZlcnNpb24odmFsdWVzLCByZWYsIHRhcmdldCwgdHJhbnNpdGlvbkVuZCk7XHJcbiAgICB9O1xyXG59O1xuXG5mdW5jdGlvbiB1c2VGb3JjZVVwZGF0ZSgpIHtcclxuICAgIHZhciBfYSA9IHVzZVN0YXRlKDApLCBmb3JjZWRSZW5kZXJDb3VudCA9IF9hWzBdLCBzZXRGb3JjZWRSZW5kZXJDb3VudCA9IF9hWzFdO1xyXG4gICAgcmV0dXJuIHVzZUNhbGxiYWNrKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNldEZvcmNlZFJlbmRlckNvdW50KGZvcmNlZFJlbmRlckNvdW50ICsgMSk7IH0sIFtcclxuICAgICAgICBmb3JjZWRSZW5kZXJDb3VudCxcclxuICAgIF0pO1xyXG59XG5cbnZhciBTeW5jTGF5b3V0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XHJcbi8qKlxyXG4gKiBXaGVuIGxheW91dCBjaGFuZ2VzIGhhcHBlbiBhc3luY2hyb25vdXNseSB0byB0aGVpciBpbnN0aWdhdGluZyByZW5kZXIgKGllIHdoZW4gZXhpdGluZ1xyXG4gKiBjaGlsZHJlbiBvZiBgQW5pbWF0ZVByZXNlbmNlYCBhcmUgcmVtb3ZlZCksIGBTeW5jTGF5b3V0YCBjYW4gd3JhcCBwYXJlbnQgYW5kIHNpYmxpbmdcclxuICogY29tcG9uZW50cyB0aGF0IG5lZWQgdG8gYW5pbWF0ZSBhcyBhIHJlc3VsdCBvZiB0aGlzIGxheW91dCBjaGFuZ2UuXHJcbiAqXHJcbiAqIEBtb3Rpb25cclxuICpcclxuICogYGBganN4XHJcbiAqIGNvbnN0IE15Q29tcG9uZW50ID0gKHsgaXNWaXNpYmxlIH0pID0+IHtcclxuICogICByZXR1cm4gKFxyXG4gKiAgICAgPFN5bmNMYXlvdXQ+XHJcbiAqICAgICAgIDxBbmltYXRlUHJlc2VuY2U+XHJcbiAqICAgICAgICAge2lzVmlzaWJsZSAmJiAoXHJcbiAqICAgICAgICAgICA8bW90aW9uLmRpdiBleGl0PXt7IG9wYWNpdHk6IDAgfX0gLz5cclxuICogICAgICAgICApfVxyXG4gKiAgICAgICA8L0FuaW1hdGVQcmVzZW5jZT5cclxuICogICAgICAgPG1vdGlvbi5kaXYgcG9zaXRpb25UcmFuc2l0aW9uIC8+XHJcbiAqICAgICA8L1N5bmNMYXlvdXQ+XHJcbiAqICAgKVxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAaW50ZXJuYWxyZW1hcmtzXHJcbiAqXHJcbiAqIFRoZSB3YXkgdGhpcyBjb21wb25lbnQgd29ya3MgaXMgYnkgbWVtb2lzaW5nIGEgZnVuY3Rpb24gYW5kIHBhc3NpbmcgaXQgZG93biB2aWEgY29udGV4dC5cclxuICogVGhlIGZ1bmN0aW9uLCB3aGVuIGNhbGxlZCwgdXBkYXRlcyB0aGUgbG9jYWwgc3RhdGUsIHdoaWNoIGlzIHVzZWQgdG8gaW52YWxpZGF0ZSB0aGVcclxuICogbWVtb2lzYXRpb24gY2FjaGUuIEEgbmV3IGZ1bmN0aW9uIGlzIGNhbGxlZCwgcGVyZm9ybWluZyBhIHN5bmNlZCByZS1yZW5kZXIgb2YgY29tcG9uZW50c1xyXG4gKiB0aGF0IGFyZSB1c2luZyB0aGUgU3luY0xheW91dENvbnRleHQuXHJcbiAqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxudmFyIFVuc3RhYmxlU3luY0xheW91dCA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW47XHJcbiAgICB2YXIgZm9yY2VVcGRhdGUgPSB1c2VGb3JjZVVwZGF0ZSgpO1xyXG4gICAgcmV0dXJuIChjcmVhdGVFbGVtZW50KFN5bmNMYXlvdXRDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBmb3JjZVVwZGF0ZSB9LCBjaGlsZHJlbikpO1xyXG59O1xuXG52YXIgX2E7XHJcbnZhciBTdGVwTmFtZTtcclxuKGZ1bmN0aW9uIChTdGVwTmFtZSkge1xyXG4gICAgU3RlcE5hbWVbXCJQcmVwYXJlXCJdID0gXCJwcmVwYXJlXCI7XHJcbiAgICBTdGVwTmFtZVtcIlJlYWRcIl0gPSBcInJlYWRcIjtcclxuICAgIFN0ZXBOYW1lW1wiUmVuZGVyXCJdID0gXCJyZW5kZXJcIjtcclxufSkoU3RlcE5hbWUgfHwgKFN0ZXBOYW1lID0ge30pKTtcclxudmFyIHN0ZXBPcmRlciA9IFtTdGVwTmFtZS5QcmVwYXJlLCBTdGVwTmFtZS5SZWFkLCBTdGVwTmFtZS5SZW5kZXJdO1xyXG52YXIgam9icyA9IHN0ZXBPcmRlci5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XHJcbiAgICBhY2Nba2V5XSA9IFtdO1xyXG4gICAgcmV0dXJuIGFjYztcclxufSwge30pO1xyXG52YXIgam9ic05lZWRQcm9jZXNzaW5nID0gZmFsc2U7XHJcbmZ1bmN0aW9uIGZsdXNoQ2FsbGJhY2tMaXN0KGxpc3QpIHtcclxuICAgIHZhciBudW1Kb2JzID0gbGlzdC5sZW5ndGg7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bUpvYnM7IGkrKykge1xyXG4gICAgICAgIGxpc3RbaV0oKTtcclxuICAgIH1cclxuICAgIGxpc3QubGVuZ3RoID0gMDtcclxufVxyXG5mdW5jdGlvbiBmbHVzaEFsbEpvYnMoKSB7XHJcbiAgICBpZiAoIWpvYnNOZWVkUHJvY2Vzc2luZylcclxuICAgICAgICByZXR1cm47XHJcbiAgICBmbHVzaENhbGxiYWNrTGlzdChqb2JzLnByZXBhcmUpO1xyXG4gICAgZmx1c2hDYWxsYmFja0xpc3Qoam9icy5yZWFkKTtcclxuICAgIGZsdXNoQ2FsbGJhY2tMaXN0KGpvYnMucmVuZGVyKTtcclxuICAgIGpvYnNOZWVkUHJvY2Vzc2luZyA9IGZhbHNlO1xyXG59XHJcbi8vIE5vdGU6IFRoZSBhcHByb2FjaCBvZiBzY2hlZHVsbmcgam9icyBkdXJpbmcgdGhlIHJlbmRlciBzdGVwIGlzIGluY29tcGF0aWJsZSB3aXRoIGNvbmN1cnJlbnQgbW9kZVxyXG4vLyB3aGVyZSBtdWx0aXBsZSByZW5kZXJzIG1pZ2h0IGhhcHBlbiB3aXRob3V0IGEgRE9NIHVwZGF0ZS4gVGhpcyB3b3VsZCByZXN1bHQgaW4gdW5uZWNjZXNzYXJ5IGJhdGNoZWRcclxuLy8gam9icy4gQnV0IHRoaXMgd2FzIGFscmVhZHkgYSBwcm9ibGVtIHdpdGggb3VyIHByZXZpb3VzIGFwcHJvYWNoIHRvIHBvc2l0aW9uVHJhbnNpdGlvbi5cclxuLy8gSG9wZWZ1bGx5IHRoZSBSZWFjdCB0ZWFtIG9mZmVyIGEgZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUtZXNxdWUgaG9vayBhbmQgd2UgY2FuIG1vdmUgdG8gdGhhdC5cclxudmFyIGNyZWF0ZVVzZVN5bmNFZmZlY3QgPSBmdW5jdGlvbiAoc3RlcE5hbWUpIHsgcmV0dXJuIGZ1bmN0aW9uIChjYWxsYmFjaykge1xyXG4gICAgaWYgKCFjYWxsYmFjaylcclxuICAgICAgICByZXR1cm47XHJcbiAgICBqb2JzTmVlZFByb2Nlc3NpbmcgPSB0cnVlO1xyXG4gICAgam9ic1tzdGVwTmFtZV0ucHVzaChjYWxsYmFjayk7XHJcbn07IH07XHJcbnZhciBsYXlvdXRTeW5jID0gKF9hID0ge30sXHJcbiAgICBfYVtTdGVwTmFtZS5QcmVwYXJlXSA9IGNyZWF0ZVVzZVN5bmNFZmZlY3QoU3RlcE5hbWUuUHJlcGFyZSksXHJcbiAgICBfYVtTdGVwTmFtZS5SZWFkXSA9IGNyZWF0ZVVzZVN5bmNFZmZlY3QoU3RlcE5hbWUuUmVhZCksXHJcbiAgICBfYVtTdGVwTmFtZS5SZW5kZXJdID0gY3JlYXRlVXNlU3luY0VmZmVjdChTdGVwTmFtZS5SZW5kZXIpLFxyXG4gICAgX2EuZmx1c2ggPSBmbHVzaEFsbEpvYnMsXHJcbiAgICBfYSk7XG5cbmZ1bmN0aW9uIGlzSFRNTEVsZW1lbnQoZWxlbWVudCkge1xyXG4gICAgcmV0dXJuIGVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudDtcclxufVxuXG52YXIgZGVmYXVsdExheW91dFRyYW5zaXRpb24gPSB7XHJcbiAgICBkdXJhdGlvbjogMC44LFxyXG4gICAgZWFzZTogWzAuNDUsIDAuMDUsIDAuMTksIDEuMF0sXHJcbn07XHJcbnZhciBkZWZhdWx0UG9zaXRpb25UcmFuc2l0aW9uID0gdW5kZXJEYW1wZWRTcHJpbmcoKTtcclxuZnVuY3Rpb24gZ2V0RGVmYXVsdExheW91dFRyYW5zaXRpb24oaXNQb3NpdGlvbk9ubHkpIHtcclxuICAgIHJldHVybiBpc1Bvc2l0aW9uT25seSA/IGRlZmF1bHRQb3NpdGlvblRyYW5zaXRpb24gOiBkZWZhdWx0TGF5b3V0VHJhbnNpdGlvbjtcclxufVxyXG5mdW5jdGlvbiBpc1Jlc29sdmVyKHRyYW5zaXRpb24pIHtcclxuICAgIHJldHVybiB0eXBlb2YgdHJhbnNpdGlvbiA9PT0gXCJmdW5jdGlvblwiO1xyXG59XHJcbnZhciBheGlzTGFiZWxzID0ge1xyXG4gICAgeDoge1xyXG4gICAgICAgIGlkOiBcInhcIixcclxuICAgICAgICBzaXplOiBcIndpZHRoXCIsXHJcbiAgICAgICAgbWluOiBcImxlZnRcIixcclxuICAgICAgICBtYXg6IFwicmlnaHRcIixcclxuICAgICAgICBvcmlnaW46IFwib3JpZ2luWFwiLFxyXG4gICAgfSxcclxuICAgIHk6IHtcclxuICAgICAgICBpZDogXCJ5XCIsXHJcbiAgICAgICAgc2l6ZTogXCJoZWlnaHRcIixcclxuICAgICAgICBtaW46IFwidG9wXCIsXHJcbiAgICAgICAgbWF4OiBcImJvdHRvbVwiLFxyXG4gICAgICAgIG9yaWdpbjogXCJvcmlnaW5ZXCIsXHJcbiAgICB9LFxyXG59O1xyXG5mdW5jdGlvbiBjZW50ZXJPZihtaW4sIG1heCkge1xyXG4gICAgcmV0dXJuIChtaW4gKyBtYXgpIC8gMjtcclxufVxyXG5mdW5jdGlvbiBjYWxjQXhpc0RlbHRhKHByZXYsIG5leHQsIG5hbWVzKSB7XHJcbiAgICB2YXIgX2E7XHJcbiAgICB2YXIgc2l6ZURlbHRhID0gcHJldltuYW1lcy5zaXplXSAtIG5leHRbbmFtZXMuc2l6ZV07XHJcbiAgICB2YXIgb3JpZ2luID0gMC41O1xyXG4gICAgLy8gSWYgdGhlIGVsZW1lbnQgaGFzIGNoYW5nZWQgc2l6ZSB3ZSB3YW50IHRvIGNoZWNrIHdoZXRoZXIgZWl0aGVyIHNpZGUgaXMgaW5cclxuICAgIC8vIHRoZSBzYW1lIHBvc2l0aW9uIGJlZm9yZS9hZnRlciB0aGUgbGF5b3V0IHRyYW5zaXRpb24uIElmIHNvLCB3ZSBjYW4gYW5jaG9yXHJcbiAgICAvLyB0aGUgZWxlbWVudCB0byB0aGF0IHBvc2l0aW9uIGFuZCBvbmx5IGFuaW1hdGUgaXRzIHNpemUuXHJcbiAgICBpZiAoc2l6ZURlbHRhKSB7XHJcbiAgICAgICAgaWYgKHByZXZbbmFtZXMubWluXSA9PT0gbmV4dFtuYW1lcy5taW5dKSB7XHJcbiAgICAgICAgICAgIG9yaWdpbiA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHByZXZbbmFtZXMubWF4XSA9PT0gbmV4dFtuYW1lcy5tYXhdKSB7XHJcbiAgICAgICAgICAgIG9yaWdpbiA9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdmFyIGRlbHRhID0gKF9hID0ge30sXHJcbiAgICAgICAgX2FbbmFtZXMuc2l6ZV0gPSBzaXplRGVsdGEsXHJcbiAgICAgICAgX2FbbmFtZXMub3JpZ2luXSA9IG9yaWdpbixcclxuICAgICAgICBfYVtuYW1lcy5pZF0gPSBcclxuICAgICAgICAvLyBPbmx5IG1lYXN1cmUgYSBwb3NpdGlvbiBkZWx0YSBpZiB3ZSBoYXZlbid0IGFuY2hvcmVkIHRvIG9uZSBzaWRlXHJcbiAgICAgICAgb3JpZ2luID09PSAwLjVcclxuICAgICAgICAgICAgPyBjZW50ZXJPZihwcmV2W25hbWVzLm1pbl0sIHByZXZbbmFtZXMubWF4XSkgLVxyXG4gICAgICAgICAgICAgICAgY2VudGVyT2YobmV4dFtuYW1lcy5taW5dLCBuZXh0W25hbWVzLm1heF0pXHJcbiAgICAgICAgICAgIDogMCxcclxuICAgICAgICBfYSk7XHJcbiAgICByZXR1cm4gZGVsdGE7XHJcbn1cclxuZnVuY3Rpb24gY2FsY0RlbHRhKHByZXYsIG5leHQpIHtcclxuICAgIHZhciBkZWx0YSA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBjYWxjQXhpc0RlbHRhKHByZXYsIG5leHQsIGF4aXNMYWJlbHMueCkpLCBjYWxjQXhpc0RlbHRhKHByZXYsIG5leHQsIGF4aXNMYWJlbHMueSkpO1xyXG4gICAgcmV0dXJuIGRlbHRhO1xyXG59XHJcbnZhciBvZmZzZXQgPSB7XHJcbiAgICBnZXRMYXlvdXQ6IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgICAgIHZhciBvZmZzZXQgPSBfYS5vZmZzZXQ7XHJcbiAgICAgICAgcmV0dXJuIG9mZnNldDtcclxuICAgIH0sXHJcbiAgICBtZWFzdXJlOiBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgICAgIHZhciBvZmZzZXRMZWZ0ID0gZWxlbWVudC5vZmZzZXRMZWZ0LCBvZmZzZXRUb3AgPSBlbGVtZW50Lm9mZnNldFRvcCwgb2Zmc2V0V2lkdGggPSBlbGVtZW50Lm9mZnNldFdpZHRoLCBvZmZzZXRIZWlnaHQgPSBlbGVtZW50Lm9mZnNldEhlaWdodDtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBsZWZ0OiBvZmZzZXRMZWZ0LFxyXG4gICAgICAgICAgICB0b3A6IG9mZnNldFRvcCxcclxuICAgICAgICAgICAgcmlnaHQ6IG9mZnNldExlZnQgKyBvZmZzZXRXaWR0aCxcclxuICAgICAgICAgICAgYm90dG9tOiBvZmZzZXRUb3AgKyBvZmZzZXRIZWlnaHQsXHJcbiAgICAgICAgICAgIHdpZHRoOiBvZmZzZXRXaWR0aCxcclxuICAgICAgICAgICAgaGVpZ2h0OiBvZmZzZXRIZWlnaHQsXHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcbn07XHJcbnZhciBib3VuZGluZ0JveCA9IHtcclxuICAgIGdldExheW91dDogZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgdmFyIGJvdW5kaW5nQm94ID0gX2EuYm91bmRpbmdCb3g7XHJcbiAgICAgICAgcmV0dXJuIGJvdW5kaW5nQm94O1xyXG4gICAgfSxcclxuICAgIG1lYXN1cmU6IGZ1bmN0aW9uIChlbGVtZW50KSB7XHJcbiAgICAgICAgdmFyIF9hID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSwgbGVmdCA9IF9hLmxlZnQsIHRvcCA9IF9hLnRvcCwgd2lkdGggPSBfYS53aWR0aCwgaGVpZ2h0ID0gX2EuaGVpZ2h0LCByaWdodCA9IF9hLnJpZ2h0LCBib3R0b20gPSBfYS5ib3R0b207XHJcbiAgICAgICAgcmV0dXJuIHsgbGVmdDogbGVmdCwgdG9wOiB0b3AsIHdpZHRoOiB3aWR0aCwgaGVpZ2h0OiBoZWlnaHQsIHJpZ2h0OiByaWdodCwgYm90dG9tOiBib3R0b20gfTtcclxuICAgIH0sXHJcbn07XHJcbmZ1bmN0aW9uIHJlYWRQb3NpdGlvblN0eWxlKGVsZW1lbnQpIHtcclxuICAgIHJldHVybiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS5wb3NpdGlvbjtcclxufVxyXG5mdW5jdGlvbiBnZXRMYXlvdXRUeXBlKHByZXYsIG5leHQsIGlzUG9zaXRpb25Pbmx5KSB7XHJcbiAgICByZXR1cm4gaXNQb3NpdGlvbk9ubHkgJiYgcHJldiA9PT0gbmV4dCA/IG9mZnNldCA6IGJvdW5kaW5nQm94O1xyXG59XHJcbmZ1bmN0aW9uIGlzU2l6ZUtleShrZXkpIHtcclxuICAgIHJldHVybiBrZXkgPT09IFwid2lkdGhcIiB8fCBrZXkgPT09IFwiaGVpZ2h0XCI7XHJcbn1cclxuZnVuY3Rpb24gZ2V0VHJhbnNpdGlvbihfYSkge1xyXG4gICAgdmFyIGxheW91dFRyYW5zaXRpb24gPSBfYS5sYXlvdXRUcmFuc2l0aW9uLCBwb3NpdGlvblRyYW5zaXRpb24gPSBfYS5wb3NpdGlvblRyYW5zaXRpb247XHJcbiAgICByZXR1cm4gbGF5b3V0VHJhbnNpdGlvbiB8fCBwb3NpdGlvblRyYW5zaXRpb247XHJcbn1cclxudmFyIExheW91dEFuaW1hdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhMYXlvdXRBbmltYXRpb24sIF9zdXBlcik7XHJcbiAgICBmdW5jdGlvbiBMYXlvdXRBbmltYXRpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG4gICAgfVxyXG4gICAgLy8gTWVhc3VyZSB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgRE9NIGJlZm9yZSBpdCdzIHVwZGF0ZWQsIGFuZCBzY2hlZHVsZSBjaGVja3MgdG8gc2VlXHJcbiAgICAvLyBpZiBpdCdzIGNoYW5nZWQgYXMgYSByZXN1bHQgb2YgYSBSZWFjdCByZW5kZXIuXHJcbiAgICBMYXlvdXRBbmltYXRpb24ucHJvdG90eXBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfYSA9IHRoaXMucHJvcHMsIGlubmVyUmVmID0gX2EuaW5uZXJSZWYsIHBvc2l0aW9uVHJhbnNpdGlvbiA9IF9hLnBvc2l0aW9uVHJhbnNpdGlvbiwgdmFsdWVzID0gX2EudmFsdWVzLCBjb250cm9scyA9IF9hLmNvbnRyb2xzO1xyXG4gICAgICAgIHZhciBlbGVtZW50ID0gaW5uZXJSZWYuY3VycmVudDtcclxuICAgICAgICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB2YXIgbGF5b3V0VHJhbnNpdGlvbiA9IGdldFRyYW5zaXRpb24odGhpcy5wcm9wcyk7XHJcbiAgICAgICAgdmFyIGlzUG9zaXRpb25Pbmx5ID0gISFwb3NpdGlvblRyYW5zaXRpb247XHJcbiAgICAgICAgdmFyIHBvc2l0aW9uU3R5bGUgPSByZWFkUG9zaXRpb25TdHlsZShlbGVtZW50KTtcclxuICAgICAgICB2YXIgcHJldiA9IHtcclxuICAgICAgICAgICAgb2Zmc2V0OiBvZmZzZXQubWVhc3VyZShlbGVtZW50KSxcclxuICAgICAgICAgICAgYm91bmRpbmdCb3g6IGJvdW5kaW5nQm94Lm1lYXN1cmUoZWxlbWVudCksXHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YXIgdHJhbnNmb3JtO1xyXG4gICAgICAgIHZhciBuZXh0O1xyXG4gICAgICAgIHZhciBjb21wYXJlO1xyXG4gICAgICAgIC8vIFdlIHNwbGl0IHRoZSB1bnNldHRpbmcsIHJlYWQgYW5kIHJlYXBwbGljYXRpb24gb2YgdGhlIGB0cmFuc2Zvcm1gIHN0eWxlIHByb3AgaW50b1xyXG4gICAgICAgIC8vIGRpZmZlcmVudCBzdGVwcyB2aWEgdXNlU3luY0VmZmVjdC4gTXVsdGlwbGUgY29tcG9uZW50cyBtaWdodCBhbGwgYmUgZG9pbmcgdGhlIHNhbWVcclxuICAgICAgICAvLyB0aGluZyBhbmQgYnkgc3BsaXR0aW5nIHRoZXNlIGpvYnMgYW5kIGZsdXNoaW5nIHRoZW0gaW4gYmF0Y2hlcyB3ZSBwcmV2ZW50IGxheW91dCB0aHJhc2hpbmcuXHJcbiAgICAgICAgbGF5b3V0U3luYy5wcmVwYXJlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gVW5zZXQgdGhlIHRyYW5zZm9ybSBvZiBhbGwgbGF5b3V0VHJhbnNpdGlvbiBjb21wb25lbnRzIHNvIHdlIGNhbiBhY2N1cmF0ZWx5IG1lYXN1cmVcclxuICAgICAgICAgICAgLy8gdGhlIHRhcmdldCBib3VuZGluZyBib3hcclxuICAgICAgICAgICAgdHJhbnNmb3JtID0gZWxlbWVudC5zdHlsZS50cmFuc2Zvcm07XHJcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUudHJhbnNmb3JtID0gXCJcIjtcclxuICAgICAgICB9KTtcclxuICAgICAgICBsYXlvdXRTeW5jLnJlYWQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBSZWFkIHRoZSB0YXJnZXQgVmlzdWFsSW5mbyBvZiBhbGwgbGF5b3V0VHJhbnNpdGlvbiBjb21wb25lbnRzXHJcbiAgICAgICAgICAgIG5leHQgPSB7XHJcbiAgICAgICAgICAgICAgICBvZmZzZXQ6IG9mZnNldC5tZWFzdXJlKGVsZW1lbnQpLFxyXG4gICAgICAgICAgICAgICAgYm91bmRpbmdCb3g6IGJvdW5kaW5nQm94Lm1lYXN1cmUoZWxlbWVudCksXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHZhciBuZXh0UG9zaXRpb24gPSByZWFkUG9zaXRpb25TdHlsZShlbGVtZW50KTtcclxuICAgICAgICAgICAgY29tcGFyZSA9IGdldExheW91dFR5cGUocG9zaXRpb25TdHlsZSwgbmV4dFBvc2l0aW9uLCBpc1Bvc2l0aW9uT25seSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbGF5b3V0U3luYy5yZW5kZXIoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBSZXZlcnNlIHRoZSBsYXlvdXQgZGVsdGEgb2YgYWxsIG5ld2x5IGxhaWQtb3V0IGxheW91dFRyYW5zaXRpb24gY29tcG9uZW50cyBpbnRvIHRoZWlyXHJcbiAgICAgICAgICAgIC8vIHByZXYgdmlzdWFsIHN0YXRlIGFuZCB0aGVuIGFuaW1hdGUgdGhlbSBpbnRvIHRoZWlyIG5ldyBvbmUgdXNpbmcgdHJhbnNmb3Jtcy5cclxuICAgICAgICAgICAgdmFyIHByZXZMYXlvdXQgPSBjb21wYXJlLmdldExheW91dChwcmV2KTtcclxuICAgICAgICAgICAgdmFyIG5leHRMYXlvdXQgPSBjb21wYXJlLmdldExheW91dChuZXh0KTtcclxuICAgICAgICAgICAgdmFyIGRlbHRhID0gY2FsY0RlbHRhKHByZXZMYXlvdXQsIG5leHRMYXlvdXQpO1xyXG4gICAgICAgICAgICB2YXIgaGFzQW55Q2hhbmdlZCA9IGRlbHRhLnggfHwgZGVsdGEueSB8fCBkZWx0YS53aWR0aCB8fCBkZWx0YS5oZWlnaHQ7XHJcbiAgICAgICAgICAgIGlmICghaGFzQW55Q2hhbmdlZCkge1xyXG4gICAgICAgICAgICAgICAgLy8gSWYgbGF5b3V0IGhhc24ndCBjaGFuZ2VkLCByZWFwcGx5IHRoZSB0cmFuc2Zvcm0gYW5kIGdldCBvdXQgb2YgaGVyZS5cclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybSAmJiAoZWxlbWVudC5zdHlsZS50cmFuc2Zvcm0gPSB0cmFuc2Zvcm0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHN0eWxlcihlbGVtZW50KS5zZXQoe1xyXG4gICAgICAgICAgICAgICAgb3JpZ2luWDogZGVsdGEub3JpZ2luWCxcclxuICAgICAgICAgICAgICAgIG9yaWdpblk6IGRlbHRhLm9yaWdpblksXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBzeW5jUmVuZGVyU2Vzc2lvbi5vcGVuKCk7XHJcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSB7fTtcclxuICAgICAgICAgICAgdmFyIHRyYW5zaXRpb24gPSB7fTtcclxuICAgICAgICAgICAgdmFyIHRyYW5zaXRpb25EZWZpbml0aW9uID0gaXNSZXNvbHZlcihsYXlvdXRUcmFuc2l0aW9uKVxyXG4gICAgICAgICAgICAgICAgPyBsYXlvdXRUcmFuc2l0aW9uKHsgZGVsdGE6IGRlbHRhIH0pXHJcbiAgICAgICAgICAgICAgICA6IGxheW91dFRyYW5zaXRpb247XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIG1ha2VUcmFuc2l0aW9uKGxheW91dEtleSwgdHJhbnNmb3JtS2V5LCB0YXJnZXRWYWx1ZSwgdmlzdWFsT3JpZ2luKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGlzIGRpbWVuc2lvbiBoYXNuJ3QgY2hhbmdlZCwgZWFybHkgcmV0dXJuXHJcbiAgICAgICAgICAgICAgICB2YXIgZGVsdGFLZXkgPSBpc1NpemVLZXkobGF5b3V0S2V5KSA/IGxheW91dEtleSA6IHRyYW5zZm9ybUtleTtcclxuICAgICAgICAgICAgICAgIGlmICghZGVsdGFbZGVsdGFLZXldKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIHZhciBiYXNlVHJhbnNpdGlvbiA9IHR5cGVvZiB0cmFuc2l0aW9uRGVmaW5pdGlvbiA9PT0gXCJib29sZWFuXCJcclxuICAgICAgICAgICAgICAgICAgICA/IF9fYXNzaWduKHt9LCBnZXREZWZhdWx0TGF5b3V0VHJhbnNpdGlvbihpc1Bvc2l0aW9uT25seSkpIDogdHJhbnNpdGlvbkRlZmluaXRpb247XHJcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSB2YWx1ZXMuZ2V0KHRyYW5zZm9ybUtleSwgdGFyZ2V0VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHZlbG9jaXR5ID0gdmFsdWUuZ2V0VmVsb2NpdHkoKTtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb25bdHJhbnNmb3JtS2V5XSA9IGJhc2VUcmFuc2l0aW9uW3RyYW5zZm9ybUtleV1cclxuICAgICAgICAgICAgICAgICAgICA/IF9fYXNzaWduKHt9LCBiYXNlVHJhbnNpdGlvblt0cmFuc2Zvcm1LZXldKSA6IF9fYXNzaWduKHt9LCBiYXNlVHJhbnNpdGlvbik7XHJcbiAgICAgICAgICAgICAgICBpZiAodHJhbnNpdGlvblt0cmFuc2Zvcm1LZXldLnZlbG9jaXR5ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uW3RyYW5zZm9ybUtleV0udmVsb2NpdHkgPSB2ZWxvY2l0eSB8fCAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gVGhlIHRhcmdldCB2YWx1ZSBvZiBhbGwgdHJhbnNmb3JtcyBpcyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGF0IHByb3AgKGllIHggPSAwLCBzY2FsZVggPSAxKVxyXG4gICAgICAgICAgICAgICAgLy8gVGhpcyBpcyBiZWNhdXNlIHdlJ3JlIGludmVydGluZyB0aGUgbGF5b3V0IGNoYW5nZSB3aXRoIGB0cmFuc2Zvcm1gIGFuZCB0aGVuIGFuaW1hdGluZyB0byBgdHJhbnNmb3JtOiBub25lYFxyXG4gICAgICAgICAgICAgICAgdGFyZ2V0W3RyYW5zZm9ybUtleV0gPSB0YXJnZXRWYWx1ZTtcclxuICAgICAgICAgICAgICAgIHZhciBvZmZzZXRUb0FwcGx5ID0gIWlzU2l6ZUtleShsYXlvdXRLZXkpICYmIGNvbXBhcmUgPT09IG9mZnNldFxyXG4gICAgICAgICAgICAgICAgICAgID8gdmFsdWUuZ2V0KClcclxuICAgICAgICAgICAgICAgICAgICA6IDA7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZS5zZXQodmlzdWFsT3JpZ2luICsgb2Zmc2V0VG9BcHBseSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbWFrZVRyYW5zaXRpb24oXCJsZWZ0XCIsIFwieFwiLCAwLCBkZWx0YS54KTtcclxuICAgICAgICAgICAgbWFrZVRyYW5zaXRpb24oXCJ0b3BcIiwgXCJ5XCIsIDAsIGRlbHRhLnkpO1xyXG4gICAgICAgICAgICBpZiAoIWlzUG9zaXRpb25Pbmx5KSB7XHJcbiAgICAgICAgICAgICAgICBtYWtlVHJhbnNpdGlvbihcIndpZHRoXCIsIFwic2NhbGVYXCIsIDEsIHByZXYuYm91bmRpbmdCb3gud2lkdGggLyBuZXh0LmJvdW5kaW5nQm94LndpZHRoKTtcclxuICAgICAgICAgICAgICAgIG1ha2VUcmFuc2l0aW9uKFwiaGVpZ2h0XCIsIFwic2NhbGVZXCIsIDEsIHByZXYuYm91bmRpbmdCb3guaGVpZ2h0IC8gbmV4dC5ib3VuZGluZ0JveC5oZWlnaHQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRhcmdldC50cmFuc2l0aW9uID0gdHJhbnNpdGlvbjtcclxuICAgICAgICAgICAgLy8gT25seSBzdGFydCB0aGUgdHJhbnNpdGlvbiBpZiBgdHJhbnNpdGlvbkRlZmluaXRpb25gIGlzbid0IGBmYWxzZWAuIE90aGVyd2lzZSB3ZSB3YW50XHJcbiAgICAgICAgICAgIC8vIHRvIGxlYXZlIHRoZSB2YWx1ZXMgaW4gdGhlaXIgbmV3bHktaW52ZXJ0ZWQgc3RhdGUgYW5kIGxldCB0aGUgdXNlciBjb3BlIHdpdGggdGhlIHJlc3QuXHJcbiAgICAgICAgICAgIHRyYW5zaXRpb25EZWZpbml0aW9uICYmIGNvbnRyb2xzLnN0YXJ0KHRhcmdldCk7XHJcbiAgICAgICAgICAgIC8vIEZvcmNlIGEgcmVuZGVyIHRvIGVuc3VyZSB0aGVyZSdzIG5vIHZpc3VhbCBmbGlja2VyaW5nXHJcbiAgICAgICAgICAgIHN5bmNSZW5kZXJTZXNzaW9uLmZsdXNoKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9O1xyXG4gICAgTGF5b3V0QW5pbWF0aW9uLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGF5b3V0U3luYy5mbHVzaCgpO1xyXG4gICAgfTtcclxuICAgIExheW91dEFuaW1hdGlvbi5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfTtcclxuICAgIExheW91dEFuaW1hdGlvbi5jb250ZXh0VHlwZSA9IFN5bmNMYXlvdXRDb250ZXh0O1xyXG4gICAgcmV0dXJuIExheW91dEFuaW1hdGlvbjtcclxufShDb21wb25lbnQpKTtcclxudmFyIExheW91dCA9IHtcclxuICAgIGtleTogXCJsYXlvdXRcIixcclxuICAgIHNob3VsZFJlbmRlcjogZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgdmFyIHBvc2l0aW9uVHJhbnNpdGlvbiA9IF9hLnBvc2l0aW9uVHJhbnNpdGlvbiwgbGF5b3V0VHJhbnNpdGlvbiA9IF9hLmxheW91dFRyYW5zaXRpb247XHJcbiAgICAgICAgaW52YXJpYW50KCEocG9zaXRpb25UcmFuc2l0aW9uICYmIGxheW91dFRyYW5zaXRpb24pLCBcIkRvbid0IHNldCBib3RoIHBvc2l0aW9uVHJhbnNpdGlvbiBhbmQgbGF5b3V0VHJhbnNpdGlvbiBvbiB0aGUgc2FtZSBjb21wb25lbnRcIik7XHJcbiAgICAgICAgcmV0dXJuICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmXHJcbiAgICAgICAgICAgICEhKHBvc2l0aW9uVHJhbnNpdGlvbiB8fCBsYXlvdXRUcmFuc2l0aW9uKSk7XHJcbiAgICB9LFxyXG4gICAgQ29tcG9uZW50OiBMYXlvdXRBbmltYXRpb24sXHJcbn07XG5cbi8qKlxyXG4gKiBBIGxpc3Qgb2YgYWxsIHZhbGlkIE1vdGlvblByb3BzXHJcbiAqXHJcbiAqIEBpbnRlcm5hbHJlbWFya3NcclxuICogVGhpcyBkb2Vzbid0IHRocm93IGlmIGEgYE1vdGlvblByb3BgIG5hbWUgaXMgbWlzc2luZyAtIGl0IHNob3VsZC5cclxuICovXHJcbnZhciB2YWxpZE1vdGlvblByb3BzID0gbmV3IFNldChbXHJcbiAgICBcImluaXRpYWxcIixcclxuICAgIFwiYW5pbWF0ZVwiLFxyXG4gICAgXCJleGl0XCIsXHJcbiAgICBcInN0eWxlXCIsXHJcbiAgICBcInZhcmlhbnRzXCIsXHJcbiAgICBcInRyYW5zaXRpb25cIixcclxuICAgIFwidHJhbnNmb3JtVGVtcGxhdGVcIixcclxuICAgIFwidHJhbnNmb3JtVmFsdWVzXCIsXHJcbiAgICBcImN1c3RvbVwiLFxyXG4gICAgXCJpbmhlcml0XCIsXHJcbiAgICBcInN0YXRpY1wiLFxyXG4gICAgXCJwb3NpdGlvblRyYW5zaXRpb25cIixcclxuICAgIFwibGF5b3V0VHJhbnNpdGlvblwiLFxyXG4gICAgXCJvbkFuaW1hdGlvblN0YXJ0XCIsXHJcbiAgICBcIm9uQW5pbWF0aW9uQ29tcGxldGVcIixcclxuICAgIFwib25VcGRhdGVcIixcclxuICAgIFwib25EcmFnU3RhcnRcIixcclxuICAgIFwib25EcmFnXCIsXHJcbiAgICBcIm9uRHJhZ0VuZFwiLFxyXG4gICAgXCJvbkRpcmVjdGlvbkxvY2tcIixcclxuICAgIFwib25EcmFnVHJhbnNpdGlvbkVuZFwiLFxyXG4gICAgXCJkcmFnXCIsXHJcbiAgICBcImRyYWdDb250cm9sc1wiLFxyXG4gICAgXCJkcmFnTGlzdGVuZXJcIixcclxuICAgIFwiZHJhZ0NvbnN0cmFpbnRzXCIsXHJcbiAgICBcImRyYWdEaXJlY3Rpb25Mb2NrXCIsXHJcbiAgICBcImRyYWdFbGFzdGljXCIsXHJcbiAgICBcImRyYWdNb21lbnR1bVwiLFxyXG4gICAgXCJkcmFnUHJvcGFnYXRpb25cIixcclxuICAgIFwiZHJhZ1RyYW5zaXRpb25cIixcclxuICAgIFwiX2RyYWdWYWx1ZVhcIixcclxuICAgIFwiX2RyYWdWYWx1ZVlcIixcclxuICAgIFwiX2RyYWdUcmFuc2l0aW9uQ29udHJvbHNcIixcclxuICAgIFwiZHJhZ09yaWdpblhcIixcclxuICAgIFwiZHJhZ09yaWdpbllcIixcclxuICAgIFwib25QYW5cIixcclxuICAgIFwib25QYW5TdGFydFwiLFxyXG4gICAgXCJvblBhbkVuZFwiLFxyXG4gICAgXCJvblBhblNlc3Npb25TdGFydFwiLFxyXG4gICAgXCJvblRhcFwiLFxyXG4gICAgXCJvblRhcFN0YXJ0XCIsXHJcbiAgICBcIm9uVGFwQ2FuY2VsXCIsXHJcbiAgICBcIndoaWxlSG92ZXJcIixcclxuICAgIFwid2hpbGVUYXBcIixcclxuICAgIFwib25Ib3ZlckVuZFwiLFxyXG4gICAgXCJvbkhvdmVyU3RhcnRcIixcclxuXSk7XHJcbi8qKlxyXG4gKiBDaGVjayB3aGV0aGVyIGEgcHJvcCBuYW1lIGlzIGEgdmFsaWQgYE1vdGlvblByb3BgIGtleS5cclxuICpcclxuICogQHBhcmFtIGtleSAtIE5hbWUgb2YgdGhlIHByb3BlcnR5IHRvIGNoZWNrXHJcbiAqIEByZXR1cm5zIGB0cnVlYCBpcyBrZXkgaXMgYSB2YWxpZCBgTW90aW9uUHJvcGAuXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmZ1bmN0aW9uIGlzVmFsaWRNb3Rpb25Qcm9wKGtleSkge1xyXG4gICAgcmV0dXJuIHZhbGlkTW90aW9uUHJvcHMuaGFzKGtleSk7XHJcbn1cblxudmFyIEFuaW1hdGVQcm9wVHlwZTtcclxuKGZ1bmN0aW9uIChBbmltYXRlUHJvcFR5cGUpIHtcclxuICAgIEFuaW1hdGVQcm9wVHlwZVtcIlRhcmdldFwiXSA9IFwiVGFyZ2V0XCI7XHJcbiAgICBBbmltYXRlUHJvcFR5cGVbXCJWYXJpYW50TGFiZWxcIl0gPSBcIlZhcmlhbnRMYWJlbFwiO1xyXG4gICAgQW5pbWF0ZVByb3BUeXBlW1wiQW5pbWF0aW9uU3Vic2NyaXB0aW9uXCJdID0gXCJBbmltYXRpb25TdWJzY3JpcHRpb25cIjtcclxufSkoQW5pbWF0ZVByb3BUeXBlIHx8IChBbmltYXRlUHJvcFR5cGUgPSB7fSkpO1xuXG5mdW5jdGlvbiBzaGFsbG93Q29tcGFyZShuZXh0LCBwcmV2KSB7XHJcbiAgICBpZiAocHJldiA9PT0gbnVsbClcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB2YXIgcHJldkxlbmd0aCA9IHByZXYubGVuZ3RoO1xyXG4gICAgaWYgKHByZXZMZW5ndGggIT09IG5leHQubGVuZ3RoKVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJldkxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKHByZXZbaV0gIT09IG5leHRbaV0pXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG59XG5cbnZhciBoYXNVcGRhdGVkID0gZnVuY3Rpb24gKHByZXYsIG5leHQpIHtcclxuICAgIHJldHVybiAobmV4dCAhPT0gdW5kZWZpbmVkICYmXHJcbiAgICAgICAgKEFycmF5LmlzQXJyYXkocHJldikgJiYgQXJyYXkuaXNBcnJheShuZXh0KVxyXG4gICAgICAgICAgICA/ICFzaGFsbG93Q29tcGFyZShuZXh0LCBwcmV2KVxyXG4gICAgICAgICAgICA6IHByZXYgIT09IG5leHQpKTtcclxufTtcclxuZnVuY3Rpb24gdGFyZ2V0V2l0aG91dFRyYW5zaXRpb24oX2EsIG1lcmdlVHJhbnNpdGlvbkVuZCkge1xyXG4gICAgaWYgKG1lcmdlVHJhbnNpdGlvbkVuZCA9PT0gdm9pZCAwKSB7IG1lcmdlVHJhbnNpdGlvbkVuZCA9IGZhbHNlOyB9XHJcbiAgICB2YXIgdHJhbnNpdGlvbiA9IF9hLnRyYW5zaXRpb24sIHRyYW5zaXRpb25FbmQgPSBfYS50cmFuc2l0aW9uRW5kLCB0YXJnZXQgPSBfX3Jlc3QoX2EsIFtcInRyYW5zaXRpb25cIiwgXCJ0cmFuc2l0aW9uRW5kXCJdKTtcclxuICAgIHJldHVybiBtZXJnZVRyYW5zaXRpb25FbmRcclxuICAgICAgICA/IF9fYXNzaWduKF9fYXNzaWduKHt9LCB0YXJnZXQpLCB0cmFuc2l0aW9uRW5kKVxyXG4gICAgICAgIDogdGFyZ2V0O1xyXG59XHJcbi8qKlxyXG4gKiBIYW5kbGUgdGhlIGBhbmltYXRlYCBwcm9wIHdoZW4gaXRzIGFuIG9iamVjdCBvZiB2YWx1ZXMsIGllOlxyXG4gKlxyXG4gKiBgYGBqc3hcclxuICogPG1vdGlvbi5kaXYgYW5pbWF0ZT17eyBvcGFjaXR5OiAxIH19IC8+XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAaW50ZXJuYWxyZW1hcmtzXHJcbiAqIEl0IG1pZ2h0IGJlIHdvcnRoIGNvbnNvbGlkYXRpbmcgdGhpcyB3aXRoIGB1c2UtdmFyaWFudHNgXHJcbiAqXHJcbiAqIGBgYGpzeFxyXG4gKiA8bW90aW9uLmRpdiBhbmltYXRlPVwidmlzaWJsZVwiIC8+XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcGFyYW0gdGFyZ2V0XHJcbiAqIEBwYXJhbSBjb250cm9sc1xyXG4gKiBAcGFyYW0gdmFsdWVzXHJcbiAqIEBwYXJhbSB0cmFuc2l0aW9uXHJcbiAqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuZnVuY3Rpb24gdXNlQW5pbWF0ZVByb3AodGFyZ2V0QW5kVHJhbnNpdGlvbiwgY29udHJvbHMsIHZhbHVlcywgZGVmYXVsdFRyYW5zaXRpb24pIHtcclxuICAgIHZhciBpc0luaXRpYWxSZW5kZXIgPSB1c2VSZWYodHJ1ZSk7XHJcbiAgICB2YXIgcHJldlZhbHVlcyA9IHVzZVJlZihudWxsKTtcclxuICAgIGlmICghcHJldlZhbHVlcy5jdXJyZW50KSB7XHJcbiAgICAgICAgcHJldlZhbHVlcy5jdXJyZW50ID0gdGFyZ2V0V2l0aG91dFRyYW5zaXRpb24odGFyZ2V0QW5kVHJhbnNpdGlvbiwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB0YXJnZXRUb0FuaW1hdGUgPSB7fTtcclxuICAgICAgICAvLyBUaGVzZSBhcmUgdGhlIHZhbHVlcyB3ZSdyZSBhY3R1YWxseSBhbmltYXRpbmdcclxuICAgICAgICB2YXIgYW5pbWF0aW5nVGFyZ2V0ID0gdGFyZ2V0V2l0aG91dFRyYW5zaXRpb24odGFyZ2V0QW5kVHJhbnNpdGlvbik7XHJcbiAgICAgICAgLy8gVGhpcyBpcyB0aGUgdGFyZ2V0IGFzIGl0J2xsIGJlIG9uY2UgdHJhbnNpdGlvbkVuZCB2YWx1ZXMgYXJlIGFwcGxpZWRcclxuICAgICAgICB2YXIgZmluYWxUYXJnZXQgPSB0YXJnZXRXaXRob3V0VHJhbnNpdGlvbih0YXJnZXRBbmRUcmFuc2l0aW9uLCB0cnVlKTtcclxuICAgICAgICAvLyBEZXRlY3Qgd2hpY2ggdmFsdWVzIGhhdmUgY2hhbmdlZCBiZXR3ZWVuIHJlbmRlcnNcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gYW5pbWF0aW5nVGFyZ2V0KSB7XHJcbiAgICAgICAgICAgIC8vIFRoaXMgdmFsdWUgc2hvdWxkIGFuaW1hdGUgb24gbW91bnQgaWYgdGhpcyB2YWx1ZSBkb2Vzbid0IGFscmVhZHkgZXhpc3QgKHdhc24ndFxyXG4gICAgICAgICAgICAvLyBkZWZpbmVkIGluIGBzdHlsZWAgb3IgYGluaXRpYWxgKSBvciBpZiBpdCBkb2VzIGV4aXN0IGFuZCBpdCdzIGFscmVhZHkgY2hhbmdlZC5cclxuICAgICAgICAgICAgdmFyIHNob3VsZEFuaW1hdGVPbk1vdW50ID0gaXNJbml0aWFsUmVuZGVyLmN1cnJlbnQgJiZcclxuICAgICAgICAgICAgICAgICghdmFsdWVzLmhhcyhrZXkpIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzLmdldChrZXkpLmdldCgpICE9PSBmaW5hbFRhcmdldFtrZXldKTtcclxuICAgICAgICAgICAgLy8gSWYgdGhpcyB2YWx1ZSBoYXMgdXBkYXRlZCBiZXR3ZWVuIHJlbmRlcnMgb3IgaXQncyB3ZSdyZSBhbmltYXRpbmcgdGhpcyB2YWx1ZSBvbiBtb3VudCxcclxuICAgICAgICAgICAgLy8gYWRkIGl0IHRvIHRoZSBhbmltYXRlIHRhcmdldC5cclxuICAgICAgICAgICAgdmFyIGlzVmFsaWRWYWx1ZSA9IGZpbmFsVGFyZ2V0W2tleV0gIT09IG51bGw7XHJcbiAgICAgICAgICAgIHZhciB2YWx1ZUhhc1VwZGF0ZWQgPSBoYXNVcGRhdGVkKHByZXZWYWx1ZXMuY3VycmVudFtrZXldLCBmaW5hbFRhcmdldFtrZXldKTtcclxuICAgICAgICAgICAgaWYgKGlzVmFsaWRWYWx1ZSAmJiAodmFsdWVIYXNVcGRhdGVkIHx8IHNob3VsZEFuaW1hdGVPbk1vdW50KSkge1xyXG4gICAgICAgICAgICAgICAgdGFyZ2V0VG9BbmltYXRlW2tleV0gPSBhbmltYXRpbmdUYXJnZXRba2V5XTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpc0luaXRpYWxSZW5kZXIuY3VycmVudCA9IGZhbHNlO1xyXG4gICAgICAgIHByZXZWYWx1ZXMuY3VycmVudCA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBwcmV2VmFsdWVzLmN1cnJlbnQpLCBmaW5hbFRhcmdldCk7XHJcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKHRhcmdldFRvQW5pbWF0ZSkubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGNvbnRyb2xzLnN0YXJ0KF9fYXNzaWduKF9fYXNzaWduKHt9LCB0YXJnZXRUb0FuaW1hdGUpLCB7IHRyYW5zaXRpb246IHRhcmdldEFuZFRyYW5zaXRpb24udHJhbnNpdGlvbiB8fCBkZWZhdWx0VHJhbnNpdGlvbiwgdHJhbnNpdGlvbkVuZDogdGFyZ2V0QW5kVHJhbnNpdGlvbi50cmFuc2l0aW9uRW5kIH0pKTtcclxuICAgICAgICB9XHJcbiAgICB9LCBbdGFyZ2V0QW5kVHJhbnNpdGlvbl0pO1xyXG59XG5cbnZhciBsYWJlbHNUb0FycmF5ID0gZnVuY3Rpb24gKGxhYmVsKSB7XHJcbiAgICBpZiAoIWxhYmVsKSB7XHJcbiAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkobGFiZWwpKSB7XHJcbiAgICAgICAgcmV0dXJuIGxhYmVsO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFtsYWJlbF07XHJcbn07XHJcbnZhciByZXNvbHZlVmFyaWFudExhYmVscyA9IGZ1bmN0aW9uICh2YXJpYW50KSB7XHJcbiAgICB2YXIgdW5yZXNvbHZlZFZhcmlhbnQgPSB2YXJpYW50IGluc3RhbmNlb2YgTW90aW9uVmFsdWUgPyB2YXJpYW50LmdldCgpIDogdmFyaWFudDtcclxuICAgIHJldHVybiBBcnJheS5mcm9tKG5ldyBTZXQobGFiZWxzVG9BcnJheSh1bnJlc29sdmVkVmFyaWFudCkpKTtcclxufTtcclxuLyoqXHJcbiAqIEhvb2tzIGluIFJlYWN0IHNvbWV0aW1lcyBhY2NlcHQgYSBkZXBlbmRlbmN5IGFycmF5IGFzIHRoZWlyIGZpbmFsIGFyZ3VtZW50LiAoaWUgdXNlRWZmZWN0L3VzZU1lbW8pXHJcbiAqIFdoZW4gdmFsdWVzIGluIHRoaXMgYXJyYXkgY2hhbmdlLCBSZWFjdCByZS1ydW5zIHRoZSBkZXBlbmRlbmN5LiBIb3dldmVyIGlmIHRoZSBhcnJheVxyXG4gKiBjb250YWlucyBhIHZhcmlhYmxlIG51bWJlciBvZiBpdGVtcywgUmVhY3QgdGhyb3dzIGFuIGVycm9yLlxyXG4gKi9cclxudmFyIGFzRGVwZW5kZW5jeUxpc3QgPSBmdW5jdGlvbiAobGlzdCkgeyByZXR1cm4gW1xyXG4gICAgbGlzdC5qb2luKFwiLFwiKSxcclxuXTsgfTtcblxudmFyIGhhc1ZhcmlhbnRDaGFuZ2VkID0gZnVuY3Rpb24gKG9sZFZhcmlhbnQsIG5ld1ZhcmlhbnQpIHtcclxuICAgIHJldHVybiBvbGRWYXJpYW50LmpvaW4oXCIsXCIpICE9PSBuZXdWYXJpYW50LmpvaW4oXCIsXCIpO1xyXG59O1xyXG4vKipcclxuICogSGFuZGxlIHZhcmlhbnRzIGFuZCB0aGUgYGFuaW1hdGVgIHByb3Agd2hlbiBpdHMgc2V0IGFzIHZhcmlhbnQgbGFiZWxzLlxyXG4gKlxyXG4gKiBAcGFyYW0gaW5pdGlhbCAtIEluaXRpYWwgdmFyaWFudChzKVxyXG4gKiBAcGFyYW0gYW5pbWF0ZSAtIFZhcmlhbnQocykgdG8gYW5pbWF0ZSB0b1xyXG4gKiBAcGFyYW0gaW5oZXJpdCAtIGB0cnVlYCBpcyBpbmhlcml0aW5nIGFuaW1hdGlvbnMgZnJvbSBwYXJlbnRcclxuICogQHBhcmFtIGNvbnRyb2xzIC0gQW5pbWF0aW9uIGNvbnRyb2xzXHJcbiAqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuZnVuY3Rpb24gdXNlVmFyaWFudHMoaW5pdGlhbCwgYW5pbWF0ZSwgaW5oZXJpdCwgY29udHJvbHMpIHtcclxuICAgIHZhciB0YXJnZXRWYXJpYW50cyA9IHJlc29sdmVWYXJpYW50TGFiZWxzKGFuaW1hdGUpO1xyXG4gICAgdmFyIGNvbnRleHQgPSB1c2VDb250ZXh0KE1vdGlvbkNvbnRleHQpO1xyXG4gICAgdmFyIHBhcmVudEFscmVhZHlNb3VudGVkID0gY29udGV4dC5oYXNNb3VudGVkICYmIGNvbnRleHQuaGFzTW91bnRlZC5jdXJyZW50O1xyXG4gICAgdmFyIGhhc01vdW50ZWQgPSB1c2VSZWYoZmFsc2UpO1xyXG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgc2hvdWxkQW5pbWF0ZSA9IGZhbHNlO1xyXG4gICAgICAgIGlmIChpbmhlcml0KSB7XHJcbiAgICAgICAgICAgIC8vIElmIHdlJ3JlIGluaGVyaXRpbmcgdmFyaWFudCBjaGFuZ2VzIGFuZCB0aGUgcGFyZW50IGhhcyBhbHJlYWR5XHJcbiAgICAgICAgICAgIC8vIG1vdW50ZWQgd2hlbiB0aGlzIGNvbXBvbmVudCBsb2Fkcywgd2UgbmVlZCB0byBtYW51YWxseSB0cmlnZ2VyXHJcbiAgICAgICAgICAgIC8vIHRoaXMgYW5pbWF0aW9uLlxyXG4gICAgICAgICAgICBzaG91bGRBbmltYXRlID0gISFwYXJlbnRBbHJlYWR5TW91bnRlZDtcclxuICAgICAgICAgICAgdGFyZ2V0VmFyaWFudHMgPSByZXNvbHZlVmFyaWFudExhYmVscyhjb250ZXh0LmFuaW1hdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgc2hvdWxkQW5pbWF0ZSA9XHJcbiAgICAgICAgICAgICAgICBoYXNNb3VudGVkLmN1cnJlbnQgfHxcclxuICAgICAgICAgICAgICAgICAgICBoYXNWYXJpYW50Q2hhbmdlZChyZXNvbHZlVmFyaWFudExhYmVscyhpbml0aWFsKSwgdGFyZ2V0VmFyaWFudHMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzaG91bGRBbmltYXRlICYmIGNvbnRyb2xzLnN0YXJ0KHRhcmdldFZhcmlhbnRzKTtcclxuICAgICAgICBoYXNNb3VudGVkLmN1cnJlbnQgPSB0cnVlO1xyXG4gICAgfSwgYXNEZXBlbmRlbmN5TGlzdCh0YXJnZXRWYXJpYW50cykpO1xyXG59XG5cbi8qKlxyXG4gKiBgdXNlQW5pbWF0aW9uR3JvdXBTdWJzY3JpcHRpb25gIGFsbG93cyBhIGNvbXBvbmVudCB0byBzdWJzY3JpYmUgdG8gYW5cclxuICogZXh0ZXJuYWxseS1jcmVhdGVkIGBBbmltYXRpb25Db250cm9sc2AsIGNyZWF0ZWQgYnkgdGhlIGB1c2VBbmltYXRpb25gIGhvb2suXHJcbiAqXHJcbiAqIEBwYXJhbSBhbmltYXRpb25cclxuICogQHBhcmFtIGNvbnRyb2xzXHJcbiAqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuZnVuY3Rpb24gdXNlQW5pbWF0aW9uR3JvdXBTdWJzY3JpcHRpb24oYW5pbWF0aW9uLCBjb250cm9scykge1xyXG4gICAgdmFyIHVuc3Vic2NyaWJlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7IHJldHVybiBhbmltYXRpb24uc3Vic2NyaWJlKGNvbnRyb2xzKTsgfSwgW1xyXG4gICAgICAgIGFuaW1hdGlvbixcclxuICAgIF0pO1xyXG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB1bnN1YnNjcmliZSAmJiB1bnN1YnNjcmliZSgpO1xyXG4gICAgfTsgfSwgW3Vuc3Vic2NyaWJlXSk7XHJcbn1cblxudmFyIF9hJDEsIF9iO1xyXG52YXIgQW5pbWF0ZVByb3BDb21wb25lbnRzID0gKF9hJDEgPSB7fSxcclxuICAgIF9hJDFbQW5pbWF0ZVByb3BUeXBlLlRhcmdldF0gPSBtYWtlUmVuZGVybGVzc0NvbXBvbmVudChmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICB2YXIgYW5pbWF0ZSA9IF9hLmFuaW1hdGUsIGNvbnRyb2xzID0gX2EuY29udHJvbHMsIHZhbHVlcyA9IF9hLnZhbHVlcywgdHJhbnNpdGlvbiA9IF9hLnRyYW5zaXRpb247XHJcbiAgICAgICAgcmV0dXJuIHVzZUFuaW1hdGVQcm9wKGFuaW1hdGUsIGNvbnRyb2xzLCB2YWx1ZXMsIHRyYW5zaXRpb24pO1xyXG4gICAgfSksXHJcbiAgICBfYSQxW0FuaW1hdGVQcm9wVHlwZS5WYXJpYW50TGFiZWxdID0gbWFrZVJlbmRlcmxlc3NDb21wb25lbnQoZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgdmFyIGFuaW1hdGUgPSBfYS5hbmltYXRlLCBfYiA9IF9hLmluaGVyaXQsIGluaGVyaXQgPSBfYiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9iLCBjb250cm9scyA9IF9hLmNvbnRyb2xzLCBpbml0aWFsID0gX2EuaW5pdGlhbDtcclxuICAgICAgICByZXR1cm4gdXNlVmFyaWFudHMoaW5pdGlhbCwgYW5pbWF0ZSwgaW5oZXJpdCwgY29udHJvbHMpO1xyXG4gICAgfSksXHJcbiAgICBfYSQxW0FuaW1hdGVQcm9wVHlwZS5BbmltYXRpb25TdWJzY3JpcHRpb25dID0gbWFrZVJlbmRlcmxlc3NDb21wb25lbnQoZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgdmFyIGFuaW1hdGUgPSBfYS5hbmltYXRlLCBjb250cm9scyA9IF9hLmNvbnRyb2xzO1xyXG4gICAgICAgIHJldHVybiB1c2VBbmltYXRpb25Hcm91cFN1YnNjcmlwdGlvbihhbmltYXRlLCBjb250cm9scyk7XHJcbiAgICB9KSxcclxuICAgIF9hJDEpO1xyXG52YXIgaXNWYXJpYW50TGFiZWwkMSA9IGZ1bmN0aW9uIChwcm9wKSB7XHJcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShwcm9wKSB8fCB0eXBlb2YgcHJvcCA9PT0gXCJzdHJpbmdcIjtcclxufTtcclxudmFyIGlzQW5pbWF0aW9uU3Vic2NyaXB0aW9uID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICB2YXIgYW5pbWF0ZSA9IF9hLmFuaW1hdGU7XHJcbiAgICByZXR1cm4gYW5pbWF0ZSBpbnN0YW5jZW9mIEFuaW1hdGlvbkNvbnRyb2xzO1xyXG59O1xyXG52YXIgYW5pbWF0aW9uUHJvcHMgPSBbXCJpbml0aWFsXCIsIFwiYW5pbWF0ZVwiLCBcIndoaWxlVGFwXCIsIFwid2hpbGVIb3ZlclwiXTtcclxudmFyIGFuaW1hdGVQcm9wVHlwZVRlc3RzID0gKF9iID0ge30sXHJcbiAgICBfYltBbmltYXRlUHJvcFR5cGUuVGFyZ2V0XSA9IGZ1bmN0aW9uIChwcm9wcykge1xyXG4gICAgICAgIHJldHVybiAocHJvcHMuYW5pbWF0ZSAhPT0gdW5kZWZpbmVkICYmXHJcbiAgICAgICAgICAgICFpc1ZhcmlhbnRMYWJlbCQxKHByb3BzLmFuaW1hdGUpICYmXHJcbiAgICAgICAgICAgICFpc0FuaW1hdGlvblN1YnNjcmlwdGlvbihwcm9wcykpO1xyXG4gICAgfSxcclxuICAgIF9iW0FuaW1hdGVQcm9wVHlwZS5WYXJpYW50TGFiZWxdID0gZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICAgICAgcmV0dXJuIChwcm9wcy52YXJpYW50cyAhPT0gdW5kZWZpbmVkIHx8XHJcbiAgICAgICAgICAgIGFuaW1hdGlvblByb3BzLnNvbWUoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gdHlwZW9mIHByb3BzW2tleV0gPT09IFwic3RyaW5nXCI7IH0pKTtcclxuICAgIH0sXHJcbiAgICBfYltBbmltYXRlUHJvcFR5cGUuQW5pbWF0aW9uU3Vic2NyaXB0aW9uXSA9IGlzQW5pbWF0aW9uU3Vic2NyaXB0aW9uLFxyXG4gICAgX2IpO1xyXG52YXIgZ2V0QW5pbWF0aW9uQ29tcG9uZW50ID0gZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICB2YXIgYW5pbWF0ZVByb3BUeXBlID0gdW5kZWZpbmVkO1xyXG4gICAgZm9yICh2YXIga2V5IGluIEFuaW1hdGVQcm9wVHlwZSkge1xyXG4gICAgICAgIGlmIChhbmltYXRlUHJvcFR5cGVUZXN0c1trZXldKHByb3BzKSkge1xyXG4gICAgICAgICAgICBhbmltYXRlUHJvcFR5cGUgPSBrZXk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFuaW1hdGVQcm9wVHlwZSA/IEFuaW1hdGVQcm9wQ29tcG9uZW50c1thbmltYXRlUHJvcFR5cGVdIDogdW5kZWZpbmVkO1xyXG59O1xuXG4vKipcclxuICogV2hlbiBhIGNvbXBvbmVudCBpcyB0aGUgY2hpbGQgb2YgYEFuaW1hdGVQcmVzZW5jZWAsIGl0IGNhbiB1c2UgYHVzZVByZXNlbmNlYFxyXG4gKiB0byBhY2Nlc3MgaW5mb3JtYXRpb24gYWJvdXQgd2hldGhlciBpdCdzIHN0aWxsIHByZXNlbnQgaW4gdGhlIFJlYWN0IHRyZWUuXHJcbiAqXHJcbiAqIGBgYGpzeFxyXG4gKiBpbXBvcnQgeyB1c2VQcmVzZW5jZSB9IGZyb20gXCJmcmFtZXItbW90aW9uXCJcclxuICpcclxuICogZXhwb3J0IGNvbnN0IENvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBbaXNQcmVzZW50LCBzYWZlVG9SZW1vdmVdID0gdXNlUHJlc2VuY2UoKVxyXG4gKlxyXG4gKiAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAqICAgICAhaXNQcmVzZW50IHNldFRpbWVvdXQoc2FmZVRvUmVtb3ZlLCAxMDAwKVxyXG4gKiAgIH0sIFtpc1ByZXNlbnRdKVxyXG4gKlxyXG4gKiAgIHJldHVybiA8ZGl2IC8+XHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIElmIGBpc1ByZXNlbnRgIGlzIGBmYWxzZWAsIGl0IG1lYW5zIHRoYXQgYSBjb21wb25lbnQgaGFzIGJlZW4gcmVtb3ZlZCB0aGUgdHJlZSwgYnV0XHJcbiAqIGBBbmltYXRlUHJlc2VuY2VgIHdvbid0IHJlYWxseSByZW1vdmUgaXQgdW50aWwgYHNhZmVUb1JlbW92ZWAgaGFzIGJlZW4gY2FsbGVkLlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VQcmVzZW5jZSgpIHtcclxuICAgIHZhciBjb250ZXh0ID0gdXNlQ29udGV4dChQcmVzZW5jZUNvbnRleHQpO1xyXG4gICAgaWYgKGNvbnRleHQgPT09IG51bGwpXHJcbiAgICAgICAgcmV0dXJuIFt0cnVlXTtcclxuICAgIHZhciBpc1ByZXNlbnQgPSBjb250ZXh0LmlzUHJlc2VudCwgb25FeGl0Q29tcGxldGUgPSBjb250ZXh0Lm9uRXhpdENvbXBsZXRlLCByZWdpc3RlciA9IGNvbnRleHQucmVnaXN0ZXI7XHJcbiAgICB1c2VFZmZlY3QocmVnaXN0ZXIsIFtdKTtcclxuICAgIHJldHVybiAhaXNQcmVzZW50ICYmIG9uRXhpdENvbXBsZXRlID8gW2ZhbHNlLCBvbkV4aXRDb21wbGV0ZV0gOiBbdHJ1ZV07XHJcbn1cblxudmFyIEV4aXQgPSB7XHJcbiAgICBrZXk6IFwiZXhpdFwiLFxyXG4gICAgc2hvdWxkUmVuZGVyOiBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuICEhcHJvcHMuZXhpdCAmJiAhY2hlY2tTaG91bGRJbmhlcml0VmFyaWFudChwcm9wcyk7IH0sXHJcbiAgICBDb21wb25lbnQ6IG1ha2VSZW5kZXJsZXNzQ29tcG9uZW50KGZ1bmN0aW9uIChwcm9wcykge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICB2YXIgYW5pbWF0ZSA9IHByb3BzLmFuaW1hdGUsIGNvbnRyb2xzID0gcHJvcHMuY29udHJvbHMsIGV4aXQgPSBwcm9wcy5leGl0O1xyXG4gICAgICAgIHZhciBfYiA9IHVzZVByZXNlbmNlKCksIGlzUHJlc2VudCA9IF9iWzBdLCBvbkV4aXRDb21wbGV0ZSA9IF9iWzFdO1xyXG4gICAgICAgIHZhciBwcmVzZW5jZUNvbnRleHQgPSB1c2VDb250ZXh0KFByZXNlbmNlQ29udGV4dCk7XHJcbiAgICAgICAgdmFyIGlzUGxheWluZ0V4aXRBbmltYXRpb24gPSB1c2VSZWYoZmFsc2UpO1xyXG4gICAgICAgIHZhciBjdXN0b20gPSAoKF9hID0gcHJlc2VuY2VDb250ZXh0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY3VzdG9tKSAhPT0gdW5kZWZpbmVkXHJcbiAgICAgICAgICAgID8gcHJlc2VuY2VDb250ZXh0LmN1c3RvbVxyXG4gICAgICAgICAgICA6IHByb3BzLmN1c3RvbTtcclxuICAgICAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoIWlzUHJlc2VudCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFpc1BsYXlpbmdFeGl0QW5pbWF0aW9uLmN1cnJlbnQgJiYgZXhpdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xzLnNldFByb3BzKF9fYXNzaWduKF9fYXNzaWduKHt9LCBwcm9wcyksIHsgY3VzdG9tOiBjdXN0b20gfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xzLnN0YXJ0KGV4aXQpLnRoZW4ob25FeGl0Q29tcGxldGUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaXNQbGF5aW5nRXhpdEFuaW1hdGlvbi5jdXJyZW50ID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChpc1BsYXlpbmdFeGl0QW5pbWF0aW9uLmN1cnJlbnQgJiZcclxuICAgICAgICAgICAgICAgIGFuaW1hdGUgJiZcclxuICAgICAgICAgICAgICAgICEoYW5pbWF0ZSBpbnN0YW5jZW9mIEFuaW1hdGlvbkNvbnRyb2xzKSkge1xyXG4gICAgICAgICAgICAgICAgY29udHJvbHMuc3RhcnQoYW5pbWF0ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGlzUHJlc2VudCkge1xyXG4gICAgICAgICAgICAgICAgaXNQbGF5aW5nRXhpdEFuaW1hdGlvbi5jdXJyZW50ID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCBbaXNQcmVzZW50XSk7XHJcbiAgICB9KSxcclxufTtcblxudmFyIGlzUHJvcFZhbGlkID0gZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gIWlzVmFsaWRNb3Rpb25Qcm9wKGtleSk7IH07XHJcbi8qKlxyXG4gKiBFbW90aW9uIGFuZCBTdHlsZWQgQ29tcG9uZW50cyBib3RoIGFsbG93IHVzZXJzIHRvIHBhc3MgdGhyb3VnaCBhcmJpdHJhcnkgcHJvcHMgdG8gdGhlaXIgY29tcG9uZW50c1xyXG4gKiB0byBkeW5hbWljYWxseSBnZW5lcmF0ZSBDU1MuIFRoZXkgYm90aCB1c2UgdGhlIGBAZW1vdGlvbi9pcy1wcm9wLXZhbGlkYCBwYWNrYWdlIHRvIGRldGVybWluZSB3aGljaFxyXG4gKiBvZiB0aGVzZSBzaG91bGQgYmUgcGFzc2VkIHRvIHRoZSB1bmRlcmx5aW5nIERPTSBub2RlLlxyXG4gKlxyXG4gKiBIb3dldmVyLCB3aGVuIHN0eWxpbmcgYSBNb3Rpb24gY29tcG9uZW50IGBzdHlsZWQobW90aW9uLmRpdilgLCBib3RoIHBhY2thZ2VzIHBhc3MgdGhyb3VnaCAqYWxsKiBwcm9wc1xyXG4gKiBhcyBpdCdzIHNlZW4gYXMgYW4gYXJiaXRyYXJ5IGNvbXBvbmVudCByYXRoZXIgdGhhbiBhIERPTSBub2RlLiBNb3Rpb24gb25seSBhbGxvd3MgYXJiaXRyYXJ5IHByb3BzXHJcbiAqIHBhc3NlZCB0aHJvdWdoIHRoZSBgY3VzdG9tYCBwcm9wIHNvIGl0IGRvZXNuJ3QgKm5lZWQqIHRoZSBwYXlsb2FkIG9yIGNvbXB1dGF0aW9uYWwgb3ZlcmhlYWQgb2ZcclxuICogYEBlbW90aW9uL2lzLXByb3AtdmFsaWRgLCBob3dldmVyIHRvIGZpeCB0aGlzIHByb2JsZW0gd2UgbmVlZCB0byB1c2UgaXQuXHJcbiAqXHJcbiAqIEJ5IG1ha2luZyBpdCBhbiBvcHRpb25hbERlcGVuZGVuY3kgd2UgY2FuIG9mZmVyIHRoaXMgZnVuY3Rpb25hbGl0eSBvbmx5IGluIHRoZSBzaXR1YXRpb25zIHdoZXJlIGl0J3NcclxuICogYWN0dWFsbHkgcmVxdWlyZWQuXHJcbiAqL1xyXG50cnkge1xyXG4gICAgdmFyIGVtb3Rpb25Jc1Byb3BWYWxpZF8xID0gcmVxdWlyZShcIkBlbW90aW9uL2lzLXByb3AtdmFsaWRcIikuZGVmYXVsdDtcclxuICAgIGlzUHJvcFZhbGlkID0gZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgIC8vIEhhbmRsZSBldmVudHMgZXhwbGljaXRseSBhcyBFbW90aW9uIHZhbGlkYXRlcyB0aGVtIGFsbCBhcyB0cnVlXHJcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcclxuICAgICAgICAgICAgcmV0dXJuICFpc1ZhbGlkTW90aW9uUHJvcChrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGVtb3Rpb25Jc1Byb3BWYWxpZF8xKGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufVxyXG5jYXRjaCAoX2EpIHtcclxuICAgIC8vIFdlIGRvbid0IG5lZWQgdG8gYWN0dWFsbHkgZG8gYW55dGhpbmcgaGVyZSAtIHRoZSBmYWxsYmFjayBpcyB0aGUgZXhpc3RpbmcgYGlzUHJvcFZhbGlkYC5cclxufVxyXG5mdW5jdGlvbiBmaWx0ZXJWYWxpZFByb3BzKHByb3BzKSB7XHJcbiAgICB2YXIgZG9tUHJvcHMgPSB7fTtcclxuICAgIGZvciAodmFyIGtleSBpbiBwcm9wcykge1xyXG4gICAgICAgIGlmIChpc1Byb3BWYWxpZChrZXkpKSB7XHJcbiAgICAgICAgICAgIGRvbVByb3BzW2tleV0gPSBwcm9wc1trZXldO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBkb21Qcm9wcztcclxufVxyXG52YXIgYnVpbGRIVE1MUHJvcHMgPSBmdW5jdGlvbiAodmFsdWVzLCBzdHlsZSwgaXNTdGF0aWMsIGlzRHJhZykge1xyXG4gICAgLy8gVGhlIGBhbnlgIGlzbid0IGlkZWFsIGJ1dCBpdCBpcyB0aGUgdHlwZSBvZiBjcmVhdGVFbGVtZW50IHByb3BzIGFyZ3VtZW50XHJcbiAgICB2YXIgcHJvcHMgPSB7XHJcbiAgICAgICAgc3R5bGU6IGJ1aWxkU3R5bGVBdHRyKHZhbHVlcywgc3R5bGUsIGlzU3RhdGljKSxcclxuICAgIH07XHJcbiAgICBpZiAoaXNEcmFnKSB7XHJcbiAgICAgICAgLy8gRGlzYWJsZSB0ZXh0IHNlbGVjdGlvblxyXG4gICAgICAgIHByb3BzLnN0eWxlLnVzZXJTZWxlY3QgPSBcIm5vbmVcIjtcclxuICAgICAgICAvLyBEaXNhYmxlIHRoZSBnaG9zdCBlbGVtZW50IHdoZW4gYSB1c2VyIGRyYWdzXHJcbiAgICAgICAgcHJvcHMuZHJhZ2dhYmxlID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcHJvcHM7XHJcbn07XHJcbnZhciBidWlsZFNWR1Byb3BzID0gZnVuY3Rpb24gKHZhbHVlcywgc3R5bGUpIHtcclxuICAgIHZhciBtb3Rpb25WYWx1ZVN0eWxlcyA9IHJlc29sdmVDdXJyZW50KHZhbHVlcyk7XHJcbiAgICB2YXIgcHJvcHMgPSBidWlsZFNWR0F0dHJzKG1vdGlvblZhbHVlU3R5bGVzLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGZhbHNlKTtcclxuICAgIHByb3BzLnN0eWxlID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0eWxlKSwgcHJvcHMuc3R5bGUpO1xyXG4gICAgcmV0dXJuIHByb3BzO1xyXG59O1xyXG52YXIgZnVuY3Rpb25hbGl0eUNvbXBvbmVudHMgPSBbTGF5b3V0LCBEcmFnLCBHZXN0dXJlcywgRXhpdF07XHJcbnZhciBudW1GdW5jdGlvbmFsaXR5Q29tcG9uZW50cyA9IGZ1bmN0aW9uYWxpdHlDb21wb25lbnRzLmxlbmd0aDtcclxuLyoqXHJcbiAqIENyZWF0ZSBhIGNvbmZpZ3VyYXRpb24gZm9yIGBtb3Rpb25gIGNvbXBvbmVudHMgdGhhdCBwcm92aWRlcyBET00tc3BlY2lmaWMgZnVuY3Rpb25hbGl0eS5cclxuICpcclxuICogQGludGVybmFsXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVEb21Nb3Rpb25Db25maWcoQ29tcG9uZW50KSB7XHJcbiAgICB2YXIgaXNET00gPSB0eXBlb2YgQ29tcG9uZW50ID09PSBcInN0cmluZ1wiO1xyXG4gICAgdmFyIGlzU1ZHID0gaXNET00gJiYgc3ZnRWxlbWVudHMuaW5kZXhPZihDb21wb25lbnQpICE9PSAtMTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVuZGVyQ29tcG9uZW50OiBmdW5jdGlvbiAocmVmLCBzdHlsZSwgdmFsdWVzLCBwcm9wcywgaXNTdGF0aWMpIHtcclxuICAgICAgICAgICAgdmFyIGZvcndhcmRlZFByb3BzID0gaXNET00gPyBmaWx0ZXJWYWxpZFByb3BzKHByb3BzKSA6IHByb3BzO1xyXG4gICAgICAgICAgICB2YXIgc3RhdGljVmlzdWFsU3R5bGVzID0gaXNTVkdcclxuICAgICAgICAgICAgICAgID8gYnVpbGRTVkdQcm9wcyh2YWx1ZXMsIHN0eWxlKVxyXG4gICAgICAgICAgICAgICAgOiBidWlsZEhUTUxQcm9wcyh2YWx1ZXMsIHN0eWxlLCBpc1N0YXRpYywgISFwcm9wcy5kcmFnKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfX2Fzc2lnbihfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZm9yd2FyZGVkUHJvcHMpLCB7IHJlZjogcmVmIH0pLCBzdGF0aWNWaXN1YWxTdHlsZXMpKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIGxvYWRGdW5jdGlvbmFsaXR5Q29tcG9uZW50cyBnZXRzIHVzZWQgYnkgdGhlIGBtb3Rpb25gIGNvbXBvbmVudFxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogRWFjaCBmdW5jdGlvbmFsaXR5IGNvbXBvbmVudCBnZXRzIHByb3ZpZGVkIHRoZSBgcmVmYCwgYW5pbWF0aW9uIGNvbnRyb2xzIGFuZCB0aGUgYE1vdGlvblZhbHVlc01hcGBcclxuICAgICAgICAgKiBnZW5lcmF0ZWQgZm9yIHRoYXQgY29tcG9uZW50LCBhcyB3ZWxsIGFzIGFsbCB0aGUgYHByb3BzYCBwYXNzZWQgdG8gaXQgYnkgdGhlIHVzZXIuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGUgcGF0dGVybiB1c2VkIHRvIGRldGVybWluZSB3aGV0aGVyIHRvIGxvYWQgYW5kIHVzZSBlYWNoIHBpZWNlIG9mIGZ1bmN0aW9uYWxpdHkgaXNcclxuICAgICAgICAgKiBjb25zaXN0ZW50IChzaG91bGQgcmVuZGVyPyBUaGVuIHB1c2ggY29tcG9uZW50KSBhbmQgY291bGQgYmUgdXNlZCB0byBleHRlbmQgZnVuY3Rpb25hbGl0eS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEJ5IGV4cG9zaW5nIGEgbXV0YWJsZSBwaWVjZSBvZiBtZW1vcnkgdmlhIGFuIEFQSSBsaWtlIGBleHRlbmRNb3Rpb25Db21wb25lbnRgIHdlIGNvdWxkXHJcbiAgICAgICAgICogYWxsb3cgdXNlcnMgdG8gYWRkIGBGdW5jdGlvbmFsQ29tcG9uZW50RGVmaW5pdGlvbmBzLiBUaGlzIHdvdWxkIGFsbG93IHVzIHRvIG9mZmVyIGZpbGUgc2l6ZVxyXG4gICAgICAgICAqIHJlZHVjdGlvbnMgYnkgc2hpcHBpbmcgYW4gZW50cnkgcG9pbnQgdGhhdCBkb2Vzbid0IGxvYWQgZ2VzdHVyZSBhbmQgZHJhZyBmdW5jdGlvbmFsaXR5LCBhbmRcclxuICAgICAgICAgKiBhbHNvIG9mZmVyIGEgd2F5IGZvciB1c2VycyB0byBkZXZlbG9wIHBsdWdpbnMvb3RoZXIgZnVuY3Rpb25hbGl0eS4gQmVjYXVzZSB0aGVzZSBmdW5jdGlvbmFsaXRpZXNcclxuICAgICAgICAgKiBhcmUgbG9hZGVkIGFzIGNvbXBvbmVudHMsIHdlIGNhbiBsb29rIGludG8gdXNpbmcgU3VzcGVuc2UgZm9yIHRoaXMgcHVycG9zZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEZvciB1c2VyLWRlZmluZWQgZnVuY3Rpb25hbGl0eSB3ZSdkIG5lZWQgdG8gYWxsb3dcclxuICAgICAgICAgKiAgMSkgVXNlci1kZWZpbmVkIHByb3AgdHlwaW5nIChleHRlbmRpbmcgYFBgKVxyXG4gICAgICAgICAqICAyKSBVc2VyLWRlZmluZWQgXCJjbGVhbiBwcm9wc1wiIGZ1bmN0aW9uIHRoYXQgcmVtb3ZlcyB0aGVpciBwbHVnaW4ncyBwcm9wcyBiZWZvcmUgYmVpbmcgcGFzc2VkIHRvIHRoZSBET00uXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgbG9hZEZ1bmN0aW9uYWxpdHlDb21wb25lbnRzOiBmdW5jdGlvbiAocmVmLCB2YWx1ZXMsIHByb3BzLCBjb250ZXh0LCBjb250cm9scywgaW5oZXJpdCkge1xyXG4gICAgICAgICAgICB2YXIgYWN0aXZlQ29tcG9uZW50cyA9IFtdO1xyXG4gICAgICAgICAgICAvLyBUT0RPOiBDb25zb2xpZGF0ZSBBbmltYXRpb24gZnVuY3Rpb25hbGl0eSBsb2FkaW5nIHN0cmF0ZWd5IHdpdGggb3RoZXIgZnVuY3Rpb25hbGl0eSBjb21wb25lbnRzXHJcbiAgICAgICAgICAgIHZhciBBbmltYXRpb24gPSBnZXRBbmltYXRpb25Db21wb25lbnQocHJvcHMpO1xyXG4gICAgICAgICAgICBpZiAoQW5pbWF0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICBhY3RpdmVDb21wb25lbnRzLnB1c2goY3JlYXRlRWxlbWVudChBbmltYXRpb24sIHsga2V5OiBcImFuaW1hdGlvblwiLCBpbml0aWFsOiBwcm9wcy5pbml0aWFsLCBhbmltYXRlOiBwcm9wcy5hbmltYXRlLCB2YXJpYW50czogcHJvcHMudmFyaWFudHMsIHRyYW5zaXRpb246IHByb3BzLnRyYW5zaXRpb24sIGNvbnRyb2xzOiBjb250cm9scywgaW5oZXJpdDogaW5oZXJpdCwgdmFsdWVzOiB2YWx1ZXMgfSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtRnVuY3Rpb25hbGl0eUNvbXBvbmVudHM7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIF9hID0gZnVuY3Rpb25hbGl0eUNvbXBvbmVudHNbaV0sIHNob3VsZFJlbmRlciA9IF9hLnNob3VsZFJlbmRlciwga2V5ID0gX2Eua2V5LCBDb21wb25lbnRfMSA9IF9hLkNvbXBvbmVudDtcclxuICAgICAgICAgICAgICAgIGlmIChzaG91bGRSZW5kZXIocHJvcHMsIGNvbnRleHQpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlQ29tcG9uZW50cy5wdXNoKGNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50XzEsIF9fYXNzaWduKHsga2V5OiBrZXkgfSwgcHJvcHMsIHsgcGFyZW50Q29udGV4dDogY29udGV4dCwgdmFsdWVzOiB2YWx1ZXMsIGNvbnRyb2xzOiBjb250cm9scywgaW5uZXJSZWY6IHJlZiB9KSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBhY3RpdmVDb21wb25lbnRzO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0VmFsdWVDb250cm9sc0NvbmZpZzogZnVuY3Rpb24gKHJlZiwgdmFsdWVzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZXM6IHZhbHVlcyxcclxuICAgICAgICAgICAgICAgIHJlYWRWYWx1ZUZyb21Tb3VyY2U6IGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3R5bGVyKHJlZi5jdXJyZW50KS5nZXQoa2V5KTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAvLyBUT0RPOiBUaGlzIGlzIGEgZ29vZCBzZWNvbmQgc291cmNlIG9mIHBsdWdpbnMuIFRoaXMgZnVuY3Rpb24gY29udGFpbnMgdGhlIENTUyB2YXJpYWJsZVxyXG4gICAgICAgICAgICAgICAgLy8gYW5kIHVuaXQgY29udmVyc2lvbiBzdXBwb3J0LiBUaGVzZSBmdW5jdGlvbnMgc2hhcmUgYSBjb21tb24gc2lnbmF0dXJlLiBXZSBjb3VsZCBtYWtlIGFub3RoZXJcclxuICAgICAgICAgICAgICAgIC8vIEFQSSBmb3IgYWRkaW5nIHRoZXNlLlxyXG4gICAgICAgICAgICAgICAgbWFrZVRhcmdldEFuaW1hdGFibGU6IHBhcnNlRG9tVmFyaWFudCh2YWx1ZXMsIHJlZiksXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfSxcclxuICAgIH07XHJcbn1cblxudmFyIGh0bWxNb3Rpb25Db21wb25lbnRzID0gaHRtbEVsZW1lbnRzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBDb21wb25lbnQpIHtcclxuICAgIHZhciBjb25maWcgPSBjcmVhdGVEb21Nb3Rpb25Db25maWcoQ29tcG9uZW50KTtcclxuICAgIC8vIFN1cHByZXNzIFwiRXhwcmVzc2lvbiBwcm9kdWNlcyBhIHVuaW9uIHR5cGUgdGhhdCBpcyB0b28gY29tcGxleCB0byByZXByZXNlbnRcIiBlcnJvclxyXG4gICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgYWNjW0NvbXBvbmVudF0gPSBjcmVhdGVNb3Rpb25Db21wb25lbnQoY29uZmlnKTtcclxuICAgIHJldHVybiBhY2M7XHJcbn0sIHt9KTtcclxudmFyIHN2Z01vdGlvbkNvbXBvbmVudHMgPSBzdmdFbGVtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgQ29tcG9uZW50KSB7XHJcbiAgICAvLyBTdXBwcmVzcyBcIkV4cHJlc3Npb24gcHJvZHVjZXMgYSB1bmlvbiB0eXBlIHRoYXQgaXMgdG9vIGNvbXBsZXggdG8gcmVwcmVzZW50XCIgZXJyb3JcclxuICAgIC8vIEB0cy1pZ25vcmVcclxuICAgIGFjY1tDb21wb25lbnRdID0gY3JlYXRlTW90aW9uQ29tcG9uZW50KGNyZWF0ZURvbU1vdGlvbkNvbmZpZyhDb21wb25lbnQpKTtcclxuICAgIHJldHVybiBhY2M7XHJcbn0sIHt9KTtcclxuLyoqXHJcbiAqIEhUTUwgJiBTVkcgY29tcG9uZW50cywgb3B0aW1pc2VkIGZvciB1c2Ugd2l0aCBnZXN0dXJlcyBhbmQgYW5pbWF0aW9uLiBUaGVzZSBjYW4gYmUgdXNlZCBhc1xyXG4gKiBkcm9wLWluIHJlcGxhY2VtZW50cyBmb3IgYW55IEhUTUwgJiBTVkcgY29tcG9uZW50LCBhbGwgQ1NTICYgU1ZHIHByb3BlcnRpZXMgYXJlIHN1cHBvcnRlZC5cclxuICpcclxuICogQGludGVybmFscmVtYXJrc1xyXG4gKlxyXG4gKiBJJ2QgbGlrZSB0byBtYWtlIGl0IHBvc3NpYmxlIGZvciB0aGVzZSB0byBiZSBsb2FkZWQgXCJvbiBkZW1hbmRcIiAtIHRvIHJlZHVjZSBidW5kbGUgc2l6ZSBieSBvbmx5XHJcbiAqIGluY2x1ZGluZyBIVE1ML1NWRyBzdHlsZXJzLCBhbmltYXRpb24gYW5kL29yIGdlc3R1cmUgc3VwcG9ydCB3aGVuIG5lY2Vzc2FyeS5cclxuICpcclxuICogYGBganN4XHJcbiAqIDxtb3Rpb24uZGl2IGFuaW1hdGU9e3sgeDogMTAwIH19IC8+XHJcbiAqXHJcbiAqIDxtb3Rpb24ucCBhbmltYXRlPXt7IGhlaWdodDogMjAwIH19IC8+XHJcbiAqXHJcbiAqIDxzdmc+PG1vdGlvbi5jaXJjbGUgcj17MTB9IGFuaW1hdGU9e3sgcjogMjAgfX0gLz48L3N2Zz5cclxuICogYGBgXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbnZhciBtb3Rpb24gPSBfX2Fzc2lnbihfX2Fzc2lnbih7IFxyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0IGEgY3VzdG9tIFJlYWN0IGNvbXBvbmVudCBpbnRvIGEgYG1vdGlvbmAgY29tcG9uZW50LlxyXG4gICAgICpcclxuICAgICAqIEl0IGNhbiBhbHNvIGFjY2VwdCBhIHN0cmluZywgdG8gY3JlYXRlIFtjdXN0b20gRE9NIGVsZW1lbnRzXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9XZWJfQ29tcG9uZW50cy9Vc2luZ19jdXN0b21fZWxlbWVudHMpLlxyXG4gICAgICpcclxuICAgICAqIGBgYGpzeFxyXG4gICAgICogY29uc3QgQ29tcG9uZW50ID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHM6IFByb3BzLCByZWYpID0+IHtcclxuICAgICAqICAgcmV0dXJuIDxkaXYgcmVmPXtyZWZ9IC8+XHJcbiAgICAgKiB9KVxyXG4gICAgICpcclxuICAgICAqIGNvbnN0IE1vdGlvbkNvbXBvbmVudCA9IG1vdGlvbi5jdXN0b208UHJvcHM+KENvbXBvbmVudClcclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBDb21wb25lbnQgLVxyXG4gICAgICovXHJcbiAgICBjdXN0b206IGZ1bmN0aW9uIGN1c3RvbShDb21wb25lbnQpIHtcclxuICAgICAgICByZXR1cm4gY3JlYXRlTW90aW9uQ29tcG9uZW50KGNyZWF0ZURvbU1vdGlvbkNvbmZpZyhDb21wb25lbnQpKTtcclxuICAgIH0gfSwgaHRtbE1vdGlvbkNvbXBvbmVudHMpLCBzdmdNb3Rpb25Db21wb25lbnRzKTtcblxuLyoqXHJcbiAqIENyZWF0ZXMgYSBgTW90aW9uVmFsdWVgIHRvIHRyYWNrIHRoZSBzdGF0ZSBhbmQgdmVsb2NpdHkgb2YgYSB2YWx1ZS5cclxuICpcclxuICogVXN1YWxseSwgdGhlc2UgYXJlIGNyZWF0ZWQgYXV0b21hdGljYWxseS4gRm9yIGFkdmFuY2VkIHVzZS1jYXNlcywgbGlrZSB1c2Ugd2l0aCBgdXNlVHJhbnNmb3JtYCwgeW91IGNhbiBjcmVhdGUgYE1vdGlvblZhbHVlYHMgZXh0ZXJuYWxseSBhbmQgcGFzcyB0aGVtIGludG8gdGhlIGFuaW1hdGVkIGNvbXBvbmVudCB2aWEgdGhlIGBzdHlsZWAgcHJvcC5cclxuICpcclxuICogQGxpYnJhcnlcclxuICpcclxuICogYGBganN4XHJcbiAqIGV4cG9ydCBmdW5jdGlvbiBNeUNvbXBvbmVudCgpIHtcclxuICogICBjb25zdCBzY2FsZSA9IHVzZU1vdGlvblZhbHVlKDEpXHJcbiAqXHJcbiAqICAgcmV0dXJuIDxGcmFtZSBzY2FsZT17c2NhbGV9IC8+XHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIEBtb3Rpb25cclxuICpcclxuICogYGBganN4XHJcbiAqIGV4cG9ydCBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBzY2FsZSA9IHVzZU1vdGlvblZhbHVlKDEpXHJcbiAqXHJcbiAqICAgcmV0dXJuIDxtb3Rpb24uZGl2IHN0eWxlPXt7IHNjYWxlIH19IC8+XHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIEBwYXJhbSBpbml0aWFsIC0gVGhlIGluaXRpYWwgc3RhdGUuXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmZ1bmN0aW9uIHVzZU1vdGlvblZhbHVlKGluaXRpYWwpIHtcclxuICAgIHJldHVybiB1c2VDb25zdGFudChmdW5jdGlvbiAoKSB7IHJldHVybiBtb3Rpb25WYWx1ZShpbml0aWFsKTsgfSk7XHJcbn1cblxuLyoqXHJcbiAqIElmIHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBhIE1vdGlvblZhbHVlLCB0aGlzIHJldHVybnMgdGhlIGFjdHVhbCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3QgdGhlIHZhbHVlIGl0c2VsZlxyXG4gKlxyXG4gKiBUT0RPOiBSZW1vdmUgYW5kIG1vdmUgdG8gbGlicmFyeVxyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIHVud3JhcE1vdGlvblZhbHVlKHZhbHVlKSB7XHJcbiAgICB2YXIgdW53cmFwcGVkVmFsdWUgPSB2YWx1ZSBpbnN0YW5jZW9mIE1vdGlvblZhbHVlID8gdmFsdWUuZ2V0KCkgOiB2YWx1ZTtcclxuICAgIHJldHVybiBpc0N1c3RvbVZhbHVlKHVud3JhcHBlZFZhbHVlKVxyXG4gICAgICAgID8gdW53cmFwcGVkVmFsdWUudG9WYWx1ZSgpXHJcbiAgICAgICAgOiB1bndyYXBwZWRWYWx1ZTtcclxufVxuXG52YXIgaXNDdXN0b21WYWx1ZVR5cGUgPSBmdW5jdGlvbiAodikge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2ID09PSBcIm9iamVjdFwiICYmIHYubWl4O1xyXG59O1xyXG52YXIgZ2V0TWl4ZXIgPSBmdW5jdGlvbiAodikgeyByZXR1cm4gKGlzQ3VzdG9tVmFsdWVUeXBlKHYpID8gdi5taXggOiB1bmRlZmluZWQpOyB9O1xyXG5mdW5jdGlvbiB0cmFuc2Zvcm0oKSB7XHJcbiAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICB2YXIgdXNlSW1tZWRpYXRlID0gIUFycmF5LmlzQXJyYXkoYXJnc1swXSk7XHJcbiAgICB2YXIgYXJnT2Zmc2V0ID0gdXNlSW1tZWRpYXRlID8gMCA6IC0xO1xyXG4gICAgdmFyIGlucHV0VmFsdWUgPSBhcmdzWzAgKyBhcmdPZmZzZXRdO1xyXG4gICAgdmFyIGlucHV0UmFuZ2UgPSBhcmdzWzEgKyBhcmdPZmZzZXRdO1xyXG4gICAgdmFyIG91dHB1dFJhbmdlID0gYXJnc1syICsgYXJnT2Zmc2V0XTtcclxuICAgIHZhciBvcHRpb25zID0gYXJnc1szICsgYXJnT2Zmc2V0XTtcclxuICAgIHZhciBpbnRlcnBvbGF0b3IgPSBpbnRlcnBvbGF0ZShpbnB1dFJhbmdlLCBvdXRwdXRSYW5nZSwgX19hc3NpZ24oeyBtaXhlcjogZ2V0TWl4ZXIob3V0cHV0UmFuZ2VbMF0pIH0sIG9wdGlvbnMpKTtcclxuICAgIHJldHVybiB1c2VJbW1lZGlhdGUgPyBpbnRlcnBvbGF0b3IoaW5wdXRWYWx1ZSkgOiBpbnRlcnBvbGF0b3I7XHJcbn1cblxudmFyIGlzVHJhbnNmb3JtZXIgPSBmdW5jdGlvbiAodikge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCI7XHJcbn07XHJcbnZhciBub29wJDEgPSBmdW5jdGlvbiAodikgeyByZXR1cm4gdjsgfTtcclxuZnVuY3Rpb24gdXNlVHJhbnNmb3JtKHBhcmVudCwgY3VzdG9tVHJhbnNmb3JtLCB0bywgb3B0aW9ucykge1xyXG4gICAgdmFyIHZhbHVlID0gdXNlUmVmKG51bGwpO1xyXG4gICAgdmFyIGNvbXBhcml0b3IgPSBbcGFyZW50XTtcclxuICAgIHZhciB0cmFuc2Zvcm1lciA9IG5vb3AkMTtcclxuICAgIGlmIChpc1RyYW5zZm9ybWVyKGN1c3RvbVRyYW5zZm9ybSkpIHtcclxuICAgICAgICB0cmFuc2Zvcm1lciA9IGN1c3RvbVRyYW5zZm9ybTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodG8pKSB7XHJcbiAgICAgICAgdmFyIGZyb20gPSBjdXN0b21UcmFuc2Zvcm07XHJcbiAgICAgICAgdHJhbnNmb3JtZXIgPSB0cmFuc2Zvcm0oZnJvbSwgdG8sIG9wdGlvbnMpO1xyXG4gICAgICAgIGNvbXBhcml0b3IgPSBbcGFyZW50LCBmcm9tLmpvaW4oXCIsXCIpLCB0by5qb2luKFwiLFwiKV07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHZhbHVlLmN1cnJlbnQpXHJcbiAgICAgICAgICAgIHZhbHVlLmN1cnJlbnQuZGVzdHJveSgpO1xyXG4gICAgICAgIHZhbHVlLmN1cnJlbnQgPSBwYXJlbnQuYWRkQ2hpbGQoeyB0cmFuc2Zvcm1lcjogdHJhbnNmb3JtZXIgfSk7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlLmN1cnJlbnQ7XHJcbiAgICB9LCBjb21wYXJpdG9yKTtcclxufVxuXG4vLyBLZWVwIHRoaW5ncyByZWFzb25hYmxlIGFuZCBhdm9pZCBzY2FsZTogSW5maW5pdHkuIEluIHByYWN0aXNlIHdlIG1pZ2h0IG5lZWRcclxuLy8gdG8gYWRkIGFub3RoZXIgdmFsdWUsIG9wYWNpdHksIHRoYXQgY291bGQgaW50ZXJwb2xhdGUgc2NhbGVYL1kgWzAsMC4wMV0gPT4gWzAsMV1cclxuLy8gdG8gc2ltcGx5IGhpZGUgY29udGVudCBhdCB1bnJlYXNvbmFibGUgc2NhbGVzLlxyXG52YXIgbWF4U2NhbGUgPSAxMDAwMDA7XHJcbnZhciBpbnZlcnRTY2FsZSA9IGZ1bmN0aW9uIChzY2FsZSkgeyByZXR1cm4gKHNjYWxlID4gMC4wMDEgPyAxIC8gc2NhbGUgOiBtYXhTY2FsZSk7IH07XHJcbi8qKlxyXG4gKiBSZXR1cm5zIGEgYE1vdGlvblZhbHVlYCBlYWNoIGZvciBgc2NhbGVYYCBhbmQgYHNjYWxlWWAgdGhhdCB1cGRhdGUgd2l0aCB0aGUgaW52ZXJzZVxyXG4gKiBvZiB0aGVpciByZXNwZWN0aXZlIHBhcmVudCBzY2FsZXMuXHJcbiAqXHJcbiAqIFRoaXMgaXMgdXNlZnVsIGZvciB1bmRvaW5nIHRoZSBkaXN0b3J0aW9uIG9mIGNvbnRlbnQgd2hlbiBzY2FsaW5nIGEgcGFyZW50IGNvbXBvbmVudC5cclxuICpcclxuICogQnkgZGVmYXVsdCwgYHVzZUludmVydGVkU2NhbGVgIHdpbGwgYXV0b21hdGljYWxseSBmZXRjaCBgc2NhbGVYYCBhbmQgYHNjYWxlWWAgZnJvbSB0aGUgbmVhcmVzdCBwYXJlbnQuXHJcbiAqIEJ5IHBhc3Npbmcgb3RoZXIgYE1vdGlvblZhbHVlYHMgaW4gYXMgYHVzZUludmVydGVkU2NhbGUoeyBzY2FsZVgsIHNjYWxlWSB9KWAsIGl0IHdpbGwgaW52ZXJ0IHRoZSBvdXRwdXRcclxuICogb2YgdGhvc2UgaW5zdGVhZC5cclxuICpcclxuICogQG1vdGlvblxyXG4gKlxyXG4gKiBgYGBqc3hcclxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiB7XHJcbiAqICAgY29uc3QgeyBzY2FsZVgsIHNjYWxlWSB9ID0gdXNlSW52ZXJ0ZWRTY2FsZSgpXHJcbiAqICAgcmV0dXJuIDxtb3Rpb24uZGl2IHN0eWxlPXt7IHNjYWxlWCwgc2NhbGVZIH19IC8+XHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIEBsaWJyYXJ5XHJcbiAqXHJcbiAqIGBgYGpzeFxyXG4gKiBmdW5jdGlvbiBNeUNvbXBvbmVudCgpIHtcclxuICogICBjb25zdCB7IHNjYWxlWCwgc2NhbGVZIH0gPSB1c2VJbnZlcnRlZFNjYWxlKClcclxuICogICByZXR1cm4gPEZyYW1lIHNjYWxlWD17c2NhbGVYfSBzY2FsZVk9e3NjYWxlWX0gLz5cclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogQHB1YmxpY1xyXG4gKi9cclxuZnVuY3Rpb24gdXNlSW52ZXJ0ZWRTY2FsZShzY2FsZSkge1xyXG4gICAgdmFyIHBhcmVudFNjYWxlWCA9IHVzZU1vdGlvblZhbHVlKDEpO1xyXG4gICAgdmFyIHBhcmVudFNjYWxlWSA9IHVzZU1vdGlvblZhbHVlKDEpO1xyXG4gICAgdmFyIHZhbHVlcyA9IHVzZUNvbnRleHQoTW90aW9uQ29udGV4dCkudmFsdWVzO1xyXG4gICAgaW52YXJpYW50KCEhKHNjYWxlIHx8IHZhbHVlcyksIFwiSWYgbm8gc2NhbGUgdmFsdWVzIGFyZSBwcm92aWRlZCwgdXNlSW52ZXJ0ZWRTY2FsZSBtdXN0IGJlIHVzZWQgd2l0aGluIGEgY2hpbGQgb2YgYW5vdGhlciBtb3Rpb24gY29tcG9uZW50LlwiKTtcclxuICAgIGlmIChzY2FsZSkge1xyXG4gICAgICAgIHBhcmVudFNjYWxlWCA9IHNjYWxlLnNjYWxlWCB8fCBwYXJlbnRTY2FsZVg7XHJcbiAgICAgICAgcGFyZW50U2NhbGVZID0gc2NhbGUuc2NhbGVZIHx8IHBhcmVudFNjYWxlWTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHZhbHVlcykge1xyXG4gICAgICAgIHBhcmVudFNjYWxlWCA9IHZhbHVlcy5nZXQoXCJzY2FsZVhcIiwgMSk7XHJcbiAgICAgICAgcGFyZW50U2NhbGVZID0gdmFsdWVzLmdldChcInNjYWxlWVwiLCAxKTtcclxuICAgIH1cclxuICAgIHZhciBzY2FsZVggPSB1c2VUcmFuc2Zvcm0ocGFyZW50U2NhbGVYLCBpbnZlcnRTY2FsZSk7XHJcbiAgICB2YXIgc2NhbGVZID0gdXNlVHJhbnNmb3JtKHBhcmVudFNjYWxlWSwgaW52ZXJ0U2NhbGUpO1xyXG4gICAgcmV0dXJuIHsgc2NhbGVYOiBzY2FsZVgsIHNjYWxlWTogc2NhbGVZIH07XHJcbn1cblxuZnVuY3Rpb24gdXNlT25DaGFuZ2UodmFsdWUsIGNhbGxiYWNrKSB7XHJcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkgeyByZXR1cm4gKGlzTW90aW9uVmFsdWUodmFsdWUpID8gdmFsdWUub25DaGFuZ2UoY2FsbGJhY2spIDogdW5kZWZpbmVkKTsgfSwgW3ZhbHVlXSk7XHJcbn1cblxuLyoqXHJcbiAqIENyZWF0ZXMgYSBgTW90aW9uVmFsdWVgIHRoYXQsIHdoZW4gYHNldGAsIHdpbGwgdXNlIGEgc3ByaW5nIGFuaW1hdGlvbiB0byBhbmltYXRlIHRvIGl0cyBuZXcgc3RhdGUuXHJcbiAqXHJcbiAqIEl0IGNhbiBlaXRoZXIgd29yayBhcyBhIHN0YW5kLWFsb25lIGBNb3Rpb25WYWx1ZWAgYnkgaW5pdGlhbGlzaW5nIGl0IHdpdGggYSB2YWx1ZSwgb3IgYXMgYSBzdWJzY3JpYmVyXHJcbiAqIHRvIGFub3RoZXIgYE1vdGlvblZhbHVlYC5cclxuICpcclxuICogQHJlbWFya3NcclxuICpcclxuICogYGBganN4XHJcbiAqIGNvbnN0IHggPSB1c2VTcHJpbmcoMCwgeyBzdGlmZm5lc3M6IDMwMCB9KVxyXG4gKiBjb25zdCB5ID0gdXNlU3ByaW5nKHgsIHsgZGFtcGluZzogMTAgfSlcclxuICogYGBgXHJcbiAqXHJcbiAqIEBwYXJhbSBpbnB1dFZhbHVlIC0gYE1vdGlvblZhbHVlYCBvciBudW1iZXIuIElmIHByb3ZpZGVkIGEgYE1vdGlvblZhbHVlYCwgd2hlbiB0aGUgaW5wdXQgYE1vdGlvblZhbHVlYCBjaGFuZ2VzLCB0aGUgY3JlYXRlZCBgTW90aW9uVmFsdWVgIHdpbGwgc3ByaW5nIHRvd2FyZHMgdGhhdCB2YWx1ZS5cclxuICogQHBhcmFtIHNwcmluZ0NvbmZpZyAtIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIHNwcmluZy5cclxuICogQHJldHVybnMgYE1vdGlvblZhbHVlYFxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VTcHJpbmcoc291cmNlLCBjb25maWcpIHtcclxuICAgIGlmIChjb25maWcgPT09IHZvaWQgMCkgeyBjb25maWcgPSB7fTsgfVxyXG4gICAgdmFyIGFjdGl2ZVNwcmluZ0FuaW1hdGlvbiA9IHVzZVJlZihudWxsKTtcclxuICAgIHZhciB2YWx1ZSA9IHVzZU1vdGlvblZhbHVlKGlzTW90aW9uVmFsdWUoc291cmNlKSA/IHNvdXJjZS5nZXQoKSA6IHNvdXJjZSk7XHJcbiAgICB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gdmFsdWUuYXR0YWNoKGZ1bmN0aW9uICh2LCBzZXQpIHtcclxuICAgICAgICAgICAgaWYgKGFjdGl2ZVNwcmluZ0FuaW1hdGlvbi5jdXJyZW50KSB7XHJcbiAgICAgICAgICAgICAgICBhY3RpdmVTcHJpbmdBbmltYXRpb24uY3VycmVudC5zdG9wKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWN0aXZlU3ByaW5nQW5pbWF0aW9uLmN1cnJlbnQgPSBzcHJpbmcoX19hc3NpZ24oeyBmcm9tOiB2YWx1ZS5nZXQoKSwgdG86IHYsIHZlbG9jaXR5OiB2YWx1ZS5nZXRWZWxvY2l0eSgpIH0sIGNvbmZpZykpLnN0YXJ0KHNldCk7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5nZXQoKTtcclxuICAgICAgICB9KTtcclxuICAgIH0sIE9iamVjdC52YWx1ZXMoY29uZmlnKSk7XHJcbiAgICB1c2VPbkNoYW5nZShzb3VyY2UsIGZ1bmN0aW9uICh2KSB7IHJldHVybiB2YWx1ZS5zZXQocGFyc2VGbG9hdCh2KSk7IH0pO1xyXG4gICAgcmV0dXJuIHZhbHVlO1xyXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVNjcm9sbE1vdGlvblZhbHVlcygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgc2Nyb2xsWDogbW90aW9uVmFsdWUoMCksXHJcbiAgICAgICAgc2Nyb2xsWTogbW90aW9uVmFsdWUoMCksXHJcbiAgICAgICAgc2Nyb2xsWFByb2dyZXNzOiBtb3Rpb25WYWx1ZSgwKSxcclxuICAgICAgICBzY3JvbGxZUHJvZ3Jlc3M6IG1vdGlvblZhbHVlKDApLFxyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBzZXRQcm9ncmVzcyhvZmZzZXQsIG1heE9mZnNldCwgdmFsdWUpIHtcclxuICAgIHZhbHVlLnNldCghb2Zmc2V0IHx8ICFtYXhPZmZzZXQgPyAwIDogb2Zmc2V0IC8gbWF4T2Zmc2V0KTtcclxufVxyXG5mdW5jdGlvbiBjcmVhdGVTY3JvbGxVcGRhdGVyKHZhbHVlcywgZ2V0T2Zmc2V0cykge1xyXG4gICAgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgX2EgPSBnZXRPZmZzZXRzKCksIHhPZmZzZXQgPSBfYS54T2Zmc2V0LCB5T2Zmc2V0ID0gX2EueU9mZnNldCwgeE1heE9mZnNldCA9IF9hLnhNYXhPZmZzZXQsIHlNYXhPZmZzZXQgPSBfYS55TWF4T2Zmc2V0O1xyXG4gICAgICAgIC8vIFNldCBhYnNvbHV0ZSBwb3NpdGlvbnNcclxuICAgICAgICB2YWx1ZXMuc2Nyb2xsWC5zZXQoeE9mZnNldCk7XHJcbiAgICAgICAgdmFsdWVzLnNjcm9sbFkuc2V0KHlPZmZzZXQpO1xyXG4gICAgICAgIC8vIFNldCAwLTEgcHJvZ3Jlc3NcclxuICAgICAgICBzZXRQcm9ncmVzcyh4T2Zmc2V0LCB4TWF4T2Zmc2V0LCB2YWx1ZXMuc2Nyb2xsWFByb2dyZXNzKTtcclxuICAgICAgICBzZXRQcm9ncmVzcyh5T2Zmc2V0LCB5TWF4T2Zmc2V0LCB2YWx1ZXMuc2Nyb2xsWVByb2dyZXNzKTtcclxuICAgIH07XHJcbiAgICB1cGRhdGUoKTtcclxuICAgIHJldHVybiB1cGRhdGU7XHJcbn1cblxudmFyIGlzQnJvd3NlciQyID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIjtcclxudmFyIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgPSBpc0Jyb3dzZXIkMiA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdDtcblxudmFyIGdldEVsZW1lbnRTY3JvbGxPZmZzZXRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgeE9mZnNldDogZWxlbWVudC5zY3JvbGxMZWZ0LFxyXG4gICAgICAgIHlPZmZzZXQ6IGVsZW1lbnQuc2Nyb2xsVG9wLFxyXG4gICAgICAgIHhNYXhPZmZzZXQ6IGVsZW1lbnQuc2Nyb2xsV2lkdGggLSBlbGVtZW50Lm9mZnNldFdpZHRoLFxyXG4gICAgICAgIHlNYXhPZmZzZXQ6IGVsZW1lbnQuc2Nyb2xsSGVpZ2h0IC0gZWxlbWVudC5vZmZzZXRIZWlnaHQsXHJcbiAgICB9O1xyXG59OyB9O1xyXG4vKipcclxuICogUmV0dXJucyBNb3Rpb25WYWx1ZXMgdGhhdCB1cGRhdGUgd2hlbiB0aGUgcHJvdmlkZWQgZWxlbWVudCBzY3JvbGxzOlxyXG4gKlxyXG4gKiAtIGBzY3JvbGxYYCDigJQgSG9yaXpvbnRhbCBzY3JvbGwgZGlzdGFuY2UgaW4gcGl4ZWxzLlxyXG4gKiAtIGBzY3JvbGxZYCDigJQgVmVydGljYWwgc2Nyb2xsIGRpc3RhbmNlIGluIHBpeGVscy5cclxuICogLSBgc2Nyb2xsWFByb2dyZXNzYCDigJQgSG9yaXpvbnRhbCBzY3JvbGwgcHJvZ3Jlc3MgYmV0d2VlbiBgMGAgYW5kIGAxYC5cclxuICogLSBgc2Nyb2xsWVByb2dyZXNzYCDigJQgVmVydGljYWwgc2Nyb2xsIHByb2dyZXNzIGJldHdlZW4gYDBgIGFuZCBgMWAuXHJcbiAqXHJcbiAqIEBsaWJyYXJ5XHJcbiAqXHJcbiAqIGBgYGpzeFxyXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxyXG4gKiBpbXBvcnQge1xyXG4gKiAgIEZyYW1lLFxyXG4gKiAgIHVzZUVsZW1lbnRTY3JvbGwsXHJcbiAqICAgdXNlVHJhbnNmb3JtXHJcbiAqIH0gZnJvbSBcImZyYW1lclwiXHJcbiAqXHJcbiAqIGV4cG9ydCBmdW5jdGlvbiBNeUNvbXBvbmVudCgpIHtcclxuICogICBjb25zdCByZWYgPSBSZWFjdC51c2VSZWYoKVxyXG4gKiAgIGNvbnN0IHsgc2Nyb2xsWVByb2dyZXNzIH0gPSB1c2VFbGVtZW50U2Nyb2xsKHJlZilcclxuICpcclxuICogICByZXR1cm4gKFxyXG4gKiAgICAgPEZyYW1lIHJlZj17cmVmfT5cclxuICogICAgICAgPEZyYW1lIHNjYWxlWD17c2Nyb2xsWVByb2dyZXNzfSAvPlxyXG4gKiAgICAgPC9GcmFtZT5cclxuICogICApXHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIEBtb3Rpb25cclxuICpcclxuICogYGBganN4XHJcbiAqIGV4cG9ydCBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCByZWYgPSB1c2VSZWYoKVxyXG4gKiAgIGNvbnN0IHsgc2Nyb2xsWVByb2dyZXNzIH0gPSB1c2VFbGVtZW50U2Nyb2xsKHJlZilcclxuICpcclxuICogICByZXR1cm4gKFxyXG4gKiAgICAgPGRpdiByZWY9e3JlZn0+XHJcbiAqICAgICAgIDxtb3Rpb24uZGl2IHN0eWxlPXt7IHNjYWxlWDogc2Nyb2xsWVByb2dyZXNzIH19IC8+XHJcbiAqICAgICA8L2Rpdj5cclxuICogICApXHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmZ1bmN0aW9uIHVzZUVsZW1lbnRTY3JvbGwocmVmKSB7XHJcbiAgICB2YXIgdmFsdWVzID0gdXNlQ29uc3RhbnQoY3JlYXRlU2Nyb2xsTW90aW9uVmFsdWVzKTtcclxuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBlbGVtZW50ID0gcmVmLmN1cnJlbnQ7XHJcbiAgICAgICAgaW52YXJpYW50KCEhZWxlbWVudCwgXCJyZWYgcHJvdmlkZWQgdG8gdXNlU2Nyb2xsIG11c3QgYmUgcGFzc2VkIGludG8gYSBIVE1MIGVsZW1lbnQuXCIpO1xyXG4gICAgICAgIGlmICghZWxlbWVudClcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHZhciB1cGRhdGVTY3JvbGxWYWx1ZXMgPSBjcmVhdGVTY3JvbGxVcGRhdGVyKHZhbHVlcywgZ2V0RWxlbWVudFNjcm9sbE9mZnNldHMoZWxlbWVudCkpO1xyXG4gICAgICAgIHZhciBzY3JvbGxMaXN0ZW5lciA9IGFkZERvbUV2ZW50KGVsZW1lbnQsIFwic2Nyb2xsXCIsIHVwZGF0ZVNjcm9sbFZhbHVlcywgeyBwYXNzaXZlOiB0cnVlIH0pO1xyXG4gICAgICAgIHZhciByZXNpemVMaXN0ZW5lciA9IGFkZERvbUV2ZW50KGVsZW1lbnQsIFwicmVzaXplXCIsIHVwZGF0ZVNjcm9sbFZhbHVlcyk7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2Nyb2xsTGlzdGVuZXIgJiYgc2Nyb2xsTGlzdGVuZXIoKTtcclxuICAgICAgICAgICAgcmVzaXplTGlzdGVuZXIgJiYgcmVzaXplTGlzdGVuZXIoKTtcclxuICAgICAgICB9O1xyXG4gICAgfSwgW10pO1xyXG4gICAgcmV0dXJuIHZhbHVlcztcclxufVxuXG52YXIgdmlld3BvcnRTY3JvbGxWYWx1ZXMgPSBjcmVhdGVTY3JvbGxNb3Rpb25WYWx1ZXMoKTtcclxuZnVuY3Rpb24gZ2V0Vmlld3BvcnRTY3JvbGxPZmZzZXRzKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB4T2Zmc2V0OiB3aW5kb3cucGFnZVhPZmZzZXQsXHJcbiAgICAgICAgeU9mZnNldDogd2luZG93LnBhZ2VZT2Zmc2V0LFxyXG4gICAgICAgIHhNYXhPZmZzZXQ6IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggLSB3aW5kb3cuaW5uZXJXaWR0aCxcclxuICAgICAgICB5TWF4T2Zmc2V0OiBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodCAtIHdpbmRvdy5pbm5lckhlaWdodCxcclxuICAgIH07XHJcbn1cclxudmFyIGhhc0xpc3RlbmVycyA9IGZhbHNlO1xyXG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVycygpIHtcclxuICAgIGhhc0xpc3RlbmVycyA9IHRydWU7XHJcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIilcclxuICAgICAgICByZXR1cm47XHJcbiAgICB2YXIgdXBkYXRlU2Nyb2xsVmFsdWVzID0gY3JlYXRlU2Nyb2xsVXBkYXRlcih2aWV3cG9ydFNjcm9sbFZhbHVlcywgZ2V0Vmlld3BvcnRTY3JvbGxPZmZzZXRzKTtcclxuICAgIGFkZERvbUV2ZW50KHdpbmRvdywgXCJzY3JvbGxcIiwgdXBkYXRlU2Nyb2xsVmFsdWVzLCB7IHBhc3NpdmU6IHRydWUgfSk7XHJcbiAgICBhZGREb21FdmVudCh3aW5kb3csIFwicmVzaXplXCIsIHVwZGF0ZVNjcm9sbFZhbHVlcyk7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgTW90aW9uVmFsdWVzIHRoYXQgdXBkYXRlIHdoZW4gdGhlIHZpZXdwb3J0IHNjcm9sbHM6XHJcbiAqXHJcbiAqIC0gYHNjcm9sbFhgIOKAlCBIb3Jpem9udGFsIHNjcm9sbCBkaXN0YW5jZSBpbiBwaXhlbHMuXHJcbiAqIC0gYHNjcm9sbFlgIOKAlCBWZXJ0aWNhbCBzY3JvbGwgZGlzdGFuY2UgaW4gcGl4ZWxzLlxyXG4gKiAtIGBzY3JvbGxYUHJvZ3Jlc3NgIOKAlCBIb3Jpem9udGFsIHNjcm9sbCBwcm9ncmVzcyBiZXR3ZWVuIGAwYCBhbmQgYDFgLlxyXG4gKiAtIGBzY3JvbGxZUHJvZ3Jlc3NgIOKAlCBWZXJ0aWNhbCBzY3JvbGwgcHJvZ3Jlc3MgYmV0d2VlbiBgMGAgYW5kIGAxYC5cclxuICpcclxuICogQGxpYnJhcnlcclxuICpcclxuICogYGBganN4XHJcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbiAqIGltcG9ydCB7XHJcbiAqICAgRnJhbWUsXHJcbiAqICAgdXNlVmlld3BvcnRTY3JvbGwsXHJcbiAqICAgdXNlVHJhbnNmb3JtXHJcbiAqIH0gZnJvbSBcImZyYW1lclwiXHJcbiAqXHJcbiAqIGV4cG9ydCBmdW5jdGlvbiBNeUNvbXBvbmVudCgpIHtcclxuICogICBjb25zdCB7IHNjcm9sbFlQcm9ncmVzcyB9ID0gdXNlVmlld3BvcnRTY3JvbGwoKVxyXG4gKiAgIHJldHVybiA8RnJhbWUgc2NhbGVYPXtzY3JvbGxZUHJvZ3Jlc3N9IC8+XHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIEBtb3Rpb25cclxuICpcclxuICogYGBganN4XHJcbiAqIGV4cG9ydCBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCB7IHNjcm9sbFlQcm9ncmVzcyB9ID0gdXNlVmlld3BvcnRTY3JvbGwoKVxyXG4gKiAgIHJldHVybiA8bW90aW9uLmRpdiBzdHlsZT17eyBzY2FsZVg6IHNjcm9sbFlQcm9ncmVzcyB9fSAvPlxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VWaWV3cG9ydFNjcm9sbCgpIHtcclxuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICFoYXNMaXN0ZW5lcnMgJiYgYWRkRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH0sIFtdKTtcclxuICAgIHJldHVybiB2aWV3cG9ydFNjcm9sbFZhbHVlcztcclxufVxuXG4vKipcclxuICogQ3JlYXRlcyBgQW5pbWF0aW9uQ29udHJvbHNgLCB3aGljaCBjYW4gYmUgdXNlZCB0byBtYW51YWxseSBzdGFydCwgc3RvcFxyXG4gKiBhbmQgc2VxdWVuY2UgYW5pbWF0aW9ucyBvbiBvbmUgb3IgbW9yZSBjb21wb25lbnRzLlxyXG4gKlxyXG4gKiBUaGUgcmV0dXJuZWQgYEFuaW1hdGlvbkNvbnRyb2xzYCBzaG91bGQgYmUgcGFzc2VkIHRvIHRoZSBgYW5pbWF0ZWAgcHJvcGVydHlcclxuICogb2YgdGhlIGNvbXBvbmVudHMgeW91IHdhbnQgdG8gYW5pbWF0ZS5cclxuICpcclxuICogVGhlc2UgY29tcG9uZW50cyBjYW4gdGhlbiBiZSBhbmltYXRlZCB3aXRoIHRoZSBgc3RhcnRgIG1ldGhvZC5cclxuICpcclxuICogQGxpYnJhcnlcclxuICpcclxuICogYGBganN4XHJcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyBGcmFtZSwgdXNlQW5pbWF0aW9uIH0gZnJvbSAnZnJhbWVyJ1xyXG4gKlxyXG4gKiBleHBvcnQgZnVuY3Rpb24gTXlDb21wb25lbnQocHJvcHMpIHtcclxuICogICAgY29uc3QgY29udHJvbHMgPSB1c2VBbmltYXRpb24oKVxyXG4gKlxyXG4gKiAgICBjb250cm9scy5zdGFydCh7XHJcbiAqICAgICAgICB4OiAxMDAsXHJcbiAqICAgICAgICB0cmFuc2l0aW9uOiB7IGR1cmF0aW9uOiAwLjUgfSxcclxuICogICAgfSlcclxuICpcclxuICogICAgcmV0dXJuIDxGcmFtZSBhbmltYXRlPXtjb250cm9sc30gLz5cclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogQG1vdGlvblxyXG4gKlxyXG4gKiBgYGBqc3hcclxuICogaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IG1vdGlvbiwgdXNlQW5pbWF0aW9uIH0gZnJvbSAnZnJhbWVyLW1vdGlvbidcclxuICpcclxuICogZXhwb3J0IGZ1bmN0aW9uIE15Q29tcG9uZW50KHByb3BzKSB7XHJcbiAqICAgIGNvbnN0IGNvbnRyb2xzID0gdXNlQW5pbWF0aW9uKClcclxuICpcclxuICogICAgY29udHJvbHMuc3RhcnQoe1xyXG4gKiAgICAgICAgeDogMTAwLFxyXG4gKiAgICAgICAgdHJhbnNpdGlvbjogeyBkdXJhdGlvbjogMC41IH0sXHJcbiAqICAgIH0pXHJcbiAqXHJcbiAqICAgIHJldHVybiA8bW90aW9uLmRpdiBhbmltYXRlPXtjb250cm9sc30gLz5cclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogQHJldHVybnMgQW5pbWF0aW9uIGNvbnRyb2xsZXIgd2l0aCBgc3RhcnRgIGFuZCBgc3RvcGAgbWV0aG9kc1xyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VBbmltYXRpb24oKSB7XHJcbiAgICB2YXIgYW5pbWF0aW9uQ29udHJvbHMgPSB1c2VDb25zdGFudChmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgQW5pbWF0aW9uQ29udHJvbHMoKTsgfSk7XHJcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGFuaW1hdGlvbkNvbnRyb2xzLm1vdW50KCk7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFuaW1hdGlvbkNvbnRyb2xzLnVubW91bnQoKTsgfTtcclxuICAgIH0sIFtdKTtcclxuICAgIHJldHVybiBhbmltYXRpb25Db250cm9scztcclxufVxuXG4vKipcclxuICogRXhwZXJpbWVudGFsIEFQSS5cclxuICpcclxuICogTWFrZXMgYW4gYW5pbWF0ZWQgdmVyc2lvbiBvZiBgdXNlU3RhdGVgLlxyXG4gKlxyXG4gKiBAcmVtYXJrc1xyXG4gKlxyXG4gKiBXaGVuIHRoZSByZXR1cm5lZCBzdGF0ZSBzZXR0ZXIgaXMgY2FsbGVkLCB2YWx1ZXMgd2lsbCBiZSBhbmltYXRlZCB0byB0aGVpciBuZXcgdGFyZ2V0LlxyXG4gKlxyXG4gKiBUaGlzIGFsbG93cyB0aGUgYW5pbWF0aW9uIG9mIGFyYml0cmFyeSBSZWFjdCBjb21wb25lbnRzLlxyXG4gKlxyXG4gKiAqKk5vdGU6KiogV2hlbiBhbmltYXRpbmcgRE9NIGNvbXBvbmVudHMsIGl0J3MgYWx3YXlzIHByZWZlcmFibGUgdG8gdXNlIHRoZSBgYW5pbWF0ZWAgcHJvcCwgYXMgRnJhbWVyXHJcbiAqIHdpbGwgYnlwYXNzIFJlYWN0J3MgcmVuZGVyaW5nIGN5Y2xlIHdpdGggb25lIG9wdGltaXNlZCBmb3IgNjBmcHMgbW90aW9uLiBUaGlzIEhvb2sgaXMgc3BlY2lmaWNhbGx5XHJcbiAqIGZvciBhbmltYXRpbmcgcHJvcHMgb24gYXJiaXRyYXJ5IFJlYWN0IGNvbXBvbmVudHMsIG9yIGZvciBhbmltYXRpbmcgdGV4dCBjb250ZW50LlxyXG4gKlxyXG4gKiBgYGBqc3hcclxuICogY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VBbmltYXRlZFN0YXRlKHsgcGVyY2VudGFnZTogMCB9KVxyXG4gKlxyXG4gKiByZXR1cm4gKFxyXG4gKiAgIDxHcmFwaFxyXG4gKiAgICAgcGVyY2VudGFnZT17c3RhdGUucGVyY2VudGFnZX1cclxuICogICAgIG9uVGFwPXsoKSA9PiBzZXRTdGF0ZSh7IHBlcmNlbnRhZ2U6IDUwIH0pfVxyXG4gKiAgIC8+XHJcbiAqIClcclxuICogYGBgXHJcbiAqXHJcbiAqIEBpbnRlcm5hbHJlbWFya3NcclxuICpcclxuICogVE9ETzpcclxuICogLSBNYWtlIGhvb2sgYWNjZXB0IGEgdHlwZWQgdmVyc2lvbiBvZiBUYXJnZXQgdGhhdCBhY2NlcHRzIGFueSB2YWx1ZSAobm90IGp1c3QgRE9NIHZhbHVlcylcclxuICogLSBBbGxvdyBob29rIHRvIGFjY2VwdCBzaW5nbGUgdmFsdWVzLiBpZSB1c2VBbmltYXRlZFN0YXRlKDApXHJcbiAqIC0gQWxsb3cgcHJvdmlkaW5nIE1vdGlvblZhbHVlcyB2aWEgaW5pdGlhbFN0YXRlLlxyXG4gKlxyXG4gKiBAYmV0YVxyXG4gKi9cclxuZnVuY3Rpb24gdXNlQW5pbWF0ZWRTdGF0ZShpbml0aWFsU3RhdGUpIHtcclxuICAgIHZhciBfYSA9IHVzZVN0YXRlKGluaXRpYWxTdGF0ZSksIGFuaW1hdGlvblN0YXRlID0gX2FbMF0sIG9uVXBkYXRlID0gX2FbMV07XHJcbiAgICB2YXIgY29uZmlnID0gdXNlQ29uc3RhbnQoZnVuY3Rpb24gKCkgeyByZXR1cm4gKHsgb25VcGRhdGU6IG9uVXBkYXRlIH0pOyB9KTtcclxuICAgIHZhciB2YWx1ZXMgPSB1c2VNb3Rpb25WYWx1ZXMoY29uZmlnKTtcclxuICAgIHZhciBjb250cm9scyA9IHVzZVZhbHVlQW5pbWF0aW9uQ29udHJvbHMoe1xyXG4gICAgICAgIHZhbHVlczogdmFsdWVzLFxyXG4gICAgICAgIHJlYWRWYWx1ZUZyb21Tb3VyY2U6IGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuIGFuaW1hdGlvblN0YXRlW2tleV07IH0sXHJcbiAgICB9LCB7fSwgZmFsc2UpO1xyXG4gICAgdmFyIHN0YXJ0QW5pbWF0aW9uID0gdXNlQ29uc3RhbnQoZnVuY3Rpb24gKCkgeyByZXR1cm4gZnVuY3Rpb24gKGFuaW1hdGlvbkRlZmluaXRpb24pIHtcclxuICAgICAgICByZXR1cm4gY29udHJvbHMuc3RhcnQoYW5pbWF0aW9uRGVmaW5pdGlvbik7XHJcbiAgICB9OyB9KTtcclxuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFsdWVzLm1vdW50KCk7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHZhbHVlcy51bm1vdW50KCk7IH07XHJcbiAgICB9LCBbXSk7XHJcbiAgICByZXR1cm4gW2FuaW1hdGlvblN0YXRlLCBzdGFydEFuaW1hdGlvbl07XHJcbn1cblxuLyoqXHJcbiAqIEN5Y2xlcyB0aHJvdWdoIGEgc2VyaWVzIG9mIHZpc3VhbCBwcm9wZXJ0aWVzLiBDYW4gYmUgdXNlZCB0byB0b2dnbGUgYmV0d2VlbiBvciBjeWNsZSB0aHJvdWdoIGFuaW1hdGlvbnMuIEl0IHdvcmtzIHNpbWlsYXIgdG8gYHVzZVN0YXRlYCBpbiBSZWFjdC4gSXQgaXMgcHJvdmlkZWQgYW4gaW5pdGlhbCBhcnJheSBvZiBwb3NzaWJsZSBzdGF0ZXMsIGFuZCByZXR1cm5zIGFuIGFycmF5IG9mIHR3byBhcmd1bWVudHMuXHJcbiAqXHJcbiAqIEBsaWJyYXJ5XHJcbiAqXHJcbiAqIGBgYGpzeFxyXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxyXG4gKiBpbXBvcnQgeyBGcmFtZSwgdXNlQ3ljbGUgfSBmcm9tIFwiZnJhbWVyXCJcclxuICpcclxuICogZXhwb3J0IGZ1bmN0aW9uIE15Q29tcG9uZW50KCkge1xyXG4gKiAgIGNvbnN0IFt4LCBjeWNsZVhdID0gdXNlQ3ljbGUoMCwgNTAsIDEwMClcclxuICpcclxuICogICByZXR1cm4gKFxyXG4gKiAgICAgPEZyYW1lXHJcbiAqICAgICAgIGFuaW1hdGU9e3sgeDogeCB9fVxyXG4gKiAgICAgICBvblRhcD17KCkgPT4gY3ljbGVYKCl9XHJcbiAqICAgICAgLz5cclxuICogICAgKVxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAbW90aW9uXHJcbiAqXHJcbiAqIEFuIGluZGV4IHZhbHVlIGNhbiBiZSBwYXNzZWQgdG8gdGhlIHJldHVybmVkIGBjeWNsZWAgZnVuY3Rpb24gdG8gY3ljbGUgdG8gYSBzcGVjaWZpYyBpbmRleC5cclxuICpcclxuICogYGBganN4XHJcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbiAqIGltcG9ydCB7IG1vdGlvbiwgdXNlQ3ljbGUgfSBmcm9tIFwiZnJhbWVyLW1vdGlvblwiXHJcbiAqXHJcbiAqIGV4cG9ydCBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBbeCwgY3ljbGVYXSA9IHVzZUN5Y2xlKDAsIDUwLCAxMDApXHJcbiAqXHJcbiAqICAgcmV0dXJuIChcclxuICogICAgIDxtb3Rpb24uZGl2XHJcbiAqICAgICAgIGFuaW1hdGU9e3sgeDogeCB9fVxyXG4gKiAgICAgICBvblRhcD17KCkgPT4gY3ljbGVYKCl9XHJcbiAqICAgICAgLz5cclxuICogICAgKVxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcGFyYW0gaXRlbXMgLSBpdGVtcyB0byBjeWNsZSB0aHJvdWdoXHJcbiAqIEByZXR1cm5zIFtjdXJyZW50U3RhdGUsIGN5Y2xlU3RhdGVdXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmZ1bmN0aW9uIHVzZUN5Y2xlKCkge1xyXG4gICAgdmFyIGl0ZW1zID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIGl0ZW1zW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICAvLyBUT0RPOiBBZnRlciBGcmFtZXIgWCBiZXRhLCByZW1vdmUgdGhpcyB3YXJuaW5nXHJcbiAgICB3YXJuaW5nKGl0ZW1zLmxlbmd0aCA+IDEsIFwidXNlQ3ljbGUgc3ludGF4IGhhcyBjaGFuZ2VkLiBgdXNlQ3ljbGUoWzAsIDEsIDJdKWAgYmVjb21lcyBgdXNlQ3ljbGUoMCwgMSwgMilgXCIpO1xyXG4gICAgdmFyIGluZGV4ID0gdXNlUmVmKDApO1xyXG4gICAgdmFyIF9hID0gdXNlU3RhdGUoaXRlbXNbaW5kZXguY3VycmVudF0pLCBpdGVtID0gX2FbMF0sIHNldEl0ZW0gPSBfYVsxXTtcclxuICAgIHJldHVybiBbXHJcbiAgICAgICAgaXRlbSxcclxuICAgICAgICBmdW5jdGlvbiAobmV4dCkge1xyXG4gICAgICAgICAgICBpbmRleC5jdXJyZW50ID1cclxuICAgICAgICAgICAgICAgIHR5cGVvZiBuZXh0ICE9PSBcIm51bWJlclwiXHJcbiAgICAgICAgICAgICAgICAgICAgPyB3cmFwKDAsIGl0ZW1zLmxlbmd0aCwgaW5kZXguY3VycmVudCArIDEpXHJcbiAgICAgICAgICAgICAgICAgICAgOiBuZXh0O1xyXG4gICAgICAgICAgICBzZXRJdGVtKGl0ZW1zW2luZGV4LmN1cnJlbnRdKTtcclxuICAgICAgICB9LFxyXG4gICAgXTtcclxufVxuXG4vKipcclxuICogQ2FuIG1hbnVhbGx5IHRyaWdnZXIgYSBkcmFnIGdlc3R1cmUgb24gb25lIG9yIG1vcmUgYGRyYWdgLWVuYWJsZWQgYG1vdGlvbmAgY29tcG9uZW50cy5cclxuICpcclxuICogQGxpYnJhcnlcclxuICpcclxuICogYGBganN4XHJcbiAqIGNvbnN0IGRyYWdDb250cm9scyA9IHVzZURyYWdDb250cm9scygpXHJcbiAqXHJcbiAqIGZ1bmN0aW9uIHN0YXJ0RHJhZyhldmVudCkge1xyXG4gKiAgIGRyYWdDb250cm9scy5zdGFydChldmVudCwgeyBzbmFwVG9DdXJzb3I6IHRydWUgfSlcclxuICogfVxyXG4gKlxyXG4gKiByZXR1cm4gKFxyXG4gKiAgIDw+XHJcbiAqICAgICA8RnJhbWUgb25UYXBTdGFydD17c3RhcnREcmFnfSAvPlxyXG4gKiAgICAgPEZyYW1lIGRyYWc9XCJ4XCIgZHJhZ0NvbnRyb2xzPXtkcmFnQ29udHJvbHN9IC8+XHJcbiAqICAgPC8+XHJcbiAqIClcclxuICogYGBgXHJcbiAqXHJcbiAqIEBtb3Rpb25cclxuICpcclxuICogYGBganN4XHJcbiAqIGNvbnN0IGRyYWdDb250cm9scyA9IHVzZURyYWdDb250cm9scygpXHJcbiAqXHJcbiAqIGZ1bmN0aW9uIHN0YXJ0RHJhZyhldmVudCkge1xyXG4gKiAgIGRyYWdDb250cm9scy5zdGFydChldmVudCwgeyBzbmFwVG9DdXJzb3I6IHRydWUgfSlcclxuICogfVxyXG4gKlxyXG4gKiByZXR1cm4gKFxyXG4gKiAgIDw+XHJcbiAqICAgICA8ZGl2IG9uTW91c2VEb3duPXtzdGFydERyYWd9IC8+XHJcbiAqICAgICA8bW90aW9uLmRpdiBkcmFnPVwieFwiIGRyYWdDb250cm9scz17ZHJhZ0NvbnRyb2xzfSAvPlxyXG4gKiAgIDwvPlxyXG4gKiApXHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG52YXIgRHJhZ0NvbnRyb2xzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gRHJhZ0NvbnRyb2xzKCkge1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50Q29udHJvbHMgPSBuZXcgU2V0KCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFN1YnNjcmliZSBhIGNvbXBvbmVudCdzIGludGVybmFsIGBDb21wb25lbnREcmFnQ29udHJvbHNgIHRvIHRoZSB1c2VyLWZhY2luZyBBUEkuXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIERyYWdDb250cm9scy5wcm90b3R5cGUuc3Vic2NyaWJlID0gZnVuY3Rpb24gKGNvbnRyb2xzKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB0aGlzLmNvbXBvbmVudENvbnRyb2xzLmFkZChjb250cm9scyk7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLmNvbXBvbmVudENvbnRyb2xzLmRlbGV0ZShjb250cm9scyk7IH07XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTdGFydCBhIGRyYWcgZ2VzdHVyZSBvbiBldmVyeSBgbW90aW9uYCBjb21wb25lbnQgdGhhdCBoYXMgdGhpcyBzZXQgb2YgZHJhZyBjb250cm9sc1xyXG4gICAgICogcGFzc2VkIGludG8gaXQgdmlhIHRoZSBgZHJhZ0NvbnRyb2xzYCBwcm9wLlxyXG4gICAgICpcclxuICAgICAqIGBgYGpzeFxyXG4gICAgICogZHJhZ0NvbnRyb2xzLnN0YXJ0KGUsIHtcclxuICAgICAqICAgc25hcFRvQ3Vyc29yOiB0cnVlXHJcbiAgICAgKiB9KVxyXG4gICAgICogYGBgXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGV2ZW50IC0gQSBtb3VzZS90b3VjaC9wb2ludGVyIGV2ZW50LlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zXHJcbiAgICAgKlxyXG4gICAgICogQHB1YmxpY1xyXG4gICAgICovXHJcbiAgICBEcmFnQ29udHJvbHMucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKGV2ZW50LCBvcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRDb250cm9scy5mb3JFYWNoKGZ1bmN0aW9uIChjb250cm9scykge1xyXG4gICAgICAgICAgICBjb250cm9scy5zdGFydChldmVudC5uYXRpdmVFdmVudCB8fCBldmVudCwgb3B0aW9ucyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIERyYWdDb250cm9scztcclxufSgpKTtcclxudmFyIGNyZWF0ZURyYWdDb250cm9scyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldyBEcmFnQ29udHJvbHMoKTsgfTtcclxuLyoqXHJcbiAqIFVzdWFsbHksIGRyYWdnaW5nIGlzIGluaXRpYXRlZCBieSBwcmVzc2luZyBkb3duIG9uIGEgYG1vdGlvbmAgY29tcG9uZW50IHdpdGggYSBgZHJhZ2AgcHJvcFxyXG4gKiBhbmQgbW92aW5nIGl0LiBGb3Igc29tZSB1c2UtY2FzZXMsIGZvciBpbnN0YW5jZSBjbGlja2luZyBhdCBhbiBhcmJpdHJhcnkgcG9pbnQgb24gYSB2aWRlbyBzY3J1YmJlciwgd2VcclxuICogbWlnaHQgd2FudCB0byBpbml0aWF0ZSB0aGF0IGRyYWdnaW5nIGZyb20gYSBkaWZmZXJlbnQgY29tcG9uZW50IHRoYW4gdGhlIGRyYWdnYWJsZSBvbmUuXHJcbiAqXHJcbiAqIEJ5IGNyZWF0aW5nIGEgYGRyYWdDb250cm9sc2AgdXNpbmcgdGhlIGB1c2VEcmFnQ29udHJvbHNgIGhvb2ssIHdlIGNhbiBwYXNzIHRoaXMgaW50b1xyXG4gKiB0aGUgZHJhZ2dhYmxlIGNvbXBvbmVudCdzIGBkcmFnQ29udHJvbHNgIHByb3AuIEl0IGV4cG9zZXMgYSBgc3RhcnRgIG1ldGhvZFxyXG4gKiB0aGF0IGNhbiBzdGFydCBkcmFnZ2luZyBmcm9tIHBvaW50ZXIgZXZlbnRzIG9uIG90aGVyIGNvbXBvbmVudHMuXHJcbiAqXHJcbiAqIEBsaWJyYXJ5XHJcbiAqXHJcbiAqIGBgYGpzeFxyXG4gKiBjb25zdCBkcmFnQ29udHJvbHMgPSB1c2VEcmFnQ29udHJvbHMoKVxyXG4gKlxyXG4gKiBmdW5jdGlvbiBzdGFydERyYWcoZXZlbnQpIHtcclxuICogICBkcmFnQ29udHJvbHMuc3RhcnQoZXZlbnQsIHsgc25hcFRvQ3Vyc29yOiB0cnVlIH0pXHJcbiAqIH1cclxuICpcclxuICogcmV0dXJuIChcclxuICogICA8PlxyXG4gKiAgICAgPEZyYW1lIG9uVGFwU3RhcnQ9e3N0YXJ0RHJhZ30gLz5cclxuICogICAgIDxGcmFtZSBkcmFnPVwieFwiIGRyYWdDb250cm9scz17ZHJhZ0NvbnRyb2xzfSAvPlxyXG4gKiAgIDwvPlxyXG4gKiApXHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAbW90aW9uXHJcbiAqXHJcbiAqIGBgYGpzeFxyXG4gKiBjb25zdCBkcmFnQ29udHJvbHMgPSB1c2VEcmFnQ29udHJvbHMoKVxyXG4gKlxyXG4gKiBmdW5jdGlvbiBzdGFydERyYWcoZXZlbnQpIHtcclxuICogICBkcmFnQ29udHJvbHMuc3RhcnQoZXZlbnQsIHsgc25hcFRvQ3Vyc29yOiB0cnVlIH0pXHJcbiAqIH1cclxuICpcclxuICogcmV0dXJuIChcclxuICogICA8PlxyXG4gKiAgICAgPGRpdiBvbk1vdXNlRG93bj17c3RhcnREcmFnfSAvPlxyXG4gKiAgICAgPG1vdGlvbi5kaXYgZHJhZz1cInhcIiBkcmFnQ29udHJvbHM9e2RyYWdDb250cm9sc30gLz5cclxuICogICA8Lz5cclxuICogKVxyXG4gKiBgYGBcclxuICpcclxuICogQHB1YmxpY1xyXG4gKi9cclxuZnVuY3Rpb24gdXNlRHJhZ0NvbnRyb2xzKCkge1xyXG4gICAgcmV0dXJuIHVzZUNvbnN0YW50KGNyZWF0ZURyYWdDb250cm9scyk7XHJcbn1cblxudmFyIFByZXNlbmNlQ2hpbGQgPSBmdW5jdGlvbiAoX2EpIHtcclxuICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBpbml0aWFsID0gX2EuaW5pdGlhbCwgaXNQcmVzZW50ID0gX2EuaXNQcmVzZW50LCBvbkV4aXRDb21wbGV0ZSA9IF9hLm9uRXhpdENvbXBsZXRlLCBjdXN0b20gPSBfYS5jdXN0b207XHJcbiAgICB2YXIgbnVtUHJlc2VuY2VDaGlsZHJlbiA9IHVzZVJlZigwKTtcclxuICAgIHZhciBudW1FeGl0Q29tcGxldGUgPSB1c2VSZWYoMCk7XHJcbiAgICB2YXIgY29udGV4dCA9IHtcclxuICAgICAgICBpbml0aWFsOiBpbml0aWFsLFxyXG4gICAgICAgIGlzUHJlc2VudDogaXNQcmVzZW50LFxyXG4gICAgICAgIGN1c3RvbTogY3VzdG9tLFxyXG4gICAgICAgIG9uRXhpdENvbXBsZXRlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIG51bUV4aXRDb21wbGV0ZS5jdXJyZW50Kys7XHJcbiAgICAgICAgICAgIHZhciBhbGxDb21wbGV0ZSA9IG51bUV4aXRDb21wbGV0ZS5jdXJyZW50ID49IG51bVByZXNlbmNlQ2hpbGRyZW4uY3VycmVudDtcclxuICAgICAgICAgICAgb25FeGl0Q29tcGxldGUgJiYgYWxsQ29tcGxldGUgJiYgb25FeGl0Q29tcGxldGUoKTtcclxuICAgICAgICB9LFxyXG4gICAgfTtcclxuICAgIHZhciByZWdpc3RlciA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIG51bUV4aXRDb21wbGV0ZS5jdXJyZW50ID0gMDtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBudW1QcmVzZW5jZUNoaWxkcmVuLmN1cnJlbnQrKztcclxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIG51bVByZXNlbmNlQ2hpbGRyZW4uY3VycmVudC0tOyB9O1xyXG4gICAgICAgIH07XHJcbiAgICB9LCBbaXNQcmVzZW50XSk7XHJcbiAgICByZXR1cm4gKGNyZWF0ZUVsZW1lbnQoUHJlc2VuY2VDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgY29udGV4dCksIHsgcmVnaXN0ZXI6IHJlZ2lzdGVyIH0pIH0sIGNoaWxkcmVuKSk7XHJcbn07XG5cbmZ1bmN0aW9uIGdldENoaWxkS2V5KGNoaWxkKSB7XHJcbiAgICByZXR1cm4gY2hpbGQua2V5IHx8IFwiXCI7XHJcbn1cclxuZnVuY3Rpb24gdXBkYXRlQ2hpbGRMb29rdXAoY2hpbGRyZW4sIGFsbENoaWxkcmVuKSB7XHJcbiAgICB2YXIgc2VlbkNoaWxkcmVuID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gbmV3IFNldCgpIDogbnVsbDtcclxuICAgIGNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XHJcbiAgICAgICAgdmFyIGtleSA9IGdldENoaWxkS2V5KGNoaWxkKTtcclxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiICYmIHNlZW5DaGlsZHJlbikge1xyXG4gICAgICAgICAgICBpZiAoc2VlbkNoaWxkcmVuLmhhcyhrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJDaGlsZHJlbiBvZiBBbmltYXRlUHJlc2VuY2UgcmVxdWlyZSB1bmlxdWUga2V5cy4gXFxcIlwiICsga2V5ICsgXCJcXFwiIGlzIGEgZHVwbGljYXRlLlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzZWVuQ2hpbGRyZW4uYWRkKGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFsbENoaWxkcmVuLnNldChrZXksIGNoaWxkKTtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIG9ubHlFbGVtZW50cyhjaGlsZHJlbikge1xyXG4gICAgdmFyIGZpbHRlcmVkID0gW107XHJcbiAgICAvLyBXZSB1c2UgZm9yRWFjaCBoZXJlIGluc3RlYWQgb2YgbWFwIGFzIG1hcCBtdXRhdGVzIHRoZSBjb21wb25lbnQga2V5IGJ5IHByZXByZW5kaW5nIGAuJGBcclxuICAgIENoaWxkcmVuLmZvckVhY2goY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xyXG4gICAgICAgIGlmIChpc1ZhbGlkRWxlbWVudChjaGlsZCkpXHJcbiAgICAgICAgICAgIGZpbHRlcmVkLnB1c2goY2hpbGQpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZmlsdGVyZWQ7XHJcbn1cclxuLyoqXHJcbiAqIGBBbmltYXRlUHJlc2VuY2VgIGVuYWJsZXMgdGhlIGFuaW1hdGlvbiBvZiBjb21wb25lbnRzIHRoYXQgaGF2ZSBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgdHJlZS5cclxuICpcclxuICogV2hlbiBhZGRpbmcvcmVtb3ZpbmcgbW9yZSB0aGFuIGEgc2luZ2xlIGNoaWxkLCBldmVyeSBjaGlsZCAqKm11c3QqKiBiZSBnaXZlbiBhIHVuaXF1ZSBga2V5YCBwcm9wLlxyXG4gKlxyXG4gKiBAbGlicmFyeVxyXG4gKlxyXG4gKiBBbnkgYEZyYW1lYCBjb21wb25lbnRzIHRoYXQgaGF2ZSBhbiBgZXhpdGAgcHJvcGVydHkgZGVmaW5lZCB3aWxsIGFuaW1hdGUgb3V0IHdoZW4gcmVtb3ZlZCBmcm9tXHJcbiAqIHRoZSB0cmVlLlxyXG4gKlxyXG4gKiBgYGBqc3hcclxuICogaW1wb3J0IHsgRnJhbWUsIEFuaW1hdGVQcmVzZW5jZSB9IGZyb20gJ2ZyYW1lcidcclxuICpcclxuICogLy8gQXMgaXRlbXMgYXJlIGFkZGVkIGFuZCByZW1vdmVkIGZyb20gYGl0ZW1zYFxyXG4gKiBleHBvcnQgZnVuY3Rpb24gSXRlbXMoeyBpdGVtcyB9KSB7XHJcbiAqICAgcmV0dXJuIChcclxuICogICAgIDxBbmltYXRlUHJlc2VuY2U+XHJcbiAqICAgICAgIHtpdGVtcy5tYXAoaXRlbSA9PiAoXHJcbiAqICAgICAgICAgPEZyYW1lXHJcbiAqICAgICAgICAgICBrZXk9e2l0ZW0uaWR9XHJcbiAqICAgICAgICAgICBpbml0aWFsPXt7IG9wYWNpdHk6IDAgfX1cclxuICogICAgICAgICAgIGFuaW1hdGU9e3sgb3BhY2l0eTogMSB9fVxyXG4gKiAgICAgICAgICAgZXhpdD17eyBvcGFjaXR5OiAwIH19XHJcbiAqICAgICAgICAgLz5cclxuICogICAgICAgKSl9XHJcbiAqICAgICA8L0FuaW1hdGVQcmVzZW5jZT5cclxuICogICApXHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIFlvdSBjYW4gc2VxdWVuY2UgZXhpdCBhbmltYXRpb25zIHRocm91Z2hvdXQgYSB0cmVlIHVzaW5nIHZhcmlhbnRzLlxyXG4gKlxyXG4gKiBAbW90aW9uXHJcbiAqXHJcbiAqIEFueSBgbW90aW9uYCBjb21wb25lbnRzIHRoYXQgaGF2ZSBhbiBgZXhpdGAgcHJvcGVydHkgZGVmaW5lZCB3aWxsIGFuaW1hdGUgb3V0IHdoZW4gcmVtb3ZlZCBmcm9tXHJcbiAqIHRoZSB0cmVlLlxyXG4gKlxyXG4gKiBgYGBqc3hcclxuICogaW1wb3J0IHsgbW90aW9uLCBBbmltYXRlUHJlc2VuY2UgfSBmcm9tICdmcmFtZXItbW90aW9uJ1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgSXRlbXMgPSAoeyBpdGVtcyB9KSA9PiAoXHJcbiAqICAgPEFuaW1hdGVQcmVzZW5jZT5cclxuICogICAgIHtpdGVtcy5tYXAoaXRlbSA9PiAoXHJcbiAqICAgICAgIDxtb3Rpb24uZGl2XHJcbiAqICAgICAgICAga2V5PXtpdGVtLmlkfVxyXG4gKiAgICAgICAgIGluaXRpYWw9e3sgb3BhY2l0eTogMCB9fVxyXG4gKiAgICAgICAgIGFuaW1hdGU9e3sgb3BhY2l0eTogMSB9fVxyXG4gKiAgICAgICAgIGV4aXQ9e3sgb3BhY2l0eTogMCB9fVxyXG4gKiAgICAgICAvPlxyXG4gKiAgICAgKSl9XHJcbiAqICAgPC9BbmltYXRlUHJlc2VuY2U+XHJcbiAqIClcclxuICogYGBgXHJcbiAqXHJcbiAqIFlvdSBjYW4gc2VxdWVuY2UgZXhpdCBhbmltYXRpb25zIHRocm91Z2hvdXQgYSB0cmVlIHVzaW5nIHZhcmlhbnRzLlxyXG4gKlxyXG4gKiBJZiBhIGNoaWxkIGNvbnRhaW5zIG11bHRpcGxlIGBtb3Rpb25gIGNvbXBvbmVudHMgd2l0aCBgZXhpdGAgcHJvcHMsIGl0IHdpbGwgb25seSB1bm1vdW50IHRoZSBjaGlsZFxyXG4gKiBvbmNlIGFsbCBgbW90aW9uYCBjb21wb25lbnRzIGhhdmUgZmluaXNoZWQgYW5pbWF0aW5nIG91dC4gTGlrZXdpc2UsIGFueSBjb21wb25lbnRzIHVzaW5nXHJcbiAqIGB1c2VQcmVzZW5jZWAgYWxsIG5lZWQgdG8gY2FsbCBgc2FmZVRvUmVtb3ZlYC5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKi9cclxudmFyIEFuaW1hdGVQcmVzZW5jZSA9IGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW4sIGN1c3RvbSA9IF9hLmN1c3RvbSwgX2IgPSBfYS5pbml0aWFsLCBpbml0aWFsID0gX2IgPT09IHZvaWQgMCA/IHRydWUgOiBfYiwgb25FeGl0Q29tcGxldGUgPSBfYS5vbkV4aXRDb21wbGV0ZSwgZXhpdEJlZm9yZUVudGVyID0gX2EuZXhpdEJlZm9yZUVudGVyO1xyXG4gICAgLy8gV2Ugd2FudCB0byBmb3JjZSBhIHJlLXJlbmRlciBvbmNlIGFsbCBleGl0aW5nIGFuaW1hdGlvbnMgaGF2ZSBmaW5pc2hlZC4gV2VcclxuICAgIC8vIGVpdGhlciB1c2UgYSBsb2NhbCBmb3JjZVVwZGF0ZSBmdW5jdGlvbiwgb3Igb25lIGZyb20gYSBwYXJlbnQgY29udGV4dCBpZiBpdCBleGlzdHMuXHJcbiAgICB2YXIgbG9jYWxGb3JjZVVwZGF0ZSA9IHVzZUZvcmNlVXBkYXRlKCk7XHJcbiAgICB2YXIgY29udGV4dEZvcmNlVXBkYXRlID0gdXNlQ29udGV4dChTeW5jTGF5b3V0Q29udGV4dCk7XHJcbiAgICB2YXIgZm9yY2VVcGRhdGUgPSBjb250ZXh0Rm9yY2VVcGRhdGUgfHwgbG9jYWxGb3JjZVVwZGF0ZTtcclxuICAgIHZhciBpc0luaXRpYWxSZW5kZXIgPSB1c2VSZWYodHJ1ZSk7XHJcbiAgICAvLyBGaWx0ZXIgb3V0IGFueSBjaGlsZHJlbiB0aGF0IGFyZW4ndCBSZWFjdEVsZW1lbnRzLiBXZSBjYW4gb25seSB0cmFjayBSZWFjdEVsZW1lbnRzIHdpdGggYSBwcm9wcy5rZXlcclxuICAgIHZhciBmaWx0ZXJlZENoaWxkcmVuID0gb25seUVsZW1lbnRzKGNoaWxkcmVuKTtcclxuICAgIC8vIEtlZXAgYSBsaXZpbmcgcmVjb3JkIG9mIHRoZSBjaGlsZHJlbiB3ZSdyZSBhY3R1YWxseSByZW5kZXJpbmcgc28gd2VcclxuICAgIC8vIGNhbiBkaWZmIHRvIGZpZ3VyZSBvdXQgd2hpY2ggYXJlIGVudGVyaW5nIGFuZCBleGl0aW5nXHJcbiAgICB2YXIgcHJlc2VudENoaWxkcmVuID0gdXNlUmVmKGZpbHRlcmVkQ2hpbGRyZW4pO1xyXG4gICAgLy8gQSBsb29rdXAgdGFibGUgdG8gcXVpY2tseSByZWZlcmVuY2UgY29tcG9uZW50cyBieSBrZXlcclxuICAgIHZhciBhbGxDaGlsZHJlbiA9IHVzZVJlZihuZXcgTWFwKCkpXHJcbiAgICAgICAgLmN1cnJlbnQ7XHJcbiAgICAvLyBBIGxpdmluZyByZWNvcmQgb2YgYWxsIGN1cnJlbnRseSBleGl0aW5nIGNvbXBvbmVudHMuXHJcbiAgICB2YXIgZXhpdGluZyA9IHVzZVJlZihuZXcgU2V0KCkpLmN1cnJlbnQ7XHJcbiAgICB1cGRhdGVDaGlsZExvb2t1cChmaWx0ZXJlZENoaWxkcmVuLCBhbGxDaGlsZHJlbik7XHJcbiAgICAvLyBJZiB0aGlzIGlzIHRoZSBpbml0aWFsIGNvbXBvbmVudCByZW5kZXIsIGp1c3QgZGVhbCB3aXRoIGxvZ2ljIHN1cnJvdW5kaW5nIHdoZXRoZXJcclxuICAgIC8vIHdlIHBsYXkgb25Nb3VudCBhbmltYXRpb25zIG9yIG5vdC5cclxuICAgIGlmIChpc0luaXRpYWxSZW5kZXIuY3VycmVudCkge1xyXG4gICAgICAgIGlzSW5pdGlhbFJlbmRlci5jdXJyZW50ID0gZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuIChjcmVhdGVFbGVtZW50KEZyYWdtZW50LCBudWxsLCBmaWx0ZXJlZENoaWxkcmVuLm1hcChmdW5jdGlvbiAoY2hpbGQpIHsgcmV0dXJuIChjcmVhdGVFbGVtZW50KFByZXNlbmNlQ2hpbGQsIHsga2V5OiBnZXRDaGlsZEtleShjaGlsZCksIGlzUHJlc2VudDogdHJ1ZSwgaW5pdGlhbDogaW5pdGlhbCA/IHVuZGVmaW5lZCA6IGZhbHNlIH0sIGNoaWxkKSk7IH0pKSk7XHJcbiAgICB9XHJcbiAgICAvLyBJZiB0aGlzIGlzIGEgc3Vic2VxdWVudCByZW5kZXIsIGRlYWwgd2l0aCBlbnRlcmluZyBhbmQgZXhpdGluZyBjaGlsZHJlblxyXG4gICAgdmFyIGNoaWxkcmVuVG9SZW5kZXIgPSBfX3NwcmVhZEFycmF5cyhmaWx0ZXJlZENoaWxkcmVuKTtcclxuICAgIC8vIERpZmYgdGhlIGtleXMgb2YgdGhlIGN1cnJlbnRseS1wcmVzZW50IGFuZCB0YXJnZXQgY2hpbGRyZW4gdG8gdXBkYXRlIG91clxyXG4gICAgLy8gZXhpdGluZyBsaXN0LlxyXG4gICAgdmFyIHByZXNlbnRLZXlzID0gcHJlc2VudENoaWxkcmVuLmN1cnJlbnQubWFwKGdldENoaWxkS2V5KTtcclxuICAgIHZhciB0YXJnZXRLZXlzID0gZmlsdGVyZWRDaGlsZHJlbi5tYXAoZ2V0Q2hpbGRLZXkpO1xyXG4gICAgLy8gRGlmZiB0aGUgcHJlc2VudCBjaGlsZHJlbiB3aXRoIG91ciB0YXJnZXQgY2hpbGRyZW4gYW5kIG1hcmsgdGhvc2UgdGhhdCBhcmUgZXhpdGluZ1xyXG4gICAgdmFyIG51bVByZXNlbnQgPSBwcmVzZW50S2V5cy5sZW5ndGg7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bVByZXNlbnQ7IGkrKykge1xyXG4gICAgICAgIHZhciBrZXkgPSBwcmVzZW50S2V5c1tpXTtcclxuICAgICAgICBpZiAodGFyZ2V0S2V5cy5pbmRleE9mKGtleSkgPT09IC0xKSB7XHJcbiAgICAgICAgICAgIGV4aXRpbmcuYWRkKGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBJbiBjYXNlIHRoaXMga2V5IGhhcyByZS1lbnRlcmVkLCByZW1vdmUgZnJvbSB0aGUgZXhpdGluZyBsaXN0XHJcbiAgICAgICAgICAgIGV4aXRpbmcuZGVsZXRlKGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gSWYgd2UgY3VycmVudGx5IGhhdmUgZXhpdGluZyBjaGlsZHJlbiwgYW5kIHdlJ3JlIGRlZmVycmluZyByZW5kZXJpbmcgaW5jb21pbmcgY2hpbGRyZW5cclxuICAgIC8vIHVudGlsIGFmdGVyIGFsbCBjdXJyZW50IGNoaWxkcmVuIGhhdmUgZXhpdGluZywgZW1wdHkgdGhlIGNoaWxkcmVuVG9SZW5kZXIgYXJyYXlcclxuICAgIGlmIChleGl0QmVmb3JlRW50ZXIgJiYgZXhpdGluZy5zaXplKSB7XHJcbiAgICAgICAgY2hpbGRyZW5Ub1JlbmRlciA9IFtdO1xyXG4gICAgfVxyXG4gICAgLy8gTG9vcCB0aHJvdWdoIGFsbCBjdXJyZW50bHkgZXhpdGluZyBjb21wb25lbnRzIGFuZCBjbG9uZSB0aGVtIHRvIG92ZXJ3cml0ZSBgYW5pbWF0ZWBcclxuICAgIC8vIHdpdGggYW55IGBleGl0YCBwcm9wIHRoZXkgbWlnaHQgaGF2ZSBkZWZpbmVkLlxyXG4gICAgZXhpdGluZy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICAvLyBJZiB0aGlzIGNvbXBvbmVudCBpcyBhY3R1YWxseSBlbnRlcmluZyBhZ2FpbiwgZWFybHkgcmV0dXJuXHJcbiAgICAgICAgaWYgKHRhcmdldEtleXMuaW5kZXhPZihrZXkpICE9PSAtMSlcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHZhciBjaGlsZCA9IGFsbENoaWxkcmVuLmdldChrZXkpO1xyXG4gICAgICAgIGlmICghY2hpbGQpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB2YXIgaW5zZXJ0aW9uSW5kZXggPSBwcmVzZW50S2V5cy5pbmRleE9mKGtleSk7XHJcbiAgICAgICAgdmFyIG9uRXhpdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZXhpdGluZy5kZWxldGUoa2V5KTtcclxuICAgICAgICAgICAgLy8gUmVtb3ZlIHRoaXMgY2hpbGQgZnJvbSB0aGUgcHJlc2VudCBjaGlsZHJlblxyXG4gICAgICAgICAgICB2YXIgcmVtb3ZlSW5kZXggPSBwcmVzZW50Q2hpbGRyZW4uY3VycmVudC5maW5kSW5kZXgoZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiBjaGlsZC5rZXkgPT09IGtleTsgfSk7XHJcbiAgICAgICAgICAgIHByZXNlbnRDaGlsZHJlbi5jdXJyZW50LnNwbGljZShyZW1vdmVJbmRleCwgMSk7XHJcbiAgICAgICAgICAgIC8vIERlZmVyIHJlLXJlbmRlcmluZyB1bnRpbCBhbGwgZXhpdGluZyBjaGlsZHJlbiBoYXZlIGluZGVlZCBsZWZ0XHJcbiAgICAgICAgICAgIGlmICghZXhpdGluZy5zaXplKSB7XHJcbiAgICAgICAgICAgICAgICBwcmVzZW50Q2hpbGRyZW4uY3VycmVudCA9IGZpbHRlcmVkQ2hpbGRyZW47XHJcbiAgICAgICAgICAgICAgICBmb3JjZVVwZGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgb25FeGl0Q29tcGxldGUgJiYgb25FeGl0Q29tcGxldGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY2hpbGRyZW5Ub1JlbmRlci5zcGxpY2UoaW5zZXJ0aW9uSW5kZXgsIDAsIGNyZWF0ZUVsZW1lbnQoUHJlc2VuY2VDaGlsZCwgeyBrZXk6IGdldENoaWxkS2V5KGNoaWxkKSwgaXNQcmVzZW50OiBmYWxzZSwgb25FeGl0Q29tcGxldGU6IG9uRXhpdCwgY3VzdG9tOiBjdXN0b20gfSwgY2hpbGQpKTtcclxuICAgIH0pO1xyXG4gICAgLy8gQWRkIGBNb3Rpb25Db250ZXh0YCBldmVuIHRvIGNoaWxkcmVuIHRoYXQgZG9uJ3QgbmVlZCBpdCB0byBlbnN1cmUgd2UncmUgcmVuZGVyaW5nXHJcbiAgICAvLyB0aGUgc2FtZSB0cmVlIGJldHdlZW4gcmVuZGVyc1xyXG4gICAgY2hpbGRyZW5Ub1JlbmRlciA9IGNoaWxkcmVuVG9SZW5kZXIubWFwKGZ1bmN0aW9uIChjaGlsZCkge1xyXG4gICAgICAgIHZhciBrZXkgPSBjaGlsZC5rZXk7XHJcbiAgICAgICAgcmV0dXJuIGV4aXRpbmcuaGFzKGtleSkgPyAoY2hpbGQpIDogKGNyZWF0ZUVsZW1lbnQoUHJlc2VuY2VDaGlsZCwgeyBrZXk6IGdldENoaWxkS2V5KGNoaWxkKSwgaXNQcmVzZW50OiB0cnVlIH0sIGNoaWxkKSk7XHJcbiAgICB9KTtcclxuICAgIHByZXNlbnRDaGlsZHJlbi5jdXJyZW50ID0gY2hpbGRyZW5Ub1JlbmRlcjtcclxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgJiZcclxuICAgICAgICBleGl0QmVmb3JlRW50ZXIgJiZcclxuICAgICAgICBjaGlsZHJlblRvUmVuZGVyLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICBjb25zb2xlLndhcm4oXCJZb3UncmUgYXR0ZW1wdGluZyB0byBhbmltYXRlIG11bHRpcGxlIGNoaWxkcmVuIHdpdGhpbiBBbmltYXRlUHJlc2VuY2UsIGJ1dCBpdHMgZXhpdEJlZm9yZUVudGVyIHByb3AgaXMgc2V0IHRvIHRydWUuIFRoaXMgd2lsbCBsZWFkIHRvIG9kZCB2aXN1YWwgYmVoYXZpb3VyLlwiKTtcclxuICAgIH1cclxuICAgIHJldHVybiAoY3JlYXRlRWxlbWVudChGcmFnbWVudCwgbnVsbCwgZXhpdGluZy5zaXplXHJcbiAgICAgICAgPyBjaGlsZHJlblRvUmVuZGVyXHJcbiAgICAgICAgOiBjaGlsZHJlblRvUmVuZGVyLm1hcChmdW5jdGlvbiAoY2hpbGQpIHsgcmV0dXJuIGNsb25lRWxlbWVudChjaGlsZCk7IH0pKSk7XHJcbn07XG5cbi8vIERvZXMgdGhpcyBkZXZpY2UgcHJlZmVyIHJlZHVjZWQgbW90aW9uPyBSZXR1cm5zIGBudWxsYCBzZXJ2ZXItc2lkZS5cclxudmFyIHByZWZlcnNSZWR1Y2VkTW90aW9uID0gbW90aW9uVmFsdWUobnVsbCk7XHJcbmlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICBpZiAod2luZG93Lm1hdGNoTWVkaWEpIHtcclxuICAgICAgICB2YXIgbW90aW9uTWVkaWFRdWVyeV8xID0gd2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1yZWR1Y2VkLW1vdGlvbilcIik7XHJcbiAgICAgICAgdmFyIHNldFJlZHVjZWRNb3Rpb25QcmVmZXJlbmNlcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHByZWZlcnNSZWR1Y2VkTW90aW9uLnNldChtb3Rpb25NZWRpYVF1ZXJ5XzEubWF0Y2hlcyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBtb3Rpb25NZWRpYVF1ZXJ5XzEuYWRkTGlzdGVuZXIoc2V0UmVkdWNlZE1vdGlvblByZWZlcmVuY2VzKTtcclxuICAgICAgICBzZXRSZWR1Y2VkTW90aW9uUHJlZmVyZW5jZXMoKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHByZWZlcnNSZWR1Y2VkTW90aW9uLnNldChmYWxzZSk7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gZGV0ZXJtaW5lU2hvdWxkUmVkdWNlTW90aW9uKHByZWZlcnNSZWR1Y2VkLCBpc1JlZHVjZWRNb3Rpb24pIHtcclxuICAgIHJldHVybiB0eXBlb2YgaXNSZWR1Y2VkTW90aW9uID09PSBcImJvb2xlYW5cIlxyXG4gICAgICAgID8gaXNSZWR1Y2VkTW90aW9uXHJcbiAgICAgICAgOiBCb29sZWFuKHByZWZlcnNSZWR1Y2VkKTtcclxufVxuXG4vKipcclxuICogQSBob29rIHRoYXQgcmV0dXJucyBgdHJ1ZWAgaWYgd2Ugc2hvdWxkIGJlIHVzaW5nIHJlZHVjZWQgbW90aW9uIGJhc2VkIG9uIHRoZSBjdXJyZW50IGRldmljZSdzIFJlZHVjZWQgTW90aW9uIHNldHRpbmcuXHJcbiAqXHJcbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gaW1wbGVtZW50IGNoYW5nZXMgdG8geW91ciBVSSBiYXNlZCBvbiBSZWR1Y2VkIE1vdGlvbi4gRm9yIGluc3RhbmNlLCByZXBsYWNpbmcgbW90aW9uLXNpY2tuZXNzIGluZHVjaW5nXHJcbiAqIGB4YC9geWAgYW5pbWF0aW9ucyB3aXRoIGBvcGFjaXR5YCwgZGlzYWJsaW5nIHRoZSBhdXRvcGxheSBvZiBiYWNrZ3JvdW5kIHZpZGVvcywgb3IgdHVybmluZyBvZmYgcGFyYWxsYXggbW90aW9uLlxyXG4gKlxyXG4gKiBJdCB3aWxsIGFjdGl2ZWx5IHJlc3BvbmQgdG8gY2hhbmdlcyBhbmQgcmUtcmVuZGVyIHlvdXIgY29tcG9uZW50cyB3aXRoIHRoZSBsYXRlc3Qgc2V0dGluZy5cclxuICpcclxuICogYGBganN4XHJcbiAqIGV4cG9ydCBmdW5jdGlvbiBTaWRlYmFyKHsgaXNPcGVuIH0pIHtcclxuICogICBjb25zdCBzaG91bGRSZWR1Y2VNb3Rpb24gPSB1c2VSZWR1Y2VkTW90aW9uKClcclxuICogICBjb25zdCBjbG9zZWRYID0gc2hvdWxkUmVkdWNlTW90aW9uID8gMCA6IFwiLTEwMCVcIlxyXG4gKlxyXG4gKiAgIHJldHVybiAoXHJcbiAqICAgICA8bW90aW9uLmRpdiBhbmltYXRlPXt7XHJcbiAqICAgICAgIG9wYWNpdHk6IGlzT3BlbiA/IDEgOiAwLFxyXG4gKiAgICAgICB4OiBpc09wZW4gPyAwIDogY2xvc2VkWFxyXG4gKiAgICAgfX0gLz5cclxuICogICApXHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIEByZXR1cm4gYm9vbGVhblxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiB1c2VSZWR1Y2VkTW90aW9uKCkge1xyXG4gICAgdmFyIGlzUmVkdWNlZE1vdGlvbiA9IHVzZUNvbnRleHQoTW90aW9uQ29udGV4dCkuaXNSZWR1Y2VkTW90aW9uO1xyXG4gICAgdmFyIF9hID0gdXNlU3RhdGUoZGV0ZXJtaW5lU2hvdWxkUmVkdWNlTW90aW9uKHByZWZlcnNSZWR1Y2VkTW90aW9uLmdldCgpLCBpc1JlZHVjZWRNb3Rpb24pKSwgc2hvdWxkUmVkdWNlTW90aW9uID0gX2FbMF0sIHNldFNob3VsZFJlZHVjZU1vdGlvbiA9IF9hWzFdO1xyXG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gcHJlZmVyc1JlZHVjZWRNb3Rpb24ub25DaGFuZ2UoZnVuY3Rpb24gKHYpIHtcclxuICAgICAgICAgICAgc2V0U2hvdWxkUmVkdWNlTW90aW9uKGRldGVybWluZVNob3VsZFJlZHVjZU1vdGlvbih2LCBpc1JlZHVjZWRNb3Rpb24pKTtcclxuICAgICAgICB9KTtcclxuICAgIH0sIFtzZXRTaG91bGRSZWR1Y2VNb3Rpb24sIGlzUmVkdWNlZE1vdGlvbl0pO1xyXG4gICAgcmV0dXJuIHNob3VsZFJlZHVjZU1vdGlvbjtcclxufVxuXG4vKipcclxuICogRGVmaW5lIGFjY2Vzc2liaWxpdHkgb3B0aW9ucyBmb3IgYSB0cmVlLiBDYW4gYmUgdXNlZCB0byBmb3JjZSB0aGUgdHJlZSBpbnRvIFJlZHVjZWQgTW90aW9uIG1vZGUsXHJcbiAqIG9yIGRpc2FibGUgZGV2aWNlIGRldGVjdGlvbi5cclxuICpcclxuICogQGludGVybmFsXHJcbiAqL1xyXG5mdW5jdGlvbiBSZWR1Y2VkTW90aW9uKF9hKSB7XHJcbiAgICB2YXIgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbiwgZW5hYmxlZCA9IF9hLmVuYWJsZWQ7XHJcbiAgICB2YXIgY29udGV4dCA9IHVzZUNvbnRleHQoTW90aW9uQ29udGV4dCk7XHJcbiAgICBjb250ZXh0ID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7IHJldHVybiAoX19hc3NpZ24oX19hc3NpZ24oe30sIGNvbnRleHQpLCB7IGlzUmVkdWNlZE1vdGlvbjogZW5hYmxlZCB9KSk7IH0sIFtlbmFibGVkXSk7XHJcbiAgICByZXR1cm4gKGNyZWF0ZUVsZW1lbnQoTW90aW9uQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogY29udGV4dCB9LCBjaGlsZHJlbikpO1xyXG59XG5cbmV4cG9ydCB7IEFuaW1hdGVQcmVzZW5jZSwgQW5pbWF0aW9uQ29udHJvbHMsIERyYWdDb250cm9scywgTW90aW9uQ29udGV4dCwgTW90aW9uUGx1Z2luQ29udGV4dCwgTW90aW9uUGx1Z2lucywgTW90aW9uVmFsdWUsIFBvaW50LCBSZWR1Y2VkTW90aW9uLCBVbnN0YWJsZVN5bmNMYXlvdXQsIGFuaW1hdGlvbkNvbnRyb2xzLCBjcmVhdGVNb3Rpb25Db21wb25lbnQsIGlzVmFsaWRNb3Rpb25Qcm9wLCBtb3Rpb24sIG1vdGlvblZhbHVlLCB0cmFuc2Zvcm0sIHVud3JhcE1vdGlvblZhbHVlLCB1c2VBbmltYXRlZFN0YXRlLCB1c2VBbmltYXRpb24sIHVzZUN5Y2xlLCB1c2VEb21FdmVudCwgdXNlRHJhZ0NvbnRyb2xzLCB1c2VFbGVtZW50U2Nyb2xsLCB1c2VFeHRlcm5hbFJlZiwgdXNlR2VzdHVyZXMsIHVzZUludmVydGVkU2NhbGUsIHVzZU1vdGlvblZhbHVlLCB1c2VQYW5HZXN0dXJlLCB1c2VQcmVzZW5jZSwgdXNlUmVkdWNlZE1vdGlvbiwgdXNlU3ByaW5nLCB1c2VUYXBHZXN0dXJlLCB1c2VUcmFuc2Zvcm0sIHVzZVZpZXdwb3J0U2Nyb2xsIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/framer-motion/dist/framer-motion.es.js\n");

/***/ }),

/***/ "./node_modules/framesync/dist/framesync.es.js":
/*!*****************************************************!*\
  !*** ./node_modules/framesync/dist/framesync.es.js ***!
  \*****************************************************/
/*! exports provided: default, cancelSync, getFrameData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cancelSync\", function() { return cancelSync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFrameData\", function() { return getFrameData; });\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hey-listen */ \"./node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\nvar prevTime = 0;\r\nvar onNextFrame = typeof window !== 'undefined' && window.requestAnimationFrame !== undefined\r\n    ? function (callback) { return window.requestAnimationFrame(callback); }\r\n    : function (callback) {\r\n        var timestamp = Date.now();\r\n        var timeToCall = Math.max(0, 16.7 - (timestamp - prevTime));\r\n        prevTime = timestamp + timeToCall;\r\n        setTimeout(function () { return callback(prevTime); }, timeToCall);\r\n    };\n\nvar createStep = (function (setRunNextFrame) {\r\n    var processToRun = [];\r\n    var processToRunNextFrame = [];\r\n    var numThisFrame = 0;\r\n    var isProcessing = false;\r\n    var i = 0;\r\n    var cancelled = new WeakSet();\r\n    var toKeepAlive = new WeakSet();\r\n    var renderStep = {\r\n        cancel: function (process) {\r\n            var indexOfCallback = processToRunNextFrame.indexOf(process);\r\n            cancelled.add(process);\r\n            if (indexOfCallback !== -1) {\r\n                processToRunNextFrame.splice(indexOfCallback, 1);\r\n            }\r\n        },\r\n        process: function (frame) {\r\n            var _a;\r\n            isProcessing = true;\r\n            _a = [\r\n                processToRunNextFrame,\r\n                processToRun\r\n            ], processToRun = _a[0], processToRunNextFrame = _a[1];\r\n            processToRunNextFrame.length = 0;\r\n            numThisFrame = processToRun.length;\r\n            if (numThisFrame) {\r\n                var process_1;\r\n                for (i = 0; i < numThisFrame; i++) {\r\n                    process_1 = processToRun[i];\r\n                    process_1(frame);\r\n                    if (toKeepAlive.has(process_1) === true && !cancelled.has(process_1)) {\r\n                        renderStep.schedule(process_1);\r\n                        setRunNextFrame(true);\r\n                    }\r\n                }\r\n            }\r\n            isProcessing = false;\r\n        },\r\n        schedule: function (process, keepAlive, immediate) {\r\n            if (keepAlive === void 0) { keepAlive = false; }\r\n            if (immediate === void 0) { immediate = false; }\r\n            Object(hey_listen__WEBPACK_IMPORTED_MODULE_0__[\"invariant\"])(typeof process === 'function', 'Argument must be a function');\r\n            var addToCurrentBuffer = immediate && isProcessing;\r\n            var buffer = addToCurrentBuffer ? processToRun : processToRunNextFrame;\r\n            cancelled.delete(process);\r\n            if (keepAlive)\r\n                toKeepAlive.add(process);\r\n            if (buffer.indexOf(process) === -1) {\r\n                buffer.push(process);\r\n                if (addToCurrentBuffer)\r\n                    numThisFrame = processToRun.length;\r\n            }\r\n        }\r\n    };\r\n    return renderStep;\r\n});\n\nvar StepId;\r\n(function (StepId) {\r\n    StepId[\"Read\"] = \"read\";\r\n    StepId[\"Update\"] = \"update\";\r\n    StepId[\"Render\"] = \"render\";\r\n    StepId[\"PostRender\"] = \"postRender\";\r\n    StepId[\"FixedUpdate\"] = \"fixedUpdate\";\r\n})(StepId || (StepId = {}));\n\nvar maxElapsed = 40;\r\nvar defaultElapsed = (1 / 60) * 1000;\r\nvar useDefaultElapsed = true;\r\nvar willRunNextFrame = false;\r\nvar isProcessing = false;\r\nvar frame = {\r\n    delta: 0,\r\n    timestamp: 0\r\n};\r\nvar stepsOrder = [\r\n    StepId.Read,\r\n    StepId.Update,\r\n    StepId.Render,\r\n    StepId.PostRender\r\n];\r\nvar setWillRunNextFrame = function (willRun) { return (willRunNextFrame = willRun); };\r\nvar _a = stepsOrder.reduce(function (acc, key) {\r\n    var step = createStep(setWillRunNextFrame);\r\n    acc.sync[key] = function (process, keepAlive, immediate) {\r\n        if (keepAlive === void 0) { keepAlive = false; }\r\n        if (immediate === void 0) { immediate = false; }\r\n        if (!willRunNextFrame)\r\n            startLoop();\r\n        step.schedule(process, keepAlive, immediate);\r\n        return process;\r\n    };\r\n    acc.cancelSync[key] = function (process) { return step.cancel(process); };\r\n    acc.steps[key] = step;\r\n    return acc;\r\n}, {\r\n    steps: {},\r\n    sync: {},\r\n    cancelSync: {}\r\n}), steps = _a.steps, sync = _a.sync, cancelSync = _a.cancelSync;\r\nvar processStep = function (stepId) { return steps[stepId].process(frame); };\r\nvar processFrame = function (timestamp) {\r\n    willRunNextFrame = false;\r\n    frame.delta = useDefaultElapsed\r\n        ? defaultElapsed\r\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\r\n    if (!useDefaultElapsed)\r\n        defaultElapsed = frame.delta;\r\n    frame.timestamp = timestamp;\r\n    isProcessing = true;\r\n    stepsOrder.forEach(processStep);\r\n    isProcessing = false;\r\n    if (willRunNextFrame) {\r\n        useDefaultElapsed = false;\r\n        onNextFrame(processFrame);\r\n    }\r\n};\r\nvar startLoop = function () {\r\n    willRunNextFrame = true;\r\n    useDefaultElapsed = true;\r\n    if (!isProcessing)\r\n        onNextFrame(processFrame);\r\n};\r\nvar getFrameData = function () { return frame; };\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (sync);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/framesync/dist/framesync.es.js\n");

/***/ }),

/***/ "./node_modules/hey-listen/dist/hey-listen.es.js":
/*!*******************************************************!*\
  !*** ./node_modules/hey-listen/dist/hey-listen.es.js ***!
  \*******************************************************/
/*! exports provided: invariant, warning */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invariant\", function() { return invariant; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"warning\", function() { return warning; });\nvar warning = function () { };\r\nvar invariant = function () { };\r\nif (true) {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGV5LWxpc3Rlbi9kaXN0L2hleS1saXN0ZW4uZXMuanM/ZjM2OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQSwyQkFBMkI7QUFDM0IsNkJBQTZCO0FBQzdCLElBQUksSUFBcUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOEIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGV5LWxpc3Rlbi9kaXN0L2hleS1saXN0ZW4uZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2FybmluZyA9IGZ1bmN0aW9uICgpIHsgfTtcclxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uICgpIHsgfTtcclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcclxuICAgIHdhcm5pbmcgPSBmdW5jdGlvbiAoY2hlY2ssIG1lc3NhZ2UpIHtcclxuICAgICAgICBpZiAoIWNoZWNrICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4obWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGludmFyaWFudCA9IGZ1bmN0aW9uIChjaGVjaywgbWVzc2FnZSkge1xyXG4gICAgICAgIGlmICghY2hlY2spIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cblxuZXhwb3J0IHsgaW52YXJpYW50LCB3YXJuaW5nIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/hey-listen/dist/hey-listen.es.js\n");

/***/ }),

/***/ "./node_modules/history/esm/history.js":
/*!*********************************************!*\
  !*** ./node_modules/history/esm/history.js ***!
  \*********************************************/
/*! exports provided: createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBrowserHistory\", function() { return createBrowserHistory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createHashHistory\", function() { return createHashHistory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMemoryHistory\", function() { return createMemoryHistory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createLocation\", function() { return createLocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"locationsAreEqual\", function() { return locationsAreEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parsePath\", function() { return parsePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPath\", function() { return createPath; });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var resolve_pathname__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! resolve-pathname */ \"./node_modules/resolve-pathname/esm/resolve-pathname.js\");\n/* harmony import */ var value_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! value-equal */ \"./node_modules/value-equal/esm/value-equal.js\");\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tiny-warning */ \"./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\n\n\n\n\n\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = Object(resolve_pathname__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && Object(value_equal__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(prompt == null, 'A history supports only one prompt at a time') : undefined;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n           true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : undefined;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'Browser history needs a DOM') : undefined : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : undefined;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : undefined;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n         true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : undefined;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : undefined;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n         true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : undefined;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'Hash history needs a DOM') : undefined : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : undefined;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state === undefined, 'Hash history cannot push state; it is ignored') : undefined;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n         true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : undefined;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state === undefined, 'Hash history cannot replace state; it is ignored') : undefined;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : undefined;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : undefined;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/history/esm/history.js\n");

/***/ }),

/***/ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar reactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanM/ZGE2YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsa0RBQVU7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsbUJBQW1CLGlCQUFpQjtBQUNwQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n");

/***/ }),

/***/ "./node_modules/mini-create-react-context/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/mini-create-react-context/dist/esm/index.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tiny-warning */ \"./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n\n\n\n\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nfunction getUniqueId() {\n  var key = '__global_unique_id__';\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n}\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + getUniqueId() + '__';\n\n  var Provider = /*#__PURE__*/function (_Component) {\n    Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (true) {\n            Object(tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object.isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_Component2) {\n    Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext || createReactContext;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dC9kaXN0L2VzbS9pbmRleC5qcz9iNDQ4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXlDO0FBQzZCO0FBQ25DO0FBQ0E7O0FBRW5DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxJQUFJLHdGQUFjOztBQUVsQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQSxjQUFjLElBQXFDO0FBQ25ELFlBQVksNERBQU87QUFDbkI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUcsQ0FBQywrQ0FBUzs7QUFFYiwwREFBMEQsdUNBQXVDLGlEQUFTOztBQUUxRztBQUNBLElBQUksd0ZBQWM7O0FBRWxCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRyxDQUFDLCtDQUFTOztBQUViLHFEQUFxRCx1Q0FBdUMsaURBQVM7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLDRDQUFLOztBQUVGLG9FQUFLLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dC9kaXN0L2VzbS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG52YXIgY29tbW9uanNHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWxUaGlzIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHt9O1xuXG5mdW5jdGlvbiBnZXRVbmlxdWVJZCgpIHtcbiAgdmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG4gIHJldHVybiBjb21tb25qc0dsb2JhbFtrZXldID0gKGNvbW1vbmpzR2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufVxuXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBnZXRVbmlxdWVJZCgpICsgJ19fJztcblxuICB2YXIgUHJvdmlkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHNMb29zZShQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgIHZhciBfdGhpcztcblxuICAgICAgX3RoaXMgPSBfQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpO1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8gPSBQcm92aWRlci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xuICAgIH07XG5cbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy52YWx1ZSAhPT0gbmV4dFByb3BzLnZhbHVlKSB7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIGNoYW5nZWRCaXRzO1xuXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB3YXJuaW5nKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAnICsgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XG5cbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgdmFyIENvbnN1bWVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0c0xvb3NlKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGhpczI7XG5cbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9O1xuXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcblxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mini-create-react-context/dist/esm/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!***********************************************************************************************************************!*\
  !*** delegated ./node_modules/next/dist/build/polyfills/object-assign.js from dll-reference dll_5030f387d328e4415785 ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_5030f387d328e4415785 */ \"dll-reference dll_5030f387d328e4415785\"))(\"./node_modules/next/dist/build/polyfills/object-assign.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcyBmcm9tIGRsbC1yZWZlcmVuY2UgZGxsXzUwMzBmMzg3ZDMyOGU0NDE1Nzg1PzdkNTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgZGxsLXJlZmVyZW5jZSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODUgKi8gXCJkbGwtcmVmZXJlbmNlIGRsbF81MDMwZjM4N2QzMjhlNDQxNTc4NVwiKSkoXCIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL29iamVjdC1hc3NpZ24uanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/object-assign.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fdimitripl%2FDeveloper%2Fframer-next%2Fpages%2Findex.js!./":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fdimitripl%2FDeveloper%2Fframer-next%2Fpages%2Findex.js ***!
  \******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./pages/index.js */ \"./pages/index.js\");\n      }\n    ]);\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/NjhiMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDBDQUF1RDtBQUM5RTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzP3BhZ2U9JTJGJmFic29sdXRlUGFnZVBhdGg9JTJGVXNlcnMlMkZkaW1pdHJpcGwlMkZEZXZlbG9wZXIlMkZmcmFtZXItbmV4dCUyRnBhZ2VzJTJGaW5kZXguanMhLi8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi9Vc2Vycy9kaW1pdHJpcGwvRGV2ZWxvcGVyL2ZyYW1lci1uZXh0L3BhZ2VzL2luZGV4LmpzXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fdimitripl%2FDeveloper%2Fframer-next%2Fpages%2Findex.js!./\n");

/***/ }),

/***/ "./node_modules/path-to-regexp/index.js":
/*!**********************************************!*\
  !*** ./node_modules/path-to-regexp/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isarray = __webpack_require__(/*! isarray */ \"./node_modules/path-to-regexp/node_modules/isarray/index.js\")\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/path-to-regexp/index.js\n");

/***/ }),

/***/ "./node_modules/path-to-regexp/node_modules/isarray/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/path-to-regexp/node_modules/isarray/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanM/MDJhMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/path-to-regexp/node_modules/isarray/index.js\n");

/***/ }),

/***/ "./node_modules/popmotion/dist/popmotion.es.js":
/*!*****************************************************!*\
  !*** ./node_modules/popmotion/dist/popmotion.es.js ***!
  \*****************************************************/
/*! exports provided: Action, ValueReaction, action, chain, composite, crossfade, decay, delay, everyFrame, inertia, keyframes, listen, merge, mouse, multicast, multitouch, parallel, physics, pointer, schedule, spring, stagger, styler, timeline, tween, value */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Action\", function() { return Action; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ValueReaction\", function() { return ValueReaction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"action\", function() { return action; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chain\", function() { return chain; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"composite\", function() { return composite; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"crossfade\", function() { return crossfade; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decay\", function() { return vectorDecay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"delay\", function() { return delay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"everyFrame\", function() { return frame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"inertia\", function() { return index; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyframes\", function() { return keyframes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listen\", function() { return listen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"merge\", function() { return merge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mouse\", function() { return mouse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multicast\", function() { return multicast; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multitouch\", function() { return multitouch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parallel\", function() { return parallel$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"physics\", function() { return vectorPhysics; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pointer\", function() { return index$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"schedule\", function() { return schedule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"spring\", function() { return vectorSpring; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stagger\", function() { return stagger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"styler\", function() { return styler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"timeline\", function() { return timeline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tween\", function() { return tween; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"value\", function() { return value; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popmotion/popcorn */ \"./node_modules/@popmotion/popcorn/dist/popcorn.es.js\");\n/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framesync */ \"./node_modules/framesync/dist/framesync.es.js\");\n/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! style-value-types */ \"./node_modules/style-value-types/dist/style-value-types.es.js\");\n/* harmony import */ var _popmotion_easing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @popmotion/easing */ \"./node_modules/@popmotion/easing/dist/easing.es.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! hey-listen */ \"./node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\n\n\n\n\n\nvar Observer = /*#__PURE__*/function () {\n    function Observer(_a, observer) {\n        var _this = this;\n        var middleware = _a.middleware,\n            onComplete = _a.onComplete;\n        this.isActive = true;\n        this.update = function (v) {\n            if (_this.observer.update) _this.updateObserver(v);\n        };\n        this.complete = function () {\n            if (_this.observer.complete && _this.isActive) _this.observer.complete();\n            if (_this.onComplete) _this.onComplete();\n            _this.isActive = false;\n        };\n        this.error = function (err) {\n            if (_this.observer.error && _this.isActive) _this.observer.error(err);\n            _this.isActive = false;\n        };\n        this.observer = observer;\n        this.updateObserver = function (v) {\n            return observer.update(v);\n        };\n        this.onComplete = onComplete;\n        if (observer.update && middleware && middleware.length) {\n            middleware.forEach(function (m) {\n                return _this.updateObserver = m(_this.updateObserver, _this.complete);\n            });\n        }\n    }\n    return Observer;\n}();\nvar createObserver = function (observerCandidate, _a, onComplete) {\n    var middleware = _a.middleware;\n    if (typeof observerCandidate === 'function') {\n        return new Observer({ middleware: middleware, onComplete: onComplete }, { update: observerCandidate });\n    } else {\n        return new Observer({ middleware: middleware, onComplete: onComplete }, observerCandidate);\n    }\n};\n\nvar Action = /*#__PURE__*/function () {\n    function Action(props) {\n        if (props === void 0) {\n            props = {};\n        }\n        this.props = props;\n    }\n    Action.prototype.create = function (props) {\n        return new Action(props);\n    };\n    Action.prototype.start = function (observerCandidate) {\n        if (observerCandidate === void 0) {\n            observerCandidate = {};\n        }\n        var isComplete = false;\n        var subscription = {\n            stop: function () {\n                return undefined;\n            }\n        };\n        var _a = this.props,\n            init = _a.init,\n            observerProps = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"init\"]);\n        var observer = createObserver(observerCandidate, observerProps, function () {\n            isComplete = true;\n            subscription.stop();\n        });\n        var api = init(observer);\n        subscription = api ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, subscription, api) : subscription;\n        if (isComplete) subscription.stop();\n        return subscription;\n    };\n    Action.prototype.applyMiddleware = function (middleware) {\n        return this.create(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, this.props, { middleware: this.props.middleware ? [middleware].concat(this.props.middleware) : [middleware] }));\n    };\n    Action.prototype.pipe = function () {\n        var funcs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            funcs[_i] = arguments[_i];\n        }\n        var pipedUpdate = funcs.length === 1 ? funcs[0] : _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"pipe\"].apply(void 0, funcs);\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return update(pipedUpdate(v));\n            };\n        });\n    };\n    return Action;\n}();\nvar action = function (init) {\n    return new Action({ init: init });\n};\n\nvar Chainable = /*#__PURE__*/function () {\n    function Chainable(props) {\n        if (props === void 0) {\n            props = {};\n        }\n        this.props = props;\n    }\n    Chainable.prototype.applyMiddleware = function (middleware) {\n        return this.create(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, this.props, { middleware: this.props.middleware ? [middleware].concat(this.props.middleware) : [middleware] }));\n    };\n    Chainable.prototype.pipe = function () {\n        var funcs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            funcs[_i] = arguments[_i];\n        }\n        var pipedUpdate = funcs.length === 1 ? funcs[0] : _popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"pipe\"].apply(void 0, funcs);\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return update(pipedUpdate(v));\n            };\n        });\n    };\n    Chainable.prototype.while = function (predicate) {\n        return this.applyMiddleware(function (update, complete) {\n            return function (v) {\n                return predicate(v) ? update(v) : complete();\n            };\n        });\n    };\n    Chainable.prototype.filter = function (predicate) {\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return predicate(v) && update(v);\n            };\n        });\n    };\n    return Chainable;\n}();\n\nvar BaseMulticast = /*#__PURE__*/function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(BaseMulticast, _super);\n    function BaseMulticast() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.subscribers = [];\n        return _this;\n    }\n    BaseMulticast.prototype.complete = function () {\n        this.subscribers.forEach(function (subscriber) {\n            return subscriber.complete();\n        });\n    };\n    BaseMulticast.prototype.error = function (err) {\n        this.subscribers.forEach(function (subscriber) {\n            return subscriber.error(err);\n        });\n    };\n    BaseMulticast.prototype.update = function (v) {\n        for (var i = 0; i < this.subscribers.length; i++) {\n            this.subscribers[i].update(v);\n        }\n    };\n    BaseMulticast.prototype.subscribe = function (observerCandidate) {\n        var _this = this;\n        var observer = createObserver(observerCandidate, this.props);\n        this.subscribers.push(observer);\n        var subscription = {\n            unsubscribe: function () {\n                var index = _this.subscribers.indexOf(observer);\n                if (index !== -1) _this.subscribers.splice(index, 1);\n            }\n        };\n        return subscription;\n    };\n    BaseMulticast.prototype.stop = function () {\n        if (this.parent) this.parent.stop();\n    };\n    return BaseMulticast;\n}(Chainable);\n\nvar Multicast = /*#__PURE__*/function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(Multicast, _super);\n    function Multicast() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Multicast.prototype.create = function (props) {\n        return new Multicast(props);\n    };\n    return Multicast;\n}(BaseMulticast);\nvar multicast = function () {\n    return new Multicast();\n};\n\nvar ValueReaction = /*#__PURE__*/function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ValueReaction, _super);\n    function ValueReaction(props) {\n        var _this = _super.call(this, props) || this;\n        _this.scheduleVelocityCheck = function () {\n            return framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].postRender(_this.velocityCheck);\n        };\n        _this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n            }\n        };\n        _this.prev = _this.current = props.value || 0;\n        _this.updateCurrent = function (v) {\n            return _this.current = v;\n        };\n        _this.getVelocityOfCurrent = function () {\n            return _this.getSingleVelocity(_this.current, _this.prev);\n        };\n        if (props.initialSubscription) _this.subscribe(props.initialSubscription);\n        return _this;\n    }\n    ValueReaction.prototype.create = function (props) {\n        return new ValueReaction(props);\n    };\n    ValueReaction.prototype.get = function () {\n        return this.current;\n    };\n    ValueReaction.prototype.getVelocity = function () {\n        return this.getVelocityOfCurrent();\n    };\n    ValueReaction.prototype.update = function (v) {\n        _super.prototype.update.call(this, v);\n        this.prev = this.current;\n        this.updateCurrent(v);\n        var _a = Object(framesync__WEBPACK_IMPORTED_MODULE_2__[\"getFrameData\"])(),\n            delta = _a.delta,\n            timestamp = _a.timestamp;\n        this.timeDelta = delta;\n        this.lastUpdated = timestamp;\n        framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].postRender(this.scheduleVelocityCheck);\n    };\n    ValueReaction.prototype.subscribe = function (observerCandidate) {\n        var sub = _super.prototype.subscribe.call(this, observerCandidate);\n        this.subscribers[this.subscribers.length - 1].update(this.current);\n        return sub;\n    };\n    ValueReaction.prototype.getSingleVelocity = function (current, prev) {\n        return typeof current === 'number' && typeof prev === 'number' ? Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"velocityPerSecond\"])(current - prev, this.timeDelta) : Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"velocityPerSecond\"])(parseFloat(current) - parseFloat(prev), this.timeDelta) || 0;\n    };\n    return ValueReaction;\n}(BaseMulticast);\nvar value = function (value, initialSubscription) {\n    return new ValueReaction({ value: value, initialSubscription: initialSubscription });\n};\n\nvar createVectorTests = function (typeTests) {\n    var testNames = Object.keys(typeTests);\n    var isVectorProp = function (prop, key) {\n        return prop !== undefined && !typeTests[key](prop);\n    };\n    var getVectorKeys = function (props) {\n        return testNames.reduce(function (vectorKeys, key) {\n            if (isVectorProp(props[key], key)) vectorKeys.push(key);\n            return vectorKeys;\n        }, []);\n    };\n    var testVectorProps = function (props) {\n        return props && testNames.some(function (key) {\n            return isVectorProp(props[key], key);\n        });\n    };\n    return { getVectorKeys: getVectorKeys, testVectorProps: testVectorProps };\n};\nvar unitTypes = [style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"px\"], style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"percent\"], style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"degrees\"], style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"vh\"], style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"vw\"]];\nvar findUnitType = function (prop) {\n    return unitTypes.find(function (type) {\n        return type.test(prop);\n    });\n};\nvar isUnitProp = function (prop) {\n    return Boolean(findUnitType(prop));\n};\nvar createAction = function (action, props) {\n    return action(props);\n};\nvar createUnitAction = function (action, _a) {\n    var from = _a.from,\n        to = _a.to,\n        props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"from\", \"to\"]);\n    var unitType = findUnitType(from) || findUnitType(to);\n    var transform = unitType.transform,\n        parse = unitType.parse;\n    return action(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, props, { from: typeof from === 'string' ? parse(from) : from, to: typeof to === 'string' ? parse(to) : to })).pipe(transform);\n};\nvar createMixerAction = function (mixer) {\n    return function (action, _a) {\n        var from = _a.from,\n            to = _a.to,\n            props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"from\", \"to\"]);\n        return action(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, props, { from: 0, to: 1 })).pipe(mixer(from, to));\n    };\n};\nvar createColorAction = /*#__PURE__*/createMixerAction(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"mixColor\"]);\nvar createComplexAction = /*#__PURE__*/createMixerAction(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"mixComplex\"]);\nvar createVectorAction = function (action, typeTests) {\n    var _a = createVectorTests(typeTests),\n        testVectorProps = _a.testVectorProps,\n        getVectorKeys = _a.getVectorKeys;\n    var vectorAction = function (props) {\n        var isVector = testVectorProps(props);\n        if (!isVector) return action(props);\n        var vectorKeys = getVectorKeys(props);\n        var testKey = vectorKeys[0];\n        var testProp = props[testKey];\n        return getActionCreator(testProp)(action, props, vectorKeys);\n    };\n    return vectorAction;\n};\nvar getActionCreator = function (prop) {\n    if (typeof prop === 'number') {\n        return createAction;\n    } else if (isUnitProp(prop)) {\n        return createUnitAction;\n    } else if (style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"color\"].test(prop)) {\n        return createColorAction;\n    } else if (style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"complex\"].test(prop)) {\n        return createComplexAction;\n    } else {\n        return createAction;\n    }\n};\n\nvar decay = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var complete = _a.complete,\n            update = _a.update;\n        var _b = props.velocity,\n            velocity = _b === void 0 ? 0 : _b,\n            _c = props.from,\n            from = _c === void 0 ? 0 : _c,\n            _d = props.power,\n            power = _d === void 0 ? 0.8 : _d,\n            _e = props.timeConstant,\n            timeConstant = _e === void 0 ? 350 : _e,\n            _f = props.restDelta,\n            restDelta = _f === void 0 ? 0.5 : _f,\n            modifyTarget = props.modifyTarget;\n        var elapsed = 0;\n        var amplitude = power * velocity;\n        var idealTarget = Math.round(from + amplitude);\n        var target = typeof modifyTarget === 'undefined' ? idealTarget : modifyTarget(idealTarget);\n        var process = framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(function (_a) {\n            var frameDelta = _a.delta;\n            elapsed += frameDelta;\n            var delta = -amplitude * Math.exp(-elapsed / timeConstant);\n            var isMoving = delta > restDelta || delta < -restDelta;\n            var current = isMoving ? target + delta : target;\n            update(current);\n            if (!isMoving) {\n                framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n                complete();\n            }\n        }, true);\n        return {\n            stop: function () {\n                return framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n            }\n        };\n    });\n};\nvar vectorDecay = /*#__PURE__*/createVectorAction(decay, {\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    modifyTarget: function (func) {\n        return typeof func === 'function';\n    },\n    velocity: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test\n});\n\nvar spring = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var _b = props.velocity,\n            velocity = _b === void 0 ? 0.0 : _b;\n        var _c = props.from,\n            from = _c === void 0 ? 0.0 : _c,\n            _d = props.to,\n            to = _d === void 0 ? 0.0 : _d,\n            _e = props.stiffness,\n            stiffness = _e === void 0 ? 100 : _e,\n            _f = props.damping,\n            damping = _f === void 0 ? 10 : _f,\n            _g = props.mass,\n            mass = _g === void 0 ? 1.0 : _g,\n            _h = props.restSpeed,\n            restSpeed = _h === void 0 ? 0.01 : _h,\n            _j = props.restDelta,\n            restDelta = _j === void 0 ? 0.01 : _j;\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var t = 0;\n        var delta = to - from;\n        var position = from;\n        var prevPosition = position;\n        var process = framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(function (_a) {\n            var timeDelta = _a.delta;\n            t += timeDelta;\n            var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n            var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n            prevPosition = position;\n            if (dampingRatio < 1) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                position = to - envelope * ((initialVelocity + dampingRatio * angularFreq * delta) / expoDecay * Math.sin(expoDecay * t) + delta * Math.cos(expoDecay * t));\n            } else {\n                var envelope = Math.exp(-angularFreq * t);\n                position = to - envelope * (delta + (initialVelocity + angularFreq * delta) * t);\n            }\n            velocity = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"velocityPerSecond\"])(position - prevPosition, timeDelta);\n            var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n            var isBelowDisplacementThreshold = Math.abs(to - position) <= restDelta;\n            if (isBelowVelocityThreshold && isBelowDisplacementThreshold) {\n                position = to;\n                update(position);\n                framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n                complete();\n            } else {\n                update(position);\n            }\n        }, true);\n        return {\n            stop: function () {\n                return framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n            }\n        };\n    });\n};\nvar vectorSpring = /*#__PURE__*/createVectorAction(spring, {\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    to: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    stiffness: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    damping: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    mass: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    velocity: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test\n});\n\nvar inertia = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        min = _a.min,\n        max = _a.max,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 700 : _e,\n        _f = _a.bounceStiffness,\n        bounceStiffness = _f === void 0 ? 500 : _f,\n        _g = _a.bounceDamping,\n        bounceDamping = _g === void 0 ? 10 : _g,\n        _h = _a.restDelta,\n        restDelta = _h === void 0 ? 1 : _h,\n        modifyTarget = _a.modifyTarget;\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var prev = from;\n        var current = from;\n        var activeAnimation;\n        var isSpring = false;\n        var isLessThanMin = function (v) {\n            return min !== undefined && v <= min;\n        };\n        var isMoreThanMax = function (v) {\n            return max !== undefined && v >= max;\n        };\n        var isOutOfBounds = function (v) {\n            return isLessThanMin(v) || isMoreThanMax(v);\n        };\n        var isTravellingAwayFromBounds = function (v, currentVelocity) {\n            return isLessThanMin(v) && currentVelocity < 0 || isMoreThanMax(v) && currentVelocity > 0;\n        };\n        var onUpdate = function (v) {\n            update(v);\n            prev = current;\n            current = v;\n            velocity = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"velocityPerSecond\"])(current - prev, Object(framesync__WEBPACK_IMPORTED_MODULE_2__[\"getFrameData\"])().delta);\n            if (activeAnimation && !isSpring && isTravellingAwayFromBounds(v, velocity)) {\n                startSpring({ from: v, velocity: velocity });\n            }\n        };\n        var startAnimation = function (animation, next) {\n            activeAnimation && activeAnimation.stop();\n            activeAnimation = animation.start({\n                update: onUpdate,\n                complete: function () {\n                    if (next) {\n                        next();\n                        return;\n                    }\n                    complete();\n                }\n            });\n        };\n        var startSpring = function (props) {\n            isSpring = true;\n            startAnimation(vectorSpring(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, props, { to: isLessThanMin(props.from) ? min : max, stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta })));\n        };\n        if (isOutOfBounds(from)) {\n            startSpring({ from: from, velocity: velocity });\n        } else if (velocity !== 0) {\n            var animation = vectorDecay({\n                from: from,\n                velocity: velocity,\n                timeConstant: timeConstant,\n                power: power,\n                restDelta: isOutOfBounds(from) ? 20 : restDelta,\n                modifyTarget: modifyTarget\n            });\n            startAnimation(animation, function () {\n                if (isOutOfBounds(current)) {\n                    startSpring({ from: current, velocity: velocity });\n                } else {\n                    complete();\n                }\n            });\n        } else {\n            complete();\n        }\n        return {\n            stop: function () {\n                return activeAnimation && activeAnimation.stop();\n            }\n        };\n    });\n};\nvar index = /*#__PURE__*/createVectorAction(inertia, {\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    velocity: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    min: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    max: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    damping: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    stiffness: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    modifyTarget: function (func) {\n        return typeof func === 'function';\n    }\n});\n\nvar frame = function () {\n    return action(function (_a) {\n        var update = _a.update;\n        var initialTime = 0;\n        var process = framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(function (_a) {\n            var timestamp = _a.timestamp;\n            if (!initialTime) initialTime = timestamp;\n            update(timestamp - initialTime);\n        }, true, true);\n        return {\n            stop: function () {\n                return framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n            }\n        };\n    });\n};\n\nvar scrubber = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        _d = _a.ease,\n        ease = _d === void 0 ? _popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"linear\"] : _d,\n        _e = _a.reverseEase,\n        reverseEase = _e === void 0 ? false : _e;\n    if (reverseEase) {\n        ease = Object(_popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"createReversedEasing\"])(ease);\n    }\n    return action(function (_a) {\n        var update = _a.update;\n        return {\n            seek: function (progress) {\n                return update(progress);\n            }\n        };\n    }).pipe(ease, function (v) {\n        return Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"mix\"])(from, to, v);\n    });\n};\nvar vectorScrubber = /*#__PURE__*/createVectorAction(scrubber, {\n    ease: function (func) {\n        return typeof func === 'function';\n    },\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    to: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test\n});\n\nvar clampProgress = /*#__PURE__*/Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"clamp\"])(0, 1);\nvar tween = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var _b = props.duration,\n            duration = _b === void 0 ? 300 : _b,\n            _c = props.ease,\n            ease = _c === void 0 ? _popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"easeOut\"] : _c,\n            _d = props.flip,\n            flip = _d === void 0 ? 0 : _d,\n            _e = props.loop,\n            loop = _e === void 0 ? 0 : _e,\n            _f = props.yoyo,\n            yoyo = _f === void 0 ? 0 : _f,\n            _g = props.repeatDelay,\n            repeatDelay = _g === void 0 ? 0 : _g;\n        var _h = props.from,\n            from = _h === void 0 ? 0 : _h,\n            _j = props.to,\n            to = _j === void 0 ? 1 : _j,\n            _k = props.elapsed,\n            elapsed = _k === void 0 ? 0 : _k,\n            _l = props.flipCount,\n            flipCount = _l === void 0 ? 0 : _l,\n            _m = props.yoyoCount,\n            yoyoCount = _m === void 0 ? 0 : _m,\n            _o = props.loopCount,\n            loopCount = _o === void 0 ? 0 : _o;\n        var playhead = vectorScrubber({ from: from, to: to, ease: ease }).start(update);\n        var currentProgress = 0;\n        var process;\n        var isActive = false;\n        var reverseAnimation = function (reverseEase) {\n            var _a;\n            if (reverseEase === void 0) {\n                reverseEase = false;\n            }\n            _a = [to, from], from = _a[0], to = _a[1];\n            playhead = vectorScrubber({ from: from, to: to, ease: ease, reverseEase: reverseEase }).start(update);\n        };\n        var isTweenComplete = function () {\n            var isComplete = isActive && elapsed > duration + repeatDelay;\n            if (!isComplete) return false;\n            if (isComplete && !loop && !flip && !yoyo) return true;\n            var overtime = elapsed - duration;\n            elapsed = overtime - repeatDelay;\n            if (loop && loopCount < loop) {\n                loopCount++;\n                return false;\n            } else if (flip && flipCount < flip) {\n                flipCount++;\n                reverseAnimation();\n                return false;\n            } else if (yoyo && yoyoCount < yoyo) {\n                yoyoCount++;\n                reverseAnimation(yoyoCount % 2 !== 0);\n                return false;\n            }\n            return true;\n        };\n        var updateTween = function () {\n            currentProgress = clampProgress(Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"progress\"])(0, duration, elapsed));\n            playhead.seek(currentProgress);\n        };\n        var startTimer = function () {\n            isActive = true;\n            process = framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(function (_a) {\n                var delta = _a.delta;\n                elapsed += delta;\n                updateTween();\n                if (isTweenComplete()) {\n                    framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n                    complete && framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(complete, false, true);\n                }\n            }, true);\n        };\n        var stopTimer = function () {\n            isActive = false;\n            if (process) framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n        };\n        startTimer();\n        return {\n            isActive: function () {\n                return isActive;\n            },\n            getElapsed: function () {\n                return Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"clamp\"])(0, duration, elapsed);\n            },\n            getProgress: function () {\n                return currentProgress;\n            },\n            stop: function () {\n                stopTimer();\n            },\n            pause: function () {\n                stopTimer();\n                return this;\n            },\n            resume: function () {\n                if (!isActive) startTimer();\n                return this;\n            },\n            seek: function (newProgress) {\n                elapsed = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"mix\"])(0, duration, newProgress);\n                framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(updateTween, false, true);\n                return this;\n            },\n            reverse: function () {\n                reverseAnimation();\n                return this;\n            }\n        };\n    });\n};\n\nvar clampProgress$1 = /*#__PURE__*/Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"clamp\"])(0, 1);\nvar defaultEasings = function (values, easing) {\n    return values.map(function () {\n        return easing || _popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"easeOut\"];\n    }).splice(0, values.length - 1);\n};\nvar defaultTimings = function (values) {\n    var numValues = values.length;\n    return values.map(function (value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n};\nvar interpolateScrubbers = function (input, scrubbers, update) {\n    var rangeLength = input.length;\n    var finalInputIndex = rangeLength - 1;\n    var finalScrubberIndex = finalInputIndex - 1;\n    var subs = scrubbers.map(function (scrub) {\n        return scrub.start(update);\n    });\n    return function (v) {\n        if (v <= input[0]) {\n            subs[0].seek(0);\n        }\n        if (v >= input[finalInputIndex]) {\n            subs[finalScrubberIndex].seek(1);\n        }\n        var i = 1;\n        for (; i < rangeLength; i++) {\n            if (input[i] > v || i === finalInputIndex) break;\n        }\n        var progressInRange = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"progress\"])(input[i - 1], input[i], v);\n        subs[i - 1].seek(clampProgress$1(progressInRange));\n    };\n};\nvar keyframes = function (_a) {\n    var easings = _a.easings,\n        _b = _a.ease,\n        ease = _b === void 0 ? _popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"linear\"] : _b,\n        times = _a.times,\n        values = _a.values,\n        tweenProps = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"easings\", \"ease\", \"times\", \"values\"]);\n    easings = Array.isArray(easings) ? easings : defaultEasings(values, easings);\n    times = times || defaultTimings(values);\n    var scrubbers = easings.map(function (easing, i) {\n        return vectorScrubber({\n            from: values[i],\n            to: values[i + 1],\n            ease: easing\n        });\n    });\n    return tween(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, tweenProps, { ease: ease })).applyMiddleware(function (update) {\n        return interpolateScrubbers(times, scrubbers, update);\n    });\n};\n\nvar physics = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var complete = _a.complete,\n            update = _a.update;\n        var _b = props.acceleration,\n            acceleration = _b === void 0 ? 0 : _b,\n            _c = props.friction,\n            friction = _c === void 0 ? 0 : _c,\n            _d = props.velocity,\n            velocity = _d === void 0 ? 0 : _d,\n            springStrength = props.springStrength,\n            to = props.to;\n        var _e = props.restSpeed,\n            restSpeed = _e === void 0 ? 0.001 : _e,\n            _f = props.from,\n            from = _f === void 0 ? 0 : _f;\n        var current = from;\n        var process = framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(function (_a) {\n            var delta = _a.delta;\n            var elapsed = Math.max(delta, 16);\n            if (acceleration) velocity += Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"velocityPerFrame\"])(acceleration, elapsed);\n            if (friction) velocity *= Math.pow(1 - friction, elapsed / 100);\n            if (springStrength !== undefined && to !== undefined) {\n                var distanceToTarget = to - current;\n                velocity += distanceToTarget * Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"velocityPerFrame\"])(springStrength, elapsed);\n            }\n            current += Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"velocityPerFrame\"])(velocity, elapsed);\n            update(current);\n            var isComplete = restSpeed !== false && (!velocity || Math.abs(velocity) <= restSpeed);\n            if (isComplete) {\n                framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n                complete();\n            }\n        }, true);\n        return {\n            set: function (v) {\n                current = v;\n                return this;\n            },\n            setAcceleration: function (v) {\n                acceleration = v;\n                return this;\n            },\n            setFriction: function (v) {\n                friction = v;\n                return this;\n            },\n            setSpringStrength: function (v) {\n                springStrength = v;\n                return this;\n            },\n            setSpringTarget: function (v) {\n                to = v;\n                return this;\n            },\n            setVelocity: function (v) {\n                velocity = v;\n                return this;\n            },\n            stop: function () {\n                return framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(process);\n            }\n        };\n    });\n};\nvar vectorPhysics = /*#__PURE__*/createVectorAction(physics, {\n    acceleration: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    friction: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    velocity: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    from: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    to: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test,\n    springStrength: style_value_types__WEBPACK_IMPORTED_MODULE_3__[\"number\"].test\n});\n\nvar multi = function (_a) {\n    var getCount = _a.getCount,\n        getFirst = _a.getFirst,\n        getOutput = _a.getOutput,\n        mapApi = _a.mapApi,\n        setProp = _a.setProp,\n        startActions = _a.startActions;\n    return function (actions) {\n        return action(function (_a) {\n            var update = _a.update,\n                complete = _a.complete,\n                error = _a.error;\n            var numActions = getCount(actions);\n            var output = getOutput();\n            var updateOutput = function () {\n                return update(output);\n            };\n            var numCompletedActions = 0;\n            var subs = startActions(actions, function (a, name) {\n                var hasCompleted = false;\n                return a.start({\n                    complete: function () {\n                        if (!hasCompleted) {\n                            hasCompleted = true;\n                            numCompletedActions++;\n                            if (numCompletedActions === numActions) framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(complete);\n                        }\n                    },\n                    error: error,\n                    update: function (v) {\n                        setProp(output, name, v);\n                        framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(updateOutput, false, true);\n                    }\n                });\n            });\n            return Object.keys(getFirst(subs)).reduce(function (api, methodName) {\n                api[methodName] = mapApi(subs, methodName);\n                return api;\n            }, {});\n        });\n    };\n};\n\nvar composite = /*#__PURE__*/multi({\n    getOutput: function () {\n        return {};\n    },\n    getCount: function (subs) {\n        return Object.keys(subs).length;\n    },\n    getFirst: function (subs) {\n        return subs[Object.keys(subs)[0]];\n    },\n    mapApi: function (subs, methodName) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return Object.keys(subs).reduce(function (output, propKey) {\n                var _a;\n                if (subs[propKey][methodName]) {\n                    args[0] && args[0][propKey] !== undefined ? output[propKey] = subs[propKey][methodName](args[0][propKey]) : output[propKey] = (_a = subs[propKey])[methodName].apply(_a, args);\n                }\n                return output;\n            }, {});\n        };\n    },\n    setProp: function (output, name, v) {\n        return output[name] = v;\n    },\n    startActions: function (actions, starter) {\n        return Object.keys(actions).reduce(function (subs, key) {\n            subs[key] = starter(actions[key], key);\n            return subs;\n        }, {});\n    }\n});\n\nvar DEFAULT_DURATION = 300;\nvar flattenTimings = function (instructions) {\n    var flatInstructions = [];\n    var lastArg = instructions[instructions.length - 1];\n    var isStaggered = typeof lastArg === 'number';\n    var staggerDelay = isStaggered ? lastArg : 0;\n    var segments = isStaggered ? instructions.slice(0, -1) : instructions;\n    var numSegments = segments.length;\n    var offset = 0;\n    segments.forEach(function (item, i) {\n        flatInstructions.push(item);\n        if (i !== numSegments - 1) {\n            var duration = item.duration || DEFAULT_DURATION;\n            offset += staggerDelay;\n            flatInstructions.push(\"-\" + (duration - offset));\n        }\n    });\n    return flatInstructions;\n};\nvar flattenArrayInstructions = function (instructions, instruction) {\n    Array.isArray(instruction) ? instructions.push.apply(instructions, flattenTimings(instruction)) : instructions.push(instruction);\n    return instructions;\n};\nvar convertDefToProps = function (props, def, i) {\n    var duration = props.duration,\n        easings = props.easings,\n        times = props.times,\n        values = props.values;\n    var numValues = values.length;\n    var prevTimeTo = times[numValues - 1];\n    var timeFrom = def.at === 0 ? 0 : def.at / duration;\n    var timeTo = (def.at + def.duration) / duration;\n    if (i === 0) {\n        values.push(def.from);\n        times.push(timeFrom);\n    } else {\n        if (prevTimeTo !== timeFrom) {\n            if (def.from !== undefined) {\n                values.push(values[numValues - 1]);\n                times.push(timeFrom);\n                easings.push(_popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"linear\"]);\n            }\n            var from = def.from !== undefined ? def.from : values[numValues - 1];\n            values.push(from);\n            times.push(timeFrom);\n            easings.push(_popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"linear\"]);\n        } else if (def.from !== undefined) {\n            values.push(def.from);\n            times.push(timeFrom);\n            easings.push(_popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"linear\"]);\n        }\n    }\n    values.push(def.to);\n    times.push(timeTo);\n    easings.push(def.ease || _popmotion_easing__WEBPACK_IMPORTED_MODULE_4__[\"easeInOut\"]);\n    return props;\n};\nvar timeline = function (instructions, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        duration = _b.duration,\n        elapsed = _b.elapsed,\n        ease = _b.ease,\n        loop = _b.loop,\n        flip = _b.flip,\n        yoyo = _b.yoyo;\n    var playhead = 0;\n    var calculatedDuration = 0;\n    var flatInstructions = instructions.reduce(flattenArrayInstructions, []);\n    var animationDefs = [];\n    flatInstructions.forEach(function (instruction) {\n        if (typeof instruction === 'string') {\n            playhead += parseFloat(instruction);\n        } else if (typeof instruction === 'number') {\n            playhead = instruction;\n        } else {\n            var def = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, instruction, { at: playhead });\n            def.duration = def.duration === undefined ? DEFAULT_DURATION : def.duration;\n            animationDefs.push(def);\n            playhead += def.duration;\n            calculatedDuration = Math.max(calculatedDuration, def.at + def.duration);\n        }\n    });\n    var tracks = {};\n    var numDefs = animationDefs.length;\n    for (var i = 0; i < numDefs; i++) {\n        var def = animationDefs[i];\n        var track = def.track;\n        if (track === undefined) {\n            throw new Error('No track defined');\n        }\n        if (!tracks.hasOwnProperty(track)) tracks[track] = [];\n        tracks[track].push(def);\n    }\n    var trackKeyframes = {};\n    for (var key in tracks) {\n        if (tracks.hasOwnProperty(key)) {\n            var keyframeProps = tracks[key].reduce(convertDefToProps, {\n                duration: calculatedDuration,\n                easings: [],\n                times: [],\n                values: []\n            });\n            trackKeyframes[key] = keyframes(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, keyframeProps, { duration: duration || calculatedDuration, ease: ease,\n                elapsed: elapsed,\n                loop: loop,\n                yoyo: yoyo,\n                flip: flip }));\n        }\n    }\n    return composite(trackKeyframes);\n};\n\nvar listen = function (element, events, options) {\n    return action(function (_a) {\n        var update = _a.update;\n        var eventNames = events.split(' ').map(function (eventName) {\n            element.addEventListener(eventName, update, options);\n            return eventName;\n        });\n        return {\n            stop: function () {\n                return eventNames.forEach(function (eventName) {\n                    return element.removeEventListener(eventName, update, options);\n                });\n            }\n        };\n    });\n};\n\nvar defaultPointerPos = function () {\n    return {\n        clientX: 0,\n        clientY: 0,\n        pageX: 0,\n        pageY: 0,\n        x: 0,\n        y: 0\n    };\n};\nvar eventToPoint = function (e, point) {\n    if (point === void 0) {\n        point = defaultPointerPos();\n    }\n    point.clientX = point.x = e.clientX;\n    point.clientY = point.y = e.clientY;\n    point.pageX = e.pageX;\n    point.pageY = e.pageY;\n    return point;\n};\n\nvar points = [/*#__PURE__*/defaultPointerPos()];\nvar isTouchDevice = false;\nif (typeof document !== 'undefined') {\n    var updatePointsLocation = function (_a) {\n        var touches = _a.touches;\n        isTouchDevice = true;\n        var numTouches = touches.length;\n        points.length = 0;\n        for (var i = 0; i < numTouches; i++) {\n            var thisTouch = touches[i];\n            points.push(eventToPoint(thisTouch));\n        }\n    };\n    listen(document, 'touchstart touchmove', {\n        passive: true,\n        capture: true\n    }).start(updatePointsLocation);\n}\nvar multitouch = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.preventDefault,\n        preventDefault = _c === void 0 ? true : _c,\n        _d = _b.scale,\n        scale = _d === void 0 ? 1.0 : _d,\n        _e = _b.rotate,\n        rotate = _e === void 0 ? 0.0 : _e;\n    return action(function (_a) {\n        var update = _a.update;\n        var output = {\n            touches: points,\n            scale: scale,\n            rotate: rotate\n        };\n        var initialDistance = 0.0;\n        var initialRotation = 0.0;\n        var isGesture = points.length > 1;\n        if (isGesture) {\n            var firstTouch = points[0],\n                secondTouch = points[1];\n            initialDistance = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"distance\"])(firstTouch, secondTouch);\n            initialRotation = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"angle\"])(firstTouch, secondTouch);\n        }\n        var updatePoint = function () {\n            if (isGesture) {\n                var firstTouch = points[0],\n                    secondTouch = points[1];\n                var newDistance = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"distance\"])(firstTouch, secondTouch);\n                var newRotation = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"angle\"])(firstTouch, secondTouch);\n                output.scale = scale * (newDistance / initialDistance);\n                output.rotate = rotate + (newRotation - initialRotation);\n            }\n            update(output);\n        };\n        var onMove = function (e) {\n            if (preventDefault || e.touches.length > 1) e.preventDefault();\n            framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(updatePoint);\n        };\n        var updateOnMove = listen(document, 'touchmove', {\n            passive: !preventDefault\n        }).start(onMove);\n        if (isTouchDevice) framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(updatePoint);\n        return {\n            stop: function () {\n                framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(updatePoint);\n                updateOnMove.stop();\n            }\n        };\n    });\n};\nvar getIsTouchDevice = function () {\n    return isTouchDevice;\n};\n\nvar point = /*#__PURE__*/defaultPointerPos();\nvar isMouseDevice = false;\nif (typeof document !== 'undefined') {\n    var updatePointLocation = function (e) {\n        isMouseDevice = true;\n        eventToPoint(e, point);\n    };\n    listen(document, 'mousedown mousemove', true).start(updatePointLocation);\n}\nvar mouse = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).preventDefault,\n        preventDefault = _b === void 0 ? true : _b;\n    return action(function (_a) {\n        var update = _a.update;\n        var updatePoint = function () {\n            return update(point);\n        };\n        var onMove = function (e) {\n            if (preventDefault) e.preventDefault();\n            framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(updatePoint);\n        };\n        var updateOnMove = listen(document, 'mousemove').start(onMove);\n        if (isMouseDevice) framesync__WEBPACK_IMPORTED_MODULE_2__[\"default\"].update(updatePoint);\n        return {\n            stop: function () {\n                framesync__WEBPACK_IMPORTED_MODULE_2__[\"cancelSync\"].update(updatePoint);\n                updateOnMove.stop();\n            }\n        };\n    });\n};\n\nvar getFirstTouch = function (_a) {\n    var firstTouch = _a[0];\n    return firstTouch;\n};\nvar pointer = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return getIsTouchDevice() ? multitouch(props).pipe(function (_a) {\n        var touches = _a.touches;\n        return touches;\n    }, getFirstTouch) : mouse(props);\n};\nvar index$1 = function (_a) {\n    if (_a === void 0) {\n        _a = {};\n    }\n    var x = _a.x,\n        y = _a.y,\n        props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"x\", \"y\"]);\n    if (x !== undefined || y !== undefined) {\n        var applyXOffset_1 = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"applyOffset\"])(x || 0);\n        var applyYOffset_1 = Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"applyOffset\"])(y || 0);\n        var delta_1 = { x: 0, y: 0 };\n        return pointer(props).pipe(function (point) {\n            delta_1.x = applyXOffset_1(point.x);\n            delta_1.y = applyYOffset_1(point.y);\n            return delta_1;\n        });\n    } else {\n        return pointer(props);\n    }\n};\n\nvar chain = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var i = 0;\n        var current;\n        var playCurrent = function () {\n            current = actions[i].start({\n                complete: function () {\n                    i++;\n                    i >= actions.length ? complete() : playCurrent();\n                },\n                update: update\n            });\n        };\n        playCurrent();\n        return {\n            stop: function () {\n                return current && current.stop();\n            }\n        };\n    });\n};\n\nvar parallel = /*#__PURE__*/multi({\n    getOutput: function () {\n        return [];\n    },\n    getCount: function (subs) {\n        return subs.length;\n    },\n    getFirst: function (subs) {\n        return subs[0];\n    },\n    mapApi: function (subs, methodName) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return subs.map(function (sub, i) {\n                if (sub[methodName]) {\n                    return Array.isArray(args[0]) ? sub[methodName](args[0][i]) : sub[methodName].apply(sub, args);\n                }\n            });\n        };\n    },\n    setProp: function (output, name, v) {\n        return output[name] = v;\n    },\n    startActions: function (actions, starter) {\n        return actions.map(function (action, i) {\n            return starter(action, i);\n        });\n    }\n});\nvar parallel$1 = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return parallel(actions);\n};\n\nvar crossfade = function (a, b) {\n    return action(function (observer) {\n        var balance = 0;\n        var fadable = parallel$1(a, b).start(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, observer, { update: function (_a) {\n                var va = _a[0],\n                    vb = _a[1];\n                observer.update(Object(_popmotion_popcorn__WEBPACK_IMPORTED_MODULE_1__[\"mix\"])(va, vb, balance));\n            } }));\n        return {\n            setBalance: function (v) {\n                return balance = v;\n            },\n            stop: function () {\n                return fadable.stop();\n            }\n        };\n    });\n};\n\nvar delay = function (timeToDelay) {\n    return action(function (_a) {\n        var complete = _a.complete;\n        var timeout = setTimeout(complete, timeToDelay);\n        return {\n            stop: function () {\n                return clearTimeout(timeout);\n            }\n        };\n    });\n};\n\nvar merge = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action(function (observer) {\n        var subs = actions.map(function (thisAction) {\n            return thisAction.start(observer);\n        });\n        return {\n            stop: function () {\n                return subs.forEach(function (sub) {\n                    return sub.stop();\n                });\n            }\n        };\n    });\n};\n\nvar schedule = function (scheduler, schedulee) {\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var latest;\n        var schedulerSub = scheduler.start({\n            update: function () {\n                return latest !== undefined && update(latest);\n            },\n            complete: complete\n        });\n        var scheduleeSub = schedulee.start({\n            update: function (v) {\n                return latest = v;\n            },\n            complete: complete\n        });\n        return {\n            stop: function () {\n                schedulerSub.stop();\n                scheduleeSub.stop();\n            }\n        };\n    });\n};\n\nvar stagger = function (actions, interval) {\n    var intervalIsNumber = typeof interval === 'number';\n    var actionsWithDelay = actions.map(function (a, i) {\n        var timeToDelay = intervalIsNumber ? interval * i : interval(i);\n        return chain(delay(timeToDelay), a);\n    });\n    return parallel$1.apply(void 0, actionsWithDelay);\n};\n\nvar styler = function () {\n    return Object(hey_listen__WEBPACK_IMPORTED_MODULE_5__[\"invariant\"])(false, 'styler has been removed from Popmotion in 9.0. Downgrade to 8.x or npm install stylefire');\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/popmotion/dist/popmotion.es.js\n");

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!*********************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/checkPropTypes.js from dll-reference dll_5030f387d328e4415785 ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_5030f387d328e4415785 */ \"dll-reference dll_5030f387d328e4415785\"))(\"./node_modules/prop-types/checkPropTypes.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanMgZnJvbSBkbGwtcmVmZXJlbmNlIGRsbF81MDMwZjM4N2QzMjhlNDQxNTc4NT85NzUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISBkbGwtcmVmZXJlbmNlIGRsbF81MDMwZjM4N2QzMjhlNDQxNTc4NSAqLyBcImRsbC1yZWZlcmVuY2UgZGxsXzUwMzBmMzg3ZDMyOGU0NDE1Nzg1XCIpKShcIi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qcz9iMDcyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsa0RBQVU7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLGdGQUFlOztBQUVwQywyQkFBMkIsbUJBQU8sQ0FBQyx5RkFBNEI7QUFDL0QscUJBQXFCLG1CQUFPLENBQUMscUVBQWtCOztBQUUvQztBQUNBOztBQUVBLElBQUksSUFBcUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMENBQTBDOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsNkJBQTZCO0FBQzdCLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixLQUFLO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsNEJBQTRCO0FBQzVCLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQVEsSUFBcUM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxVQUFVLEtBQXFDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNCQUFzQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVUsSUFBcUM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUIsMkJBQTJCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxLQUFxQyw0RkFBNEYsU0FBTTtBQUM3STtBQUNBOztBQUVBLG1CQUFtQixnQ0FBZ0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EscUJBQXFCLGdDQUFnQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoJ29iamVjdC1hc3NpZ24nKTtcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcbnZhciBjaGVja1Byb3BUeXBlcyA9IHJlcXVpcmUoJy4vY2hlY2tQcm9wVHlwZXMnKTtcblxudmFyIGhhcyA9IEZ1bmN0aW9uLmNhbGwuYmluZChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KTtcbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBwcmludFdhcm5pbmcgPSBmdW5jdGlvbih0ZXh0KSB7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArIHRleHQ7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfTtcbn1cblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvblRoYXRSZXR1cm5zTnVsbCgpIHtcbiAgcmV0dXJuIG51bGw7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpIHtcbiAgLyogZ2xvYmFsIFN5bWJvbCAqL1xuICB2YXIgSVRFUkFUT1JfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuaXRlcmF0b3I7XG4gIHZhciBGQVVYX0lURVJBVE9SX1NZTUJPTCA9ICdAQGl0ZXJhdG9yJzsgLy8gQmVmb3JlIFN5bWJvbCBzcGVjLlxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBpdGVyYXRvciBtZXRob2QgZnVuY3Rpb24gY29udGFpbmVkIG9uIHRoZSBpdGVyYWJsZSBvYmplY3QuXG4gICAqXG4gICAqIEJlIHN1cmUgdG8gaW52b2tlIHRoZSBmdW5jdGlvbiB3aXRoIHRoZSBpdGVyYWJsZSBhcyBjb250ZXh0OlxuICAgKlxuICAgKiAgICAgdmFyIGl0ZXJhdG9yRm4gPSBnZXRJdGVyYXRvckZuKG15SXRlcmFibGUpO1xuICAgKiAgICAgaWYgKGl0ZXJhdG9yRm4pIHtcbiAgICogICAgICAgdmFyIGl0ZXJhdG9yID0gaXRlcmF0b3JGbi5jYWxsKG15SXRlcmFibGUpO1xuICAgKiAgICAgICAuLi5cbiAgICogICAgIH1cbiAgICpcbiAgICogQHBhcmFtIHs/b2JqZWN0fSBtYXliZUl0ZXJhYmxlXG4gICAqIEByZXR1cm4gez9mdW5jdGlvbn1cbiAgICovXG4gIGZ1bmN0aW9uIGdldEl0ZXJhdG9yRm4obWF5YmVJdGVyYWJsZSkge1xuICAgIHZhciBpdGVyYXRvckZuID0gbWF5YmVJdGVyYWJsZSAmJiAoSVRFUkFUT1JfU1lNQk9MICYmIG1heWJlSXRlcmFibGVbSVRFUkFUT1JfU1lNQk9MXSB8fCBtYXliZUl0ZXJhYmxlW0ZBVVhfSVRFUkFUT1JfU1lNQk9MXSk7XG4gICAgaWYgKHR5cGVvZiBpdGVyYXRvckZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gaXRlcmF0b3JGbjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ29sbGVjdGlvbiBvZiBtZXRob2RzIHRoYXQgYWxsb3cgZGVjbGFyYXRpb24gYW5kIHZhbGlkYXRpb24gb2YgcHJvcHMgdGhhdCBhcmVcbiAgICogc3VwcGxpZWQgdG8gUmVhY3QgY29tcG9uZW50cy4gRXhhbXBsZSB1c2FnZTpcbiAgICpcbiAgICogICB2YXIgUHJvcHMgPSByZXF1aXJlKCdSZWFjdFByb3BUeXBlcycpO1xuICAgKiAgIHZhciBNeUFydGljbGUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAqICAgICBwcm9wVHlwZXM6IHtcbiAgICogICAgICAgLy8gQW4gb3B0aW9uYWwgc3RyaW5nIHByb3AgbmFtZWQgXCJkZXNjcmlwdGlvblwiLlxuICAgKiAgICAgICBkZXNjcmlwdGlvbjogUHJvcHMuc3RyaW5nLFxuICAgKlxuICAgKiAgICAgICAvLyBBIHJlcXVpcmVkIGVudW0gcHJvcCBuYW1lZCBcImNhdGVnb3J5XCIuXG4gICAqICAgICAgIGNhdGVnb3J5OiBQcm9wcy5vbmVPZihbJ05ld3MnLCdQaG90b3MnXSkuaXNSZXF1aXJlZCxcbiAgICpcbiAgICogICAgICAgLy8gQSBwcm9wIG5hbWVkIFwiZGlhbG9nXCIgdGhhdCByZXF1aXJlcyBhbiBpbnN0YW5jZSBvZiBEaWFsb2cuXG4gICAqICAgICAgIGRpYWxvZzogUHJvcHMuaW5zdGFuY2VPZihEaWFsb2cpLmlzUmVxdWlyZWRcbiAgICogICAgIH0sXG4gICAqICAgICByZW5kZXI6IGZ1bmN0aW9uKCkgeyAuLi4gfVxuICAgKiAgIH0pO1xuICAgKlxuICAgKiBBIG1vcmUgZm9ybWFsIHNwZWNpZmljYXRpb24gb2YgaG93IHRoZXNlIG1ldGhvZHMgYXJlIHVzZWQ6XG4gICAqXG4gICAqICAgdHlwZSA6PSBhcnJheXxib29sfGZ1bmN8b2JqZWN0fG51bWJlcnxzdHJpbmd8b25lT2YoWy4uLl0pfGluc3RhbmNlT2YoLi4uKVxuICAgKiAgIGRlY2wgOj0gUmVhY3RQcm9wVHlwZXMue3R5cGV9KC5pc1JlcXVpcmVkKT9cbiAgICpcbiAgICogRWFjaCBhbmQgZXZlcnkgZGVjbGFyYXRpb24gcHJvZHVjZXMgYSBmdW5jdGlvbiB3aXRoIHRoZSBzYW1lIHNpZ25hdHVyZS4gVGhpc1xuICAgKiBhbGxvd3MgdGhlIGNyZWF0aW9uIG9mIGN1c3RvbSB2YWxpZGF0aW9uIGZ1bmN0aW9ucy4gRm9yIGV4YW1wbGU6XG4gICAqXG4gICAqICB2YXIgTXlMaW5rID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgKiAgICBwcm9wVHlwZXM6IHtcbiAgICogICAgICAvLyBBbiBvcHRpb25hbCBzdHJpbmcgb3IgVVJJIHByb3AgbmFtZWQgXCJocmVmXCIuXG4gICAqICAgICAgaHJlZjogZnVuY3Rpb24ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lKSB7XG4gICAqICAgICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgKiAgICAgICAgaWYgKHByb3BWYWx1ZSAhPSBudWxsICYmIHR5cGVvZiBwcm9wVmFsdWUgIT09ICdzdHJpbmcnICYmXG4gICAqICAgICAgICAgICAgIShwcm9wVmFsdWUgaW5zdGFuY2VvZiBVUkkpKSB7XG4gICAqICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXG4gICAqICAgICAgICAgICAgJ0V4cGVjdGVkIGEgc3RyaW5nIG9yIGFuIFVSSSBmb3IgJyArIHByb3BOYW1lICsgJyBpbiAnICtcbiAgICogICAgICAgICAgICBjb21wb25lbnROYW1lXG4gICAqICAgICAgICAgICk7XG4gICAqICAgICAgICB9XG4gICAqICAgICAgfVxuICAgKiAgICB9LFxuICAgKiAgICByZW5kZXI6IGZ1bmN0aW9uKCkgey4uLn1cbiAgICogIH0pO1xuICAgKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG5cbiAgdmFyIEFOT05ZTU9VUyA9ICc8PGFub255bW91cz4+JztcblxuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignYXJyYXknKSxcbiAgICBib29sOiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignYm9vbGVhbicpLFxuICAgIGZ1bmM6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKCdmdW5jdGlvbicpLFxuICAgIG51bWJlcjogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ251bWJlcicpLFxuICAgIG9iamVjdDogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ29iamVjdCcpLFxuICAgIHN0cmluZzogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ3N0cmluZycpLFxuICAgIHN5bWJvbDogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ3N5bWJvbCcpLFxuXG4gICAgYW55OiBjcmVhdGVBbnlUeXBlQ2hlY2tlcigpLFxuICAgIGFycmF5T2Y6IGNyZWF0ZUFycmF5T2ZUeXBlQ2hlY2tlcixcbiAgICBlbGVtZW50OiBjcmVhdGVFbGVtZW50VHlwZUNoZWNrZXIoKSxcbiAgICBlbGVtZW50VHlwZTogY3JlYXRlRWxlbWVudFR5cGVUeXBlQ2hlY2tlcigpLFxuICAgIGluc3RhbmNlT2Y6IGNyZWF0ZUluc3RhbmNlVHlwZUNoZWNrZXIsXG4gICAgbm9kZTogY3JlYXRlTm9kZUNoZWNrZXIoKSxcbiAgICBvYmplY3RPZjogY3JlYXRlT2JqZWN0T2ZUeXBlQ2hlY2tlcixcbiAgICBvbmVPZjogY3JlYXRlRW51bVR5cGVDaGVja2VyLFxuICAgIG9uZU9mVHlwZTogY3JlYXRlVW5pb25UeXBlQ2hlY2tlcixcbiAgICBzaGFwZTogY3JlYXRlU2hhcGVUeXBlQ2hlY2tlcixcbiAgICBleGFjdDogY3JlYXRlU3RyaWN0U2hhcGVUeXBlQ2hlY2tlcixcbiAgfTtcblxuICAvKipcbiAgICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICAgKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAgICovXG4gIC8qZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlKi9cbiAgZnVuY3Rpb24gaXMoeCwgeSkge1xuICAgIC8vIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgICBpZiAoeCA9PT0geSkge1xuICAgICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgICAvLyBTdGVwcyA2LmItNi5lOiArMCAhPSAtMFxuICAgICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgICB9XG4gIH1cbiAgLyplc2xpbnQtZW5hYmxlIG5vLXNlbGYtY29tcGFyZSovXG5cbiAgLyoqXG4gICAqIFdlIHVzZSBhbiBFcnJvci1saWtlIG9iamVjdCBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSBhcyBwZW9wbGUgbWF5IGNhbGxcbiAgICogUHJvcFR5cGVzIGRpcmVjdGx5IGFuZCBpbnNwZWN0IHRoZWlyIG91dHB1dC4gSG93ZXZlciwgd2UgZG9uJ3QgdXNlIHJlYWxcbiAgICogRXJyb3JzIGFueW1vcmUuIFdlIGRvbid0IGluc3BlY3QgdGhlaXIgc3RhY2sgYW55d2F5LCBhbmQgY3JlYXRpbmcgdGhlbVxuICAgKiBpcyBwcm9oaWJpdGl2ZWx5IGV4cGVuc2l2ZSBpZiB0aGV5IGFyZSBjcmVhdGVkIHRvbyBvZnRlbiwgc3VjaCBhcyB3aGF0XG4gICAqIGhhcHBlbnMgaW4gb25lT2ZUeXBlKCkgZm9yIGFueSB0eXBlIGJlZm9yZSB0aGUgb25lIHRoYXQgbWF0Y2hlZC5cbiAgICovXG4gIGZ1bmN0aW9uIFByb3BUeXBlRXJyb3IobWVzc2FnZSkge1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5zdGFjayA9ICcnO1xuICB9XG4gIC8vIE1ha2UgYGluc3RhbmNlb2YgRXJyb3JgIHN0aWxsIHdvcmsgZm9yIHJldHVybmVkIGVycm9ycy5cbiAgUHJvcFR5cGVFcnJvci5wcm90b3R5cGUgPSBFcnJvci5wcm90b3R5cGU7XG5cbiAgZnVuY3Rpb24gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIG1hbnVhbFByb3BUeXBlQ2FsbENhY2hlID0ge307XG4gICAgICB2YXIgbWFudWFsUHJvcFR5cGVXYXJuaW5nQ291bnQgPSAwO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjaGVja1R5cGUoaXNSZXF1aXJlZCwgcHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICAgIGNvbXBvbmVudE5hbWUgPSBjb21wb25lbnROYW1lIHx8IEFOT05ZTU9VUztcbiAgICAgIHByb3BGdWxsTmFtZSA9IHByb3BGdWxsTmFtZSB8fCBwcm9wTmFtZTtcblxuICAgICAgaWYgKHNlY3JldCAhPT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgICAgaWYgKHRocm93T25EaXJlY3RBY2Nlc3MpIHtcbiAgICAgICAgICAvLyBOZXcgYmVoYXZpb3Igb25seSBmb3IgdXNlcnMgb2YgYHByb3AtdHlwZXNgIHBhY2thZ2VcbiAgICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgICAgICAgJ1VzZSBgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKClgIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAgICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICAgICAgICApO1xuICAgICAgICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIC8vIE9sZCBiZWhhdmlvciBmb3IgcGVvcGxlIHVzaW5nIFJlYWN0LlByb3BUeXBlc1xuICAgICAgICAgIHZhciBjYWNoZUtleSA9IGNvbXBvbmVudE5hbWUgKyAnOicgKyBwcm9wTmFtZTtcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAhbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGVbY2FjaGVLZXldICYmXG4gICAgICAgICAgICAvLyBBdm9pZCBzcGFtbWluZyB0aGUgY29uc29sZSBiZWNhdXNlIHRoZXkgYXJlIG9mdGVuIG5vdCBhY3Rpb25hYmxlIGV4Y2VwdCBmb3IgbGliIGF1dGhvcnNcbiAgICAgICAgICAgIG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50IDwgM1xuICAgICAgICAgICkge1xuICAgICAgICAgICAgcHJpbnRXYXJuaW5nKFxuICAgICAgICAgICAgICAnWW91IGFyZSBtYW51YWxseSBjYWxsaW5nIGEgUmVhY3QuUHJvcFR5cGVzIHZhbGlkYXRpb24gJyArXG4gICAgICAgICAgICAgICdmdW5jdGlvbiBmb3IgdGhlIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2AgcHJvcCBvbiBgJyArIGNvbXBvbmVudE5hbWUgICsgJ2AuIFRoaXMgaXMgZGVwcmVjYXRlZCAnICtcbiAgICAgICAgICAgICAgJ2FuZCB3aWxsIHRocm93IGluIHRoZSBzdGFuZGFsb25lIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICAgICAgICAgJ1lvdSBtYXkgYmUgc2VlaW5nIHRoaXMgd2FybmluZyBkdWUgdG8gYSB0aGlyZC1wYXJ0eSBQcm9wVHlwZXMgJyArXG4gICAgICAgICAgICAgICdsaWJyYXJ5LiBTZWUgaHR0cHM6Ly9mYi5tZS9yZWFjdC13YXJuaW5nLWRvbnQtY2FsbC1wcm9wdHlwZXMgJyArICdmb3IgZGV0YWlscy4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGVbY2FjaGVLZXldID0gdHJ1ZTtcbiAgICAgICAgICAgIG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50Kys7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdID09IG51bGwpIHtcbiAgICAgICAgaWYgKGlzUmVxdWlyZWQpIHtcbiAgICAgICAgICBpZiAocHJvcHNbcHJvcE5hbWVdID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ1RoZSAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2AgaXMgbWFya2VkIGFzIHJlcXVpcmVkICcgKyAoJ2luIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBidXQgaXRzIHZhbHVlIGlzIGBudWxsYC4nKSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignVGhlICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgaW4gJyArICgnYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGJ1dCBpdHMgdmFsdWUgaXMgYHVuZGVmaW5lZGAuJykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGNoYWluZWRDaGVja1R5cGUgPSBjaGVja1R5cGUuYmluZChudWxsLCBmYWxzZSk7XG4gICAgY2hhaW5lZENoZWNrVHlwZS5pc1JlcXVpcmVkID0gY2hlY2tUeXBlLmJpbmQobnVsbCwgdHJ1ZSk7XG5cbiAgICByZXR1cm4gY2hhaW5lZENoZWNrVHlwZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKGV4cGVjdGVkVHlwZSkge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgIGlmIChwcm9wVHlwZSAhPT0gZXhwZWN0ZWRUeXBlKSB7XG4gICAgICAgIC8vIGBwcm9wVmFsdWVgIGJlaW5nIGluc3RhbmNlIG9mLCBzYXksIGRhdGUvcmVnZXhwLCBwYXNzIHRoZSAnb2JqZWN0J1xuICAgICAgICAvLyBjaGVjaywgYnV0IHdlIGNhbiBvZmZlciBhIG1vcmUgcHJlY2lzZSBlcnJvciBtZXNzYWdlIGhlcmUgcmF0aGVyIHRoYW5cbiAgICAgICAgLy8gJ29mIHR5cGUgYG9iamVjdGAnLlxuICAgICAgICB2YXIgcHJlY2lzZVR5cGUgPSBnZXRQcmVjaXNlVHlwZShwcm9wVmFsdWUpO1xuXG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByZWNpc2VUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkICcpICsgKCdgJyArIGV4cGVjdGVkVHlwZSArICdgLicpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlQW55VHlwZUNoZWNrZXIoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGwpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlQXJyYXlPZlR5cGVDaGVja2VyKHR5cGVDaGVja2VyKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICBpZiAodHlwZW9mIHR5cGVDaGVja2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignUHJvcGVydHkgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiBjb21wb25lbnQgYCcgKyBjb21wb25lbnROYW1lICsgJ2AgaGFzIGludmFsaWQgUHJvcFR5cGUgbm90YXRpb24gaW5zaWRlIGFycmF5T2YuJyk7XG4gICAgICB9XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB0eXBlICcgKyAoJ2AnICsgcHJvcFR5cGUgKyAnYCBzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYW4gYXJyYXkuJykpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wVmFsdWUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGVycm9yID0gdHlwZUNoZWNrZXIocHJvcFZhbHVlLCBpLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJ1snICsgaSArICddJywgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVFbGVtZW50VHlwZUNoZWNrZXIoKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgaWYgKCFpc1ZhbGlkRWxlbWVudChwcm9wVmFsdWUpKSB7XG4gICAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByb3BUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGEgc2luZ2xlIFJlYWN0RWxlbWVudC4nKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnRUeXBlVHlwZUNoZWNrZXIoKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgaWYgKCFSZWFjdElzLmlzVmFsaWRFbGVtZW50VHlwZShwcm9wVmFsdWUpKSB7XG4gICAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByb3BUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGEgc2luZ2xlIFJlYWN0RWxlbWVudCB0eXBlLicpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2VUeXBlQ2hlY2tlcihleHBlY3RlZENsYXNzKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICBpZiAoIShwcm9wc1twcm9wTmFtZV0gaW5zdGFuY2VvZiBleHBlY3RlZENsYXNzKSkge1xuICAgICAgICB2YXIgZXhwZWN0ZWRDbGFzc05hbWUgPSBleHBlY3RlZENsYXNzLm5hbWUgfHwgQU5PTllNT1VTO1xuICAgICAgICB2YXIgYWN0dWFsQ2xhc3NOYW1lID0gZ2V0Q2xhc3NOYW1lKHByb3BzW3Byb3BOYW1lXSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIGFjdHVhbENsYXNzTmFtZSArICdgIHN1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCAnKSArICgnaW5zdGFuY2Ugb2YgYCcgKyBleHBlY3RlZENsYXNzTmFtZSArICdgLicpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlRW51bVR5cGVDaGVja2VyKGV4cGVjdGVkVmFsdWVzKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGV4cGVjdGVkVmFsdWVzKSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgcHJpbnRXYXJuaW5nKFxuICAgICAgICAgICAgJ0ludmFsaWQgYXJndW1lbnRzIHN1cHBsaWVkIHRvIG9uZU9mLCBleHBlY3RlZCBhbiBhcnJheSwgZ290ICcgKyBhcmd1bWVudHMubGVuZ3RoICsgJyBhcmd1bWVudHMuICcgK1xuICAgICAgICAgICAgJ0EgY29tbW9uIG1pc3Rha2UgaXMgdG8gd3JpdGUgb25lT2YoeCwgeSwgeikgaW5zdGVhZCBvZiBvbmVPZihbeCwgeSwgel0pLidcbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByaW50V2FybmluZygnSW52YWxpZCBhcmd1bWVudCBzdXBwbGllZCB0byBvbmVPZiwgZXhwZWN0ZWQgYW4gYXJyYXkuJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXhwZWN0ZWRWYWx1ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGlzKHByb3BWYWx1ZSwgZXhwZWN0ZWRWYWx1ZXNbaV0pKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlc1N0cmluZyA9IEpTT04uc3RyaW5naWZ5KGV4cGVjdGVkVmFsdWVzLCBmdW5jdGlvbiByZXBsYWNlcihrZXksIHZhbHVlKSB7XG4gICAgICAgIHZhciB0eXBlID0gZ2V0UHJlY2lzZVR5cGUodmFsdWUpO1xuICAgICAgICBpZiAodHlwZSA9PT0gJ3N5bWJvbCcpIHtcbiAgICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdmFsdWUgYCcgKyBTdHJpbmcocHJvcFZhbHVlKSArICdgICcgKyAoJ3N1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBvbmUgb2YgJyArIHZhbHVlc1N0cmluZyArICcuJykpO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlT2JqZWN0T2ZUeXBlQ2hlY2tlcih0eXBlQ2hlY2tlcikge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgaWYgKHR5cGVvZiB0eXBlQ2hlY2tlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ1Byb3BlcnR5IGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgY29tcG9uZW50IGAnICsgY29tcG9uZW50TmFtZSArICdgIGhhcyBpbnZhbGlkIFByb3BUeXBlIG5vdGF0aW9uIGluc2lkZSBvYmplY3RPZi4nKTtcbiAgICAgIH1cbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuICAgICAgaWYgKHByb3BUeXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgJyArICgnYCcgKyBwcm9wVHlwZSArICdgIHN1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBhbiBvYmplY3QuJykpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIga2V5IGluIHByb3BWYWx1ZSkge1xuICAgICAgICBpZiAoaGFzKHByb3BWYWx1ZSwga2V5KSkge1xuICAgICAgICAgIHZhciBlcnJvciA9IHR5cGVDaGVja2VyKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJy4nICsga2V5LCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlVW5pb25UeXBlQ2hlY2tlcihhcnJheU9mVHlwZUNoZWNrZXJzKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFycmF5T2ZUeXBlQ2hlY2tlcnMpKSB7XG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gcHJpbnRXYXJuaW5nKCdJbnZhbGlkIGFyZ3VtZW50IHN1cHBsaWVkIHRvIG9uZU9mVHlwZSwgZXhwZWN0ZWQgYW4gaW5zdGFuY2Ugb2YgYXJyYXkuJykgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gZW1wdHlGdW5jdGlvblRoYXRSZXR1cm5zTnVsbDtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5T2ZUeXBlQ2hlY2tlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBjaGVja2VyID0gYXJyYXlPZlR5cGVDaGVja2Vyc1tpXTtcbiAgICAgIGlmICh0eXBlb2YgY2hlY2tlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwcmludFdhcm5pbmcoXG4gICAgICAgICAgJ0ludmFsaWQgYXJndW1lbnQgc3VwcGxpZWQgdG8gb25lT2ZUeXBlLiBFeHBlY3RlZCBhbiBhcnJheSBvZiBjaGVjayBmdW5jdGlvbnMsIGJ1dCAnICtcbiAgICAgICAgICAncmVjZWl2ZWQgJyArIGdldFBvc3RmaXhGb3JUeXBlV2FybmluZyhjaGVja2VyKSArICcgYXQgaW5kZXggJyArIGkgKyAnLidcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5T2ZUeXBlQ2hlY2tlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGNoZWNrZXIgPSBhcnJheU9mVHlwZUNoZWNrZXJzW2ldO1xuICAgICAgICBpZiAoY2hlY2tlcihwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIFJlYWN0UHJvcFR5cGVzU2VjcmV0KSA9PSBudWxsKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBzdXBwbGllZCB0byAnICsgKCdgJyArIGNvbXBvbmVudE5hbWUgKyAnYC4nKSk7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVOb2RlQ2hlY2tlcigpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIGlmICghaXNOb2RlKHByb3BzW3Byb3BOYW1lXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBzdXBwbGllZCB0byAnICsgKCdgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYSBSZWFjdE5vZGUuJykpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVTaGFwZVR5cGVDaGVja2VyKHNoYXBlVHlwZXMpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuICAgICAgaWYgKHByb3BUeXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgYCcgKyBwcm9wVHlwZSArICdgICcgKyAoJ3N1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBgb2JqZWN0YC4nKSk7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBrZXkgaW4gc2hhcGVUeXBlcykge1xuICAgICAgICB2YXIgY2hlY2tlciA9IHNoYXBlVHlwZXNba2V5XTtcbiAgICAgICAgaWYgKCFjaGVja2VyKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGVycm9yID0gY2hlY2tlcihwcm9wVmFsdWUsIGtleSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSArICcuJyArIGtleSwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlU3RyaWN0U2hhcGVUeXBlQ2hlY2tlcihzaGFwZVR5cGVzKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgIGlmIChwcm9wVHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB0eXBlIGAnICsgcHJvcFR5cGUgKyAnYCAnICsgKCdzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYG9iamVjdGAuJykpO1xuICAgICAgfVxuICAgICAgLy8gV2UgbmVlZCB0byBjaGVjayBhbGwga2V5cyBpbiBjYXNlIHNvbWUgYXJlIHJlcXVpcmVkIGJ1dCBtaXNzaW5nIGZyb21cbiAgICAgIC8vIHByb3BzLlxuICAgICAgdmFyIGFsbEtleXMgPSBhc3NpZ24oe30sIHByb3BzW3Byb3BOYW1lXSwgc2hhcGVUeXBlcyk7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gYWxsS2V5cykge1xuICAgICAgICB2YXIgY2hlY2tlciA9IHNoYXBlVHlwZXNba2V5XTtcbiAgICAgICAgaWYgKCFjaGVja2VyKSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKFxuICAgICAgICAgICAgJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIGtleSBgJyArIGtleSArICdgIHN1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLicgK1xuICAgICAgICAgICAgJ1xcbkJhZCBvYmplY3Q6ICcgKyBKU09OLnN0cmluZ2lmeShwcm9wc1twcm9wTmFtZV0sIG51bGwsICcgICcpICtcbiAgICAgICAgICAgICdcXG5WYWxpZCBrZXlzOiAnICsgIEpTT04uc3RyaW5naWZ5KE9iamVjdC5rZXlzKHNoYXBlVHlwZXMpLCBudWxsLCAnICAnKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGVycm9yID0gY2hlY2tlcihwcm9wVmFsdWUsIGtleSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSArICcuJyArIGtleSwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBpc05vZGUocHJvcFZhbHVlKSB7XG4gICAgc3dpdGNoICh0eXBlb2YgcHJvcFZhbHVlKSB7XG4gICAgICBjYXNlICdudW1iZXInOlxuICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIGNhc2UgJ3VuZGVmaW5lZCc6XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICAgIHJldHVybiAhcHJvcFZhbHVlO1xuICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocHJvcFZhbHVlKSkge1xuICAgICAgICAgIHJldHVybiBwcm9wVmFsdWUuZXZlcnkoaXNOb2RlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcFZhbHVlID09PSBudWxsIHx8IGlzVmFsaWRFbGVtZW50KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpdGVyYXRvckZuID0gZ2V0SXRlcmF0b3JGbihwcm9wVmFsdWUpO1xuICAgICAgICBpZiAoaXRlcmF0b3JGbikge1xuICAgICAgICAgIHZhciBpdGVyYXRvciA9IGl0ZXJhdG9yRm4uY2FsbChwcm9wVmFsdWUpO1xuICAgICAgICAgIHZhciBzdGVwO1xuICAgICAgICAgIGlmIChpdGVyYXRvckZuICE9PSBwcm9wVmFsdWUuZW50cmllcykge1xuICAgICAgICAgICAgd2hpbGUgKCEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZSkge1xuICAgICAgICAgICAgICBpZiAoIWlzTm9kZShzdGVwLnZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJdGVyYXRvciB3aWxsIHByb3ZpZGUgZW50cnkgW2ssdl0gdHVwbGVzIHJhdGhlciB0aGFuIHZhbHVlcy5cbiAgICAgICAgICAgIHdoaWxlICghKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmUpIHtcbiAgICAgICAgICAgICAgdmFyIGVudHJ5ID0gc3RlcC52YWx1ZTtcbiAgICAgICAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpc05vZGUoZW50cnlbMV0pKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGlzU3ltYm9sKHByb3BUeXBlLCBwcm9wVmFsdWUpIHtcbiAgICAvLyBOYXRpdmUgU3ltYm9sLlxuICAgIGlmIChwcm9wVHlwZSA9PT0gJ3N5bWJvbCcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8vIGZhbHN5IHZhbHVlIGNhbid0IGJlIGEgU3ltYm9sXG4gICAgaWYgKCFwcm9wVmFsdWUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyAxOS40LjMuNSBTeW1ib2wucHJvdG90eXBlW0BAdG9TdHJpbmdUYWddID09PSAnU3ltYm9sJ1xuICAgIGlmIChwcm9wVmFsdWVbJ0BAdG9TdHJpbmdUYWcnXSA9PT0gJ1N5bWJvbCcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8vIEZhbGxiYWNrIGZvciBub24tc3BlYyBjb21wbGlhbnQgU3ltYm9scyB3aGljaCBhcmUgcG9seWZpbGxlZC5cbiAgICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBwcm9wVmFsdWUgaW5zdGFuY2VvZiBTeW1ib2wpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIEVxdWl2YWxlbnQgb2YgYHR5cGVvZmAgYnV0IHdpdGggc3BlY2lhbCBoYW5kbGluZyBmb3IgYXJyYXkgYW5kIHJlZ2V4cC5cbiAgZnVuY3Rpb24gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKSB7XG4gICAgdmFyIHByb3BUeXBlID0gdHlwZW9mIHByb3BWYWx1ZTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShwcm9wVmFsdWUpKSB7XG4gICAgICByZXR1cm4gJ2FycmF5JztcbiAgICB9XG4gICAgaWYgKHByb3BWYWx1ZSBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgICAgLy8gT2xkIHdlYmtpdHMgKGF0IGxlYXN0IHVudGlsIEFuZHJvaWQgNC4wKSByZXR1cm4gJ2Z1bmN0aW9uJyByYXRoZXIgdGhhblxuICAgICAgLy8gJ29iamVjdCcgZm9yIHR5cGVvZiBhIFJlZ0V4cC4gV2UnbGwgbm9ybWFsaXplIHRoaXMgaGVyZSBzbyB0aGF0IC9ibGEvXG4gICAgICAvLyBwYXNzZXMgUHJvcFR5cGVzLm9iamVjdC5cbiAgICAgIHJldHVybiAnb2JqZWN0JztcbiAgICB9XG4gICAgaWYgKGlzU3ltYm9sKHByb3BUeXBlLCBwcm9wVmFsdWUpKSB7XG4gICAgICByZXR1cm4gJ3N5bWJvbCc7XG4gICAgfVxuICAgIHJldHVybiBwcm9wVHlwZTtcbiAgfVxuXG4gIC8vIFRoaXMgaGFuZGxlcyBtb3JlIHR5cGVzIHRoYW4gYGdldFByb3BUeXBlYC4gT25seSB1c2VkIGZvciBlcnJvciBtZXNzYWdlcy5cbiAgLy8gU2VlIGBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcmAuXG4gIGZ1bmN0aW9uIGdldFByZWNpc2VUeXBlKHByb3BWYWx1ZSkge1xuICAgIGlmICh0eXBlb2YgcHJvcFZhbHVlID09PSAndW5kZWZpbmVkJyB8fCBwcm9wVmFsdWUgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiAnJyArIHByb3BWYWx1ZTtcbiAgICB9XG4gICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICBpZiAocHJvcFR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAocHJvcFZhbHVlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICByZXR1cm4gJ2RhdGUnO1xuICAgICAgfSBlbHNlIGlmIChwcm9wVmFsdWUgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgICAgcmV0dXJuICdyZWdleHAnO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJvcFR5cGU7XG4gIH1cblxuICAvLyBSZXR1cm5zIGEgc3RyaW5nIHRoYXQgaXMgcG9zdGZpeGVkIHRvIGEgd2FybmluZyBhYm91dCBhbiBpbnZhbGlkIHR5cGUuXG4gIC8vIEZvciBleGFtcGxlLCBcInVuZGVmaW5lZFwiIG9yIFwib2YgdHlwZSBhcnJheVwiXG4gIGZ1bmN0aW9uIGdldFBvc3RmaXhGb3JUeXBlV2FybmluZyh2YWx1ZSkge1xuICAgIHZhciB0eXBlID0gZ2V0UHJlY2lzZVR5cGUodmFsdWUpO1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSAnYXJyYXknOlxuICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAgcmV0dXJuICdhbiAnICsgdHlwZTtcbiAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgY2FzZSAnZGF0ZSc6XG4gICAgICBjYXNlICdyZWdleHAnOlxuICAgICAgICByZXR1cm4gJ2EgJyArIHR5cGU7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gdHlwZTtcbiAgICB9XG4gIH1cblxuICAvLyBSZXR1cm5zIGNsYXNzIG5hbWUgb2YgdGhlIG9iamVjdCwgaWYgYW55LlxuICBmdW5jdGlvbiBnZXRDbGFzc05hbWUocHJvcFZhbHVlKSB7XG4gICAgaWYgKCFwcm9wVmFsdWUuY29uc3RydWN0b3IgfHwgIXByb3BWYWx1ZS5jb25zdHJ1Y3Rvci5uYW1lKSB7XG4gICAgICByZXR1cm4gQU5PTllNT1VTO1xuICAgIH1cbiAgICByZXR1cm4gcHJvcFZhbHVlLmNvbnN0cnVjdG9yLm5hbWU7XG4gIH1cblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGNoZWNrUHJvcFR5cGVzO1xuICBSZWFjdFByb3BUeXBlcy5yZXNldFdhcm5pbmdDYWNoZSA9IGNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/prop-types/factoryWithTypeCheckers.js\n");

/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcz9kN2JjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLElBQXFDO0FBQ3pDLGdCQUFnQixtQkFBTyxDQUFDLGtEQUFVOztBQUVsQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBMkI7QUFDdEQsQ0FBQyxNQUFNLEVBSU4iLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/prop-types/index.js\n");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*******************************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/lib/ReactPropTypesSecret.js from dll-reference dll_5030f387d328e4415785 ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_5030f387d328e4415785 */ \"dll-reference dll_5030f387d328e4415785\"))(\"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIGZyb20gZGxsLXJlZmVyZW5jZSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODU/Mjg3ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKF9fd2VicGFja19yZXF1aXJlX18oLyohIGRsbC1yZWZlcmVuY2UgZGxsXzUwMzBmMzg3ZDMyOGU0NDE1Nzg1ICovIFwiZGxsLXJlZmVyZW5jZSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODVcIikpKFwiLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-is/cjs/react-is.development.js\n");

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NGNlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUM7QUFDRCxtQkFBbUIsbUJBQU8sQ0FBQywwRkFBK0I7QUFDMUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-is/index.js\n");

/***/ }),

/***/ "./node_modules/react-progressive-image/dist.js":
/*!******************************************************!*\
  !*** ./node_modules/react-progressive-image/dist.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ProgressiveImage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProgressiveImage, _React$Component);\n\n  function ProgressiveImage(props) {\n    var _this;\n\n    _classCallCheck(this, ProgressiveImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProgressiveImage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"image\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"loadImage\", function (src, srcSetData) {\n      // If there is already an image we nullify the onload\n      // and onerror props so it does not incorrectly set state\n      // when it resolves\n      if (_this.image) {\n        _this.image.onload = null;\n        _this.image.onerror = null;\n      }\n\n      var image = new Image();\n      _this.image = image;\n      image.onload = _this.onLoad;\n      image.onerror = _this.onError;\n      image.src = src;\n\n      if (srcSetData) {\n        image.srcset = srcSetData.srcSet;\n        image.sizes = srcSetData.sizes;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onLoad\", function () {\n      // use this.image.src instead of this.props.src to\n      // avoid the possibility of props being updated and the\n      // new image loading before the new props are available as\n      // this.props.\n      if (_this.props.delay) {\n        _this.setImageWithDelay();\n      } else {\n        _this.setImage();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setImageWithDelay\", function () {\n      setTimeout(function () {\n        _this.setImage();\n      }, _this.props.delay);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setImage\", function () {\n      _this.setState({\n        image: _this.image.src,\n        loading: false,\n        srcSetData: {\n          srcSet: _this.image.srcset || '',\n          sizes: _this.image.sizes || ''\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onError\", function (errorEvent) {\n      var onError = _this.props.onError;\n\n      if (onError) {\n        onError(errorEvent);\n      }\n    });\n\n    _this.state = {\n      image: props.placeholder,\n      loading: true,\n      srcSetData: {\n        srcSet: '',\n        sizes: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ProgressiveImage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          src = _this$props.src,\n          srcSetData = _this$props.srcSetData;\n      this.loadImage(src, srcSetData);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          src = _this$props2.src,\n          placeholder = _this$props2.placeholder,\n          srcSetData = _this$props2.srcSetData; // We only invalidate the current image if the src has changed.\n\n      if (src !== prevProps.src) {\n        this.setState({\n          image: placeholder,\n          loading: true\n        }, function () {\n          _this2.loadImage(src, srcSetData);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.image) {\n        this.image.onload = null;\n        this.image.onerror = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          image = _this$state.image,\n          loading = _this$state.loading,\n          srcSetData = _this$state.srcSetData;\n      var children = this.props.children;\n\n      if (!children || typeof children !== 'function') {\n        throw new Error(\"ProgressiveImage requires a function as its only child\");\n      }\n\n      return children(image, loading, srcSetData);\n    }\n  }]);\n\n  return ProgressiveImage;\n}(React.Component);\n\nexports.default = ProgressiveImage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-progressive-image/dist.js\n");

/***/ }),

/***/ "./node_modules/react-router-dom/esm/react-router-dom.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-router-dom/esm/react-router-dom.js ***!
  \***************************************************************/
/*! exports provided: MemoryRouter, Prompt, Redirect, Route, Router, StaticRouter, Switch, generatePath, matchPath, useHistory, useLocation, useParams, useRouteMatch, withRouter, BrowserRouter, HashRouter, Link, NavLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BrowserRouter\", function() { return BrowserRouter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HashRouter\", function() { return HashRouter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Link\", function() { return Link; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavLink\", function() { return NavLink; });\n/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-router */ \"./node_modules/react-router/esm/react-router.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MemoryRouter\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"MemoryRouter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Prompt\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"Prompt\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Redirect\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"Redirect\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Route\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"Route\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Router\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"Router\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"StaticRouter\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"StaticRouter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Switch\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"Switch\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generatePath\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"generatePath\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"matchPath\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"matchPath\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"useHistory\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"useHistory\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"useLocation\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"useLocation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"useParams\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"useParams\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"useRouteMatch\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"useRouteMatch\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withRouter\", function() { return react_router__WEBPACK_IMPORTED_MODULE_0__[\"withRouter\"]; });\n\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var history__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! history */ \"./node_modules/history/esm/history.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tiny-warning */ \"./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createBrowserHistory\"])(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react_router__WEBPACK_IMPORTED_MODULE_0__[\"Router\"], {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(react__WEBPACK_IMPORTED_MODULE_2___default.a.Component);\n\nif (true) {\n  BrowserRouter.propTypes = {\n    basename: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.string,\n    children: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.node,\n    forceRefresh: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,\n    getUserConfirmation: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func,\n    keyLength: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : undefined;\n  };\n}\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createHashHistory\"])(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react_router__WEBPACK_IMPORTED_MODULE_0__[\"Router\"], {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(react__WEBPACK_IMPORTED_MODULE_2___default.a.Component);\n\nif (true) {\n  HashRouter.propTypes = {\n    basename: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.string,\n    children: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.node,\n    getUserConfirmation: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func,\n    hashType: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : undefined;\n  };\n}\n\nvar resolveToLocation = function resolveToLocation(to, currentLocation) {\n  return typeof to === \"function\" ? to(currentLocation) : to;\n};\nvar normalizeToLocation = function normalizeToLocation(to, currentLocation) {\n  return typeof to === \"string\" ? Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createLocation\"])(to, null, null, currentLocation) : to;\n};\n\nvar forwardRefShim = function forwardRefShim(C) {\n  return C;\n};\n\nvar forwardRef = react__WEBPACK_IMPORTED_MODULE_2___default.a.forwardRef;\n\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar LinkAnchor = forwardRef(function (_ref, forwardedRef) {\n  var innerRef = _ref.innerRef,\n      navigate = _ref.navigate,\n      _onClick = _ref.onClick,\n      rest = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_ref, [\"innerRef\", \"navigate\", \"onClick\"]);\n\n  var target = rest.target;\n\n  var props = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, rest, {\n    onClick: function onClick(event) {\n      try {\n        if (_onClick) _onClick(event);\n      } catch (ex) {\n        event.preventDefault();\n        throw ex;\n      }\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && ( // ignore everything but left clicks\n      !target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n          navigate();\n        }\n    }\n  }); // React 15 compat\n\n\n  if (forwardRefShim !== forwardRef) {\n    props.ref = forwardedRef || innerRef;\n  } else {\n    props.ref = innerRef;\n  }\n  /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n\n\n  return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"a\", props);\n});\n\nif (true) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = forwardRef(function (_ref2, forwardedRef) {\n  var _ref2$component = _ref2.component,\n      component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,\n      replace = _ref2.replace,\n      to = _ref2.to,\n      innerRef = _ref2.innerRef,\n      rest = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_ref2, [\"component\", \"replace\", \"to\", \"innerRef\"]);\n\n  return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react_router__WEBPACK_IMPORTED_MODULE_0__[\"__RouterContext\"].Consumer, null, function (context) {\n    !context ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <Link> outside a <Router>\") : undefined : void 0;\n    var history = context.history;\n    var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);\n    var href = location ? history.createHref(location) : \"\";\n\n    var props = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, rest, {\n      href: href,\n      navigate: function navigate() {\n        var location = resolveToLocation(to, context.location);\n        var method = replace ? history.replace : history.push;\n        method(location);\n      }\n    }); // React 15 compat\n\n\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.innerRef = innerRef;\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(component, props);\n  });\n});\n\nif (true) {\n  var toType = prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func]);\n  var refType = prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func, prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.shape({\n    current: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.any\n  })]);\n  Link.displayName = \"Link\";\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func,\n    replace: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,\n    target: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.string,\n    to: toType.isRequired\n  };\n}\n\nvar forwardRefShim$1 = function forwardRefShim(C) {\n  return C;\n};\n\nvar forwardRef$1 = react__WEBPACK_IMPORTED_MODULE_2___default.a.forwardRef;\n\nif (typeof forwardRef$1 === \"undefined\") {\n  forwardRef$1 = forwardRefShim$1;\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = forwardRef$1(function (_ref, forwardedRef) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      locationProp = _ref.location,\n      sensitive = _ref.sensitive,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      innerRef = _ref.innerRef,\n      rest = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"sensitive\", \"strict\", \"style\", \"to\", \"innerRef\"]);\n\n  return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react_router__WEBPACK_IMPORTED_MODULE_0__[\"__RouterContext\"].Consumer, null, function (context) {\n    !context ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <NavLink> outside a <Router>\") : undefined : void 0;\n    var currentLocation = locationProp || context.location;\n    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);\n    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n    var match = escapedPath ? Object(react_router__WEBPACK_IMPORTED_MODULE_0__[\"matchPath\"])(currentLocation.pathname, {\n      path: escapedPath,\n      exact: exact,\n      sensitive: sensitive,\n      strict: strict\n    }) : null;\n    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);\n    var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;\n    var style = isActive ? Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, styleProp, {}, activeStyle) : styleProp;\n\n    var props = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({\n      \"aria-current\": isActive && ariaCurrent || null,\n      className: className,\n      style: style,\n      to: toLocation\n    }, rest); // React 15 compat\n\n\n    if (forwardRefShim$1 !== forwardRef$1) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.innerRef = innerRef;\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(Link, props);\n  });\n});\n\nif (true) {\n  NavLink.displayName = \"NavLink\";\n  var ariaCurrentType = prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"]);\n  NavLink.propTypes = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.string,\n    activeStyle: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.object,\n    className: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.string,\n    exact: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,\n    isActive: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func,\n    location: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.object,\n    sensitive: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,\n    strict: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.bool,\n    style: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.object\n  });\n}\n\n\n//# sourceMappingURL=react-router-dom.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-router-dom/esm/react-router-dom.js\n");

/***/ }),

/***/ "./node_modules/react-router/esm/react-router.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-router/esm/react-router.js ***!
  \*******************************************************/
/*! exports provided: MemoryRouter, Prompt, Redirect, Route, Router, StaticRouter, Switch, __HistoryContext, __RouterContext, generatePath, matchPath, useHistory, useLocation, useParams, useRouteMatch, withRouter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MemoryRouter\", function() { return MemoryRouter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Prompt\", function() { return Prompt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Redirect\", function() { return Redirect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Route\", function() { return Route; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Router\", function() { return Router; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StaticRouter\", function() { return StaticRouter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Switch\", function() { return Switch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__HistoryContext\", function() { return historyContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__RouterContext\", function() { return context; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generatePath\", function() { return generatePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matchPath\", function() { return matchPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useHistory\", function() { return useHistory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useLocation\", function() { return useLocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useParams\", function() { return useParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useRouteMatch\", function() { return useRouteMatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withRouter\", function() { return withRouter; });\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var history__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! history */ \"./node_modules/history/esm/history.js\");\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tiny-warning */ \"./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n/* harmony import */ var mini_create_react_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! mini-create-react-context */ \"./node_modules/mini-create-react-context/dist/esm/index.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! path-to-regexp */ \"./node_modules/path-to-regexp/index.js\");\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(path_to_regexp__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n// TODO: Replace with React.createContext once we can assume React 16+\n\nvar createNamedContext = function createNamedContext(name) {\n  var context = Object(mini_create_react_context__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n  context.displayName = name;\n  return context;\n};\n\nvar historyContext =\n/*#__PURE__*/\ncreateNamedContext(\"Router-History\");\n\n// TODO: Replace with React.createContext once we can assume React 16+\n\nvar createNamedContext$1 = function createNamedContext(name) {\n  var context = Object(mini_create_react_context__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n  context.displayName = name;\n  return context;\n};\n\nvar context =\n/*#__PURE__*/\ncreateNamedContext$1(\"Router\");\n\n/**\n * The public API for putting history on context.\n */\n\nvar Router =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Router, _React$Component);\n\n  Router.computeRootMatch = function computeRootMatch(pathname) {\n    return {\n      path: \"/\",\n      url: \"/\",\n      params: {},\n      isExact: pathname === \"/\"\n    };\n  };\n\n  function Router(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      location: props.history.location\n    }; // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n\n    _this._isMounted = false;\n    _this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      _this.unlisten = props.history.listen(function (location) {\n        if (_this._isMounted) {\n          _this.setState({\n            location: location\n          });\n        } else {\n          _this._pendingLocation = location;\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = Router.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({\n        location: this._pendingLocation\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  };\n\n  _proto.render = function render() {\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(context.Provider, {\n      value: {\n        history: this.props.history,\n        location: this.state.location,\n        match: Router.computeRootMatch(this.state.location.pathname),\n        staticContext: this.props.staticContext\n      }\n    }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(historyContext.Provider, {\n      children: this.props.children || null,\n      value: this.props.history\n    }));\n  };\n\n  return Router;\n}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);\n\nif (true) {\n  Router.propTypes = {\n    children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.node,\n    history: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object.isRequired,\n    staticContext: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object\n  };\n\n  Router.prototype.componentDidUpdate = function (prevProps) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(prevProps.history === this.props.history, \"You cannot change <Router history>\") : undefined;\n  };\n}\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\n\nvar MemoryRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(MemoryRouter, _React$Component);\n\n  function MemoryRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createMemoryHistory\"])(_this.props);\n    return _this;\n  }\n\n  var _proto = MemoryRouter.prototype;\n\n  _proto.render = function render() {\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return MemoryRouter;\n}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);\n\nif (true) {\n  MemoryRouter.propTypes = {\n    initialEntries: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.array,\n    initialIndex: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n    getUserConfirmation: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n    keyLength: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.number,\n    children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function () {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!this.props.history, \"<MemoryRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\") : undefined;\n  };\n}\n\nvar Lifecycle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Lifecycle, _React$Component);\n\n  function Lifecycle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Lifecycle.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Lifecycle;\n}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);\n\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\n\nfunction Prompt(_ref) {\n  var message = _ref.message,\n      _ref$when = _ref.when,\n      when = _ref$when === void 0 ? true : _ref$when;\n  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(context.Consumer, null, function (context) {\n    !context ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You should not use <Prompt> outside a <Router>\") : undefined : void 0;\n    if (!when || context.staticContext) return null;\n    var method = context.history.block;\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Lifecycle, {\n      onMount: function onMount(self) {\n        self.release = method(message);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        if (prevProps.message !== message) {\n          self.release();\n          self.release = method(message);\n        }\n      },\n      onUnmount: function onUnmount(self) {\n        self.release();\n      },\n      message: message\n    });\n  });\n}\n\nif (true) {\n  var messageType = prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string]);\n  Prompt.propTypes = {\n    when: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n    message: messageType.isRequired\n  };\n}\n\nvar cache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n  var generator = path_to_regexp__WEBPACK_IMPORTED_MODULE_8___default.a.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\n\n\nfunction generatePath(path, params) {\n  if (path === void 0) {\n    path = \"/\";\n  }\n\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path === \"/\" ? path : compilePath(path)(params, {\n    pretty: true\n  });\n}\n\n/**\n * The public API for navigating programmatically with a component.\n */\n\nfunction Redirect(_ref) {\n  var computedMatch = _ref.computedMatch,\n      to = _ref.to,\n      _ref$push = _ref.push,\n      push = _ref$push === void 0 ? false : _ref$push;\n  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(context.Consumer, null, function (context) {\n    !context ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You should not use <Redirect> outside a <Router>\") : undefined : void 0;\n    var history = context.history,\n        staticContext = context.staticContext;\n    var method = push ? history.push : history.replace;\n    var location = Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createLocation\"])(computedMatch ? typeof to === \"string\" ? generatePath(to, computedMatch.params) : Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, to, {\n      pathname: generatePath(to.pathname, computedMatch.params)\n    }) : to); // When rendering in a static context,\n    // set the new location immediately.\n\n    if (staticContext) {\n      method(location);\n      return null;\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Lifecycle, {\n      onMount: function onMount() {\n        method(location);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        var prevLocation = Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createLocation\"])(prevProps.to);\n\n        if (!Object(history__WEBPACK_IMPORTED_MODULE_3__[\"locationsAreEqual\"])(prevLocation, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, location, {\n          key: prevLocation.key\n        }))) {\n          method(location);\n        }\n      },\n      to: to\n    });\n  });\n}\n\nif (true) {\n  Redirect.propTypes = {\n    push: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n    from: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string,\n    to: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object]).isRequired\n  };\n}\n\nvar cache$1 = {};\nvar cacheLimit$1 = 10000;\nvar cacheCount$1 = 0;\n\nfunction compilePath$1(path, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});\n  if (pathCache[path]) return pathCache[path];\n  var keys = [];\n  var regexp = path_to_regexp__WEBPACK_IMPORTED_MODULE_8___default()(path, keys, options);\n  var result = {\n    regexp: regexp,\n    keys: keys\n  };\n\n  if (cacheCount$1 < cacheLimit$1) {\n    pathCache[path] = result;\n    cacheCount$1++;\n  }\n\n  return result;\n}\n/**\n * Public API for matching a URL pathname to a path.\n */\n\n\nfunction matchPath(pathname, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (typeof options === \"string\" || Array.isArray(options)) {\n    options = {\n      path: options\n    };\n  }\n\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === void 0 ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === void 0 ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;\n  var paths = [].concat(path);\n  return paths.reduce(function (matched, path) {\n    if (!path && path !== \"\") return null;\n    if (matched) return matched;\n\n    var _compilePath = compilePath$1(path, {\n      end: exact,\n      strict: strict,\n      sensitive: sensitive\n    }),\n        regexp = _compilePath.regexp,\n        keys = _compilePath.keys;\n\n    var match = regexp.exec(pathname);\n    if (!match) return null;\n    var url = match[0],\n        values = match.slice(1);\n    var isExact = pathname === url;\n    if (exact && !isExact) return null;\n    return {\n      path: path,\n      // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url,\n      // the matched portion of the URL\n      isExact: isExact,\n      // whether or not we matched exactly\n      params: keys.reduce(function (memo, key, index) {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nfunction isEmptyChildren(children) {\n  return react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.count(children) === 0;\n}\n\nfunction evalChildrenDev(children, props, path) {\n  var value = children(props);\n   true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(value !== undefined, \"You returned `undefined` from the `children` function of \" + (\"<Route\" + (path ? \" path=\\\"\" + path + \"\\\"\" : \"\") + \">, but you \") + \"should have returned a React element or `null`\") : undefined;\n  return value || null;\n}\n/**\n * The public API for matching a single path and rendering.\n */\n\n\nvar Route =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Route, _React$Component);\n\n  function Route() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Route.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(context.Consumer, null, function (context$1) {\n      !context$1 ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You should not use <Route> outside a <Router>\") : undefined : void 0;\n      var location = _this.props.location || context$1.location;\n      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us\n      : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;\n\n      var props = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, context$1, {\n        location: location,\n        match: match\n      });\n\n      var _this$props = _this.props,\n          children = _this$props.children,\n          component = _this$props.component,\n          render = _this$props.render; // Preact uses an empty array as children by\n      // default, so use null if that's the case.\n\n      if (Array.isArray(children) && children.length === 0) {\n        children = null;\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(context.Provider, {\n        value: props\n      }, props.match ? children ? typeof children === \"function\" ?  true ? evalChildrenDev(children, props, _this.props.path) : undefined : children : component ? react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(component, props) : render ? render(props) : null : typeof children === \"function\" ?  true ? evalChildrenDev(children, props, _this.props.path) : undefined : null);\n    });\n  };\n\n  return Route;\n}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);\n\nif (true) {\n  Route.propTypes = {\n    children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.node]),\n    component: function component(props, propName) {\n      if (props[propName] && !Object(react_is__WEBPACK_IMPORTED_MODULE_9__[\"isValidElementType\"])(props[propName])) {\n        return new Error(\"Invalid prop 'component' supplied to 'Route': the prop is not a valid React component\");\n      }\n    },\n    exact: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n    location: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object,\n    path: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string)]),\n    render: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n    sensitive: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n    strict: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool\n  };\n\n  Route.prototype.componentDidMount = function () {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\") : undefined;\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\") : undefined;\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\") : undefined;\n  };\n\n  Route.prototype.componentDidUpdate = function (prevProps) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : undefined;\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : undefined;\n  };\n}\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n  return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, location, {\n    pathname: addLeadingSlash(basename) + location.pathname\n  });\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n  var base = addLeadingSlash(basename);\n  if (location.pathname.indexOf(base) !== 0) return location;\n  return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, location, {\n    pathname: location.pathname.substr(base.length)\n  });\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createPath\"])(location);\n}\n\nfunction staticHandler(methodName) {\n  return function () {\n      true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You cannot %s with <StaticRouter>\", methodName) : undefined ;\n  };\n}\n\nfunction noop() {}\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\n\n\nvar StaticRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(StaticRouter, _React$Component);\n\n  function StaticRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handlePush = function (location) {\n      return _this.navigateTo(location, \"PUSH\");\n    };\n\n    _this.handleReplace = function (location) {\n      return _this.navigateTo(location, \"REPLACE\");\n    };\n\n    _this.handleListen = function () {\n      return noop;\n    };\n\n    _this.handleBlock = function () {\n      return noop;\n    };\n\n    return _this;\n  }\n\n  var _proto = StaticRouter.prototype;\n\n  _proto.navigateTo = function navigateTo(location, action) {\n    var _this$props = this.props,\n        _this$props$basename = _this$props.basename,\n        basename = _this$props$basename === void 0 ? \"\" : _this$props$basename,\n        _this$props$context = _this$props.context,\n        context = _this$props$context === void 0 ? {} : _this$props$context;\n    context.action = action;\n    context.location = addBasename(basename, Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createLocation\"])(location));\n    context.url = createURL(context.location);\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        _this$props2$basename = _this$props2.basename,\n        basename = _this$props2$basename === void 0 ? \"\" : _this$props2$basename,\n        _this$props2$context = _this$props2.context,\n        context = _this$props2$context === void 0 ? {} : _this$props2$context,\n        _this$props2$location = _this$props2.location,\n        location = _this$props2$location === void 0 ? \"/\" : _this$props2$location,\n        rest = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(_this$props2, [\"basename\", \"context\", \"location\"]);\n\n    var history = {\n      createHref: function createHref(path) {\n        return addLeadingSlash(basename + createURL(path));\n      },\n      action: \"POP\",\n      location: stripBasename(basename, Object(history__WEBPACK_IMPORTED_MODULE_3__[\"createLocation\"])(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Router, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, rest, {\n      history: history,\n      staticContext: context\n    }));\n  };\n\n  return StaticRouter;\n}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);\n\nif (true) {\n  StaticRouter.propTypes = {\n    basename: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string,\n    context: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object,\n    location: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function () {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!this.props.history, \"<StaticRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { StaticRouter as Router }`.\") : undefined;\n  };\n}\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\n\nvar Switch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Switch, _React$Component);\n\n  function Switch() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Switch.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(context.Consumer, null, function (context) {\n      !context ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You should not use <Switch> outside a <Router>\") : undefined : void 0;\n      var location = _this.props.location || context.location;\n      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()\n      // here because toArray adds keys to all child elements and we do not want\n      // to trigger an unmount/remount for two <Route>s that render the same\n      // component at different URLs.\n\n      react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.forEach(_this.props.children, function (child) {\n        if (match == null && react__WEBPACK_IMPORTED_MODULE_1___default.a.isValidElement(child)) {\n          element = child;\n          var path = child.props.path || child.props.from;\n          match = path ? matchPath(location.pathname, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, child.props, {\n            path: path\n          })) : context.match;\n        }\n      });\n      return match ? react__WEBPACK_IMPORTED_MODULE_1___default.a.cloneElement(element, {\n        location: location,\n        computedMatch: match\n      }) : null;\n    });\n  };\n\n  return Switch;\n}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);\n\nif (true) {\n  Switch.propTypes = {\n    children: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.node,\n    location: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object\n  };\n\n  Switch.prototype.componentDidUpdate = function (prevProps) {\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : undefined;\n     true ? Object(tiny_warning__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : undefined;\n  };\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\n\nfunction withRouter(Component) {\n  var displayName = \"withRouter(\" + (Component.displayName || Component.name) + \")\";\n\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(props, [\"wrappedComponentRef\"]);\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(context.Consumer, null, function (context) {\n      !context ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You should not use <\" + displayName + \" /> outside a <Router>\") : undefined : void 0;\n      return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, remainingProps, context, {\n        ref: wrappedComponentRef\n      }));\n    });\n  };\n\n  C.displayName = displayName;\n  C.WrappedComponent = Component;\n\n  if (true) {\n    C.propTypes = {\n      wrappedComponentRef: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func, prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object])\n    };\n  }\n\n  return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_11___default()(C, Component);\n}\n\nvar useContext = react__WEBPACK_IMPORTED_MODULE_1___default.a.useContext;\nfunction useHistory() {\n  if (true) {\n    !(typeof useContext === \"function\") ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You must use React >= 16.8 in order to use useHistory()\") : undefined : void 0;\n  }\n\n  return useContext(historyContext);\n}\nfunction useLocation() {\n  if (true) {\n    !(typeof useContext === \"function\") ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You must use React >= 16.8 in order to use useLocation()\") : undefined : void 0;\n  }\n\n  return useContext(context).location;\n}\nfunction useParams() {\n  if (true) {\n    !(typeof useContext === \"function\") ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You must use React >= 16.8 in order to use useParams()\") : undefined : void 0;\n  }\n\n  var match = useContext(context).match;\n  return match ? match.params : {};\n}\nfunction useRouteMatch(path) {\n  if (true) {\n    !(typeof useContext === \"function\") ?  true ? Object(tiny_invariant__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(false, \"You must use React >= 16.8 in order to use useRouteMatch()\") : undefined : void 0;\n  }\n\n  var location = useLocation();\n  var match = useContext(context).match;\n  return path ? matchPath(location.pathname, path) : match;\n}\n\nif (true) {\n  if (typeof window !== \"undefined\") {\n    var global = window;\n    var key = \"__react_router_build__\";\n    var buildNames = {\n      cjs: \"CommonJS\",\n      esm: \"ES modules\",\n      umd: \"UMD\"\n    };\n\n    if (global[key] && global[key] !== \"esm\") {\n      var initialBuildName = buildNames[global[key]];\n      var secondaryBuildName = buildNames[\"esm\"]; // TODO: Add link to article that explains in detail how to avoid\n      // loading 2 different builds.\n\n      throw new Error(\"You are loading the \" + secondaryBuildName + \" build of React Router \" + (\"on a page that is already running the \" + initialBuildName + \" \") + \"build, so things won't work right.\");\n    }\n\n    global[key] = \"esm\";\n  }\n}\n\n\n//# sourceMappingURL=react-router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanM/NGYyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzRTtBQUM1QztBQUNTO0FBQzBEO0FBQzFEO0FBQ21CO0FBQ2Y7QUFDbUI7QUFDaEI7QUFDSTtBQUNzRDtBQUNqRDs7QUFFbkQ7O0FBRUE7QUFDQSxnQkFBZ0IseUVBQWE7QUFDN0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLGdCQUFnQix5RUFBYTtBQUM3QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdGQUFjOztBQUVoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLDRDQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssRUFBRSw0Q0FBSztBQUNaO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7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QUFDQSx5QkFBeUIsd0dBQTZCOztBQUV0RCxXQUFXLDRDQUFLO0FBQ2hCLGlCQUFpQixLQUFxQyxHQUFHLDhEQUFTLDJFQUEyRSxTQUFnQjtBQUM3SixhQUFhLDRDQUFLLDBCQUEwQixrRkFBUSxHQUFHO0FBQ3ZEO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBLE1BQU0sSUFBcUM7QUFDM0M7QUFDQSwyQkFBMkIsaURBQVMsWUFBWSxpREFBUyxTQUFTLGlEQUFTLE9BQU8saURBQVM7QUFDM0Y7QUFDQTs7QUFFQSxTQUFTLCtEQUFZO0FBQ3JCOztBQUVBLGlCQUFpQiw0Q0FBSztBQUN0QjtBQUNBLE1BQU0sSUFBcUM7QUFDM0MsMENBQTBDLEtBQXFDLEdBQUcsOERBQVMscUVBQXFFLFNBQWdCO0FBQ2hMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sSUFBcUM7QUFDM0MsMENBQTBDLEtBQXFDLEdBQUcsOERBQVMsc0VBQXNFLFNBQWdCO0FBQ2pMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sSUFBcUM7QUFDM0MsMENBQTBDLEtBQXFDLEdBQUcsOERBQVMsb0VBQW9FLFNBQWdCO0FBQy9LOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxJQUFxQztBQUMzQywwQ0FBMEMsS0FBcUMsR0FBRyw4REFBUyx3RUFBd0UsU0FBZ0I7QUFDbkw7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxJQUFxQztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRXVPO0FBQ3ZPIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdtaW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0JztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBoaXN0b3J5Q29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQoXCJSb3V0ZXItSGlzdG9yeVwiKTtcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0JDEgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGNvbnRleHQgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlTmFtZWRDb250ZXh0JDEoXCJSb3V0ZXJcIik7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5cbnZhciBSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVSb290TWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gUm91dGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBsb2NhdGlvbjogcHJvcHMuaGlzdG9yeS5sb2NhdGlvblxuICAgIH07IC8vIFRoaXMgaXMgYSBiaXQgb2YgYSBoYWNrLiBXZSBoYXZlIHRvIHN0YXJ0IGxpc3RlbmluZyBmb3IgbG9jYXRpb25cbiAgICAvLyBjaGFuZ2VzIGhlcmUgaW4gdGhlIGNvbnN0cnVjdG9yIGluIGNhc2UgdGhlcmUgYXJlIGFueSA8UmVkaXJlY3Q+c1xuICAgIC8vIG9uIHRoZSBpbml0aWFsIHJlbmRlci4gSWYgdGhlcmUgYXJlLCB0aGV5IHdpbGwgcmVwbGFjZS9wdXNoIHdoZW5cbiAgICAvLyB0aGV5IG1vdW50IGFuZCBzaW5jZSBjRE0gZmlyZXMgaW4gY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMsIHdlIG1heVxuICAgIC8vIGdldCBhIG5ldyBsb2NhdGlvbiBiZWZvcmUgdGhlIDxSb3V0ZXI+IGlzIG1vdW50ZWQuXG5cbiAgICBfdGhpcy5faXNNb3VudGVkID0gZmFsc2U7XG4gICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IG51bGw7XG5cbiAgICBpZiAoIXByb3BzLnN0YXRpY0NvbnRleHQpIHtcbiAgICAgIF90aGlzLnVubGlzdGVuID0gcHJvcHMuaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICAgIGlmIChfdGhpcy5faXNNb3VudGVkKSB7XG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLl9wZW5kaW5nTG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy51bmxpc3RlbikgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcbiAgICAgIH1cbiAgICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KGhpc3RvcnlDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxuICAgICAgdmFsdWU6IHRoaXMucHJvcHMuaGlzdG9yeVxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5cbnZhciBNZW1vcnlSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBNZW1vcnlSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgTGlmZWN5Y2xlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBMaWZlY3ljbGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXG4gKi9cblxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGlmICghd2hlbiB8fCBjb250ZXh0LnN0YXRpY0NvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHZhciBtZXRob2QgPSBjb250ZXh0Lmhpc3RvcnkuYmxvY2s7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKHByZXZQcm9wcy5tZXNzYWdlICE9PSBtZXNzYWdlKSB7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Vbm1vdW50OiBmdW5jdGlvbiBvblVubW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBtZXNzYWdlVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWVzc2FnZTogbWVzc2FnZVR5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGgsIHBhcmFtcykge1xuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGF0aCA9IFwiL1wiO1xuICB9XG5cbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7XG4gICAgcHJldHR5OiB0cnVlXG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSZWRpcmVjdChfcmVmKSB7XG4gIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgX3JlZiRwdXNoID0gX3JlZi5wdXNoLFxuICAgICAgcHVzaCA9IF9yZWYkcHVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHB1c2g7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQuc3RhdGljQ29udGV4dDtcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICB2YXIgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcblxuICAgICAgICBpZiAoIWxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XG4gICAgICAgIH0pKSkge1xuICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0bzogdG9cbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSQxID0ge307XG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCQxID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAga2V5czoga2V5c1xuICB9O1xuXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCQxKys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cblxuXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgb3B0aW9ucyA9IHtcbiAgICAgIHBhdGg6IG9wdGlvbnNcbiAgICB9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xuICByZXR1cm4gcGF0aHMucmVkdWNlKGZ1bmN0aW9uIChtYXRjaGVkLCBwYXRoKSB7XG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXG4gICAgfSksXG4gICAgICAgIHJlZ2V4cCA9IF9jb21waWxlUGF0aC5yZWdleHAsXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICAgIHZhciBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBwYXRoLFxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCxcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcbiAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XG4gIHZhciB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyh2YWx1ZSAhPT0gdW5kZWZpbmVkLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQxKSB7XG4gICAgICAhY29udGV4dCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JDEubG9jYXRpb247XG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQxLm1hdGNoO1xuXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQxLCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IG1hdGNoXG4gICAgICB9KTtcblxuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICBjb21wb25lbnQgPSBfdGhpcyRwcm9wcy5jb21wb25lbnQsXG4gICAgICAgICAgcmVuZGVyID0gX3RoaXMkcHJvcHMucmVuZGVyOyAvLyBQcmVhY3QgdXNlcyBhbiBlbXB0eSBhcnJheSBhcyBjaGlsZHJlbiBieVxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgJiYgY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogcHJvcHNcbiAgICAgIH0sIHByb3BzLm1hdGNoID8gY2hpbGRyZW4gPyB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogY2hpbGRyZW4gOiBjb21wb25lbnQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogcmVuZGVyID8gcmVuZGVyKHByb3BzKSA6IG51bGwgOiB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKSA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5cblxudmFyIFN0YXRpY1JvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3RhdGljUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ubmF2aWdhdGVUbyA9IGZ1bmN0aW9uIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wcyRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMkY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcyRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzJGNvbnRleHQ7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzMiRiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wczIkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzMiRjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wczIkY29udGV4dCxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyLmxvY2F0aW9uLFxuICAgICAgICBsb2NhdGlvbiA9IF90aGlzJHByb3BzMiRsb2NhdGlvbiA9PT0gdm9pZCAwID8gXCIvXCIgOiBfdGhpcyRwcm9wczIkbG9jYXRpb24sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogZnVuY3Rpb24gY3JlYXRlSHJlZihwYXRoKSB7XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgICAgfSxcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICB2YXIgZWxlbWVudCwgbWF0Y2g7IC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcbiAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cblxuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcbiAgICAgICAgICBtYXRjaCA9IHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF9leHRlbmRzKHt9LCBjaGlsZC5wcm9wcywge1xuICAgICAgICAgICAgcGF0aDogcGF0aFxuICAgICAgICAgIH0pKSA6IGNvbnRleHQubWF0Y2g7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxuICAgICAgfSkgOiBudWxsO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cblxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcblxuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8XCIgKyBkaXNwbGF5TmFtZSArIFwiIC8+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgY29udGV4dCwge1xuICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQy5wcm9wVHlwZXMgPSB7XG4gICAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn1cblxudmFyIHVzZUNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0O1xuZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUhpc3RvcnkoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChoaXN0b3J5Q29udGV4dCk7XG59XG5mdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUxvY2F0aW9uKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCkubG9jYXRpb247XG59XG5mdW5jdGlvbiB1c2VQYXJhbXMoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VQYXJhbXMoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICB2YXIgbWF0Y2ggPSB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xuICByZXR1cm4gbWF0Y2ggPyBtYXRjaC5wYXJhbXMgOiB7fTtcbn1cbmZ1bmN0aW9uIHVzZVJvdXRlTWF0Y2gocGF0aCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUm91dGVNYXRjaCgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBwYXRoKSA6IG1hdGNoO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIGdsb2JhbCA9IHdpbmRvdztcbiAgICB2YXIga2V5ID0gXCJfX3JlYWN0X3JvdXRlcl9idWlsZF9fXCI7XG4gICAgdmFyIGJ1aWxkTmFtZXMgPSB7XG4gICAgICBjanM6IFwiQ29tbW9uSlNcIixcbiAgICAgIGVzbTogXCJFUyBtb2R1bGVzXCIsXG4gICAgICB1bWQ6IFwiVU1EXCJcbiAgICB9O1xuXG4gICAgaWYgKGdsb2JhbFtrZXldICYmIGdsb2JhbFtrZXldICE9PSBcImVzbVwiKSB7XG4gICAgICB2YXIgaW5pdGlhbEJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbZ2xvYmFsW2tleV1dO1xuICAgICAgdmFyIHNlY29uZGFyeUJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbXCJlc21cIl07IC8vIFRPRE86IEFkZCBsaW5rIHRvIGFydGljbGUgdGhhdCBleHBsYWlucyBpbiBkZXRhaWwgaG93IHRvIGF2b2lkXG4gICAgICAvLyBsb2FkaW5nIDIgZGlmZmVyZW50IGJ1aWxkcy5cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGFyZSBsb2FkaW5nIHRoZSBcIiArIHNlY29uZGFyeUJ1aWxkTmFtZSArIFwiIGJ1aWxkIG9mIFJlYWN0IFJvdXRlciBcIiArIChcIm9uIGEgcGFnZSB0aGF0IGlzIGFscmVhZHkgcnVubmluZyB0aGUgXCIgKyBpbml0aWFsQnVpbGROYW1lICsgXCIgXCIpICsgXCJidWlsZCwgc28gdGhpbmdzIHdvbid0IHdvcmsgcmlnaHQuXCIpO1xuICAgIH1cblxuICAgIGdsb2JhbFtrZXldID0gXCJlc21cIjtcbiAgfVxufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBoaXN0b3J5Q29udGV4dCBhcyBfX0hpc3RvcnlDb250ZXh0LCBjb250ZXh0IGFzIF9fUm91dGVyQ29udGV4dCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci5qcy5tYXBcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-router/esm/react-router.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*******************************************************************************************!*\
  !*** delegated ./node_modules/react/index.js from dll-reference dll_5030f387d328e4415785 ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference dll_5030f387d328e4415785 */ \"dll-reference dll_5030f387d328e4415785\"))(\"./node_modules/react/index.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVsZWdhdGVkIC4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIGZyb20gZGxsLXJlZmVyZW5jZSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODU/ODU3NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKF9fd2VicGFja19yZXF1aXJlX18oLyohIGRsbC1yZWZlcmVuY2UgZGxsXzUwMzBmMzg3ZDMyOGU0NDE1Nzg1ICovIFwiZGxsLXJlZmVyZW5jZSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODVcIikpKFwiLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/resolve-pathname/esm/resolve-pathname.js":
/*!***************************************************************!*\
  !*** ./node_modules/resolve-pathname/esm/resolve-pathname.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (resolvePathname);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcz85NDIxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDLFFBQVE7QUFDeEM7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5QixNQUFNOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFZSw4RUFBZSxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XG4gIGlmIChmcm9tID09PSB1bmRlZmluZWQpIGZyb20gPSAnJztcblxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IChmcm9tICYmIGZyb20uc3BsaXQoJy8nKSkgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcblxuICBpZiAoXG4gICAgbXVzdEVuZEFicyAmJlxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcbiAgICAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKVxuICApXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/resolve-pathname/esm/resolve-pathname.js\n");

/***/ }),

/***/ "./node_modules/style-value-types/dist/style-value-types.es.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-value-types/dist/style-value-types.es.js ***!
  \*********************************************************************/
/*! exports provided: number, scale, alpha, degrees, percent, progressPercentage, px, vw, vh, rgba, rgbUnit, hsla, hex, color, complex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"number\", function() { return number; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"alpha\", function() { return alpha; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"degrees\", function() { return degrees; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"percent\", function() { return percent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"progressPercentage\", function() { return progressPercentage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"px\", function() { return px; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vw\", function() { return vw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vh\", function() { return vh; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rgba\", function() { return rgba; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rgbUnit\", function() { return rgbUnit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hsla\", function() { return hsla; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hex\", function() { return hex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"color\", function() { return color; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"complex\", function() { return complex; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar clamp = function (min, max) { return function (v) {\r\n    return Math.max(Math.min(v, max), min);\r\n}; };\r\nvar sanitize = function (v) { return (v % 1 ? Number(v.toFixed(5)) : v); };\r\nvar floatRegex = /(-)?(\\d[\\d\\.]*)/g;\r\nvar colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\r\nvar singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$/i;\n\nvar number = {\r\n    test: function (v) { return typeof v === 'number'; },\r\n    parse: parseFloat,\r\n    transform: function (v) { return v; }\r\n};\r\nvar alpha = __assign(__assign({}, number), { transform: clamp(0, 1) });\r\nvar scale = __assign(__assign({}, number), { default: 1 });\n\nvar createUnitType = function (unit) { return ({\r\n    test: function (v) {\r\n        return typeof v === 'string' && v.endsWith(unit) && v.split(' ').length === 1;\r\n    },\r\n    parse: parseFloat,\r\n    transform: function (v) { return \"\" + v + unit; }\r\n}); };\r\nvar degrees = createUnitType('deg');\r\nvar percent = createUnitType('%');\r\nvar px = createUnitType('px');\r\nvar vh = createUnitType('vh');\r\nvar vw = createUnitType('vw');\r\nvar progressPercentage = __assign(__assign({}, percent), { parse: function (v) { return percent.parse(v) / 100; }, transform: function (v) { return percent.transform(v * 100); } });\n\nvar getValueFromFunctionString = function (value) {\r\n    return value.substring(value.indexOf('(') + 1, value.lastIndexOf(')'));\r\n};\r\nvar clampRgbUnit = clamp(0, 255);\r\nvar isRgba = function (v) { return v.red !== undefined; };\r\nvar isHsla = function (v) { return v.hue !== undefined; };\r\nvar splitColorValues = function (terms) {\r\n    return function (v) {\r\n        if (typeof v !== 'string')\r\n            return v;\r\n        var values = {};\r\n        var valuesArray = getValueFromFunctionString(v).split(/,\\s*/);\r\n        for (var i = 0; i < 4; i++) {\r\n            values[terms[i]] =\r\n                valuesArray[i] !== undefined ? parseFloat(valuesArray[i]) : 1;\r\n        }\r\n        return values;\r\n    };\r\n};\r\nvar rgbaTemplate = function (_a) {\r\n    var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n    return \"rgba(\" + red + \", \" + green + \", \" + blue + \", \" + alpha$$1 + \")\";\r\n};\r\nvar hslaTemplate = function (_a) {\r\n    var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n    return \"hsla(\" + hue + \", \" + saturation + \", \" + lightness + \", \" + alpha$$1 + \")\";\r\n};\r\nvar rgbUnit = __assign(__assign({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\r\nfunction isColorString(color, colorType) {\r\n    return color.startsWith(colorType) && singleColorRegex.test(color);\r\n}\r\nvar rgba = {\r\n    test: function (v) { return (typeof v === 'string' ? isColorString(v, 'rgb') : isRgba(v)); },\r\n    parse: splitColorValues(['red', 'green', 'blue', 'alpha']),\r\n    transform: function (_a) {\r\n        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n        return rgbaTemplate({\r\n            red: rgbUnit.transform(red),\r\n            green: rgbUnit.transform(green),\r\n            blue: rgbUnit.transform(blue),\r\n            alpha: sanitize(alpha.transform(alpha$$1))\r\n        });\r\n    }\r\n};\r\nvar hsla = {\r\n    test: function (v) { return (typeof v === 'string' ? isColorString(v, 'hsl') : isHsla(v)); },\r\n    parse: splitColorValues(['hue', 'saturation', 'lightness', 'alpha']),\r\n    transform: function (_a) {\r\n        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n        return hslaTemplate({\r\n            hue: Math.round(hue),\r\n            saturation: percent.transform(sanitize(saturation)),\r\n            lightness: percent.transform(sanitize(lightness)),\r\n            alpha: sanitize(alpha.transform(alpha$$1))\r\n        });\r\n    }\r\n};\r\nvar hex = __assign(__assign({}, rgba), { test: function (v) { return typeof v === 'string' && isColorString(v, '#'); }, parse: function (v) {\r\n        var r = '';\r\n        var g = '';\r\n        var b = '';\r\n        if (v.length > 4) {\r\n            r = v.substr(1, 2);\r\n            g = v.substr(3, 2);\r\n            b = v.substr(5, 2);\r\n        }\r\n        else {\r\n            r = v.substr(1, 1);\r\n            g = v.substr(2, 1);\r\n            b = v.substr(3, 1);\r\n            r += r;\r\n            g += g;\r\n            b += b;\r\n        }\r\n        return {\r\n            red: parseInt(r, 16),\r\n            green: parseInt(g, 16),\r\n            blue: parseInt(b, 16),\r\n            alpha: 1\r\n        };\r\n    } });\r\nvar color = {\r\n    test: function (v) {\r\n        return (typeof v === 'string' && singleColorRegex.test(v)) ||\r\n            isRgba(v) ||\r\n            isHsla(v);\r\n    },\r\n    parse: function (v) {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else if (hex.test(v)) {\r\n            return hex.parse(v);\r\n        }\r\n        return v;\r\n    },\r\n    transform: function (v) {\r\n        if (isRgba(v)) {\r\n            return rgba.transform(v);\r\n        }\r\n        else if (isHsla(v)) {\r\n            return hsla.transform(v);\r\n        }\r\n        return v;\r\n    }\r\n};\n\nvar COLOR_TOKEN = '${c}';\r\nvar NUMBER_TOKEN = '${n}';\r\nvar convertNumbersToZero = function (v) {\r\n    return typeof v === 'number' ? 0 : v;\r\n};\r\nvar complex = {\r\n    test: function (v) {\r\n        if (typeof v !== 'string' || !isNaN(v))\r\n            return false;\r\n        var numValues = 0;\r\n        var foundNumbers = v.match(floatRegex);\r\n        var foundColors = v.match(colorRegex);\r\n        if (foundNumbers)\r\n            numValues += foundNumbers.length;\r\n        if (foundColors)\r\n            numValues += foundColors.length;\r\n        return numValues > 0;\r\n    },\r\n    parse: function (v) {\r\n        var input = v;\r\n        var parsed = [];\r\n        var foundColors = input.match(colorRegex);\r\n        if (foundColors) {\r\n            input = input.replace(colorRegex, COLOR_TOKEN);\r\n            parsed.push.apply(parsed, foundColors.map(color.parse));\r\n        }\r\n        var foundNumbers = input.match(floatRegex);\r\n        if (foundNumbers) {\r\n            parsed.push.apply(parsed, foundNumbers.map(number.parse));\r\n        }\r\n        return parsed;\r\n    },\r\n    createTransformer: function (prop) {\r\n        var template = prop;\r\n        var token = 0;\r\n        var foundColors = prop.match(colorRegex);\r\n        var numColors = foundColors ? foundColors.length : 0;\r\n        if (foundColors) {\r\n            for (var i = 0; i < numColors; i++) {\r\n                template = template.replace(foundColors[i], COLOR_TOKEN);\r\n                token++;\r\n            }\r\n        }\r\n        var foundNumbers = template.match(floatRegex);\r\n        var numNumbers = foundNumbers ? foundNumbers.length : 0;\r\n        if (foundNumbers) {\r\n            for (var i = 0; i < numNumbers; i++) {\r\n                template = template.replace(foundNumbers[i], NUMBER_TOKEN);\r\n                token++;\r\n            }\r\n        }\r\n        return function (v) {\r\n            var output = template;\r\n            for (var i = 0; i < token; i++) {\r\n                output = output.replace(i < numColors ? COLOR_TOKEN : NUMBER_TOKEN, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\r\n            }\r\n            return output;\r\n        };\r\n    },\r\n    getAnimatableNone: function (target) {\r\n        var parsedTarget = complex.parse(target);\r\n        var targetTransformer = complex.createTransformer(target);\r\n        return targetTransformer(parsedTarget.map(convertNumbersToZero));\r\n    }\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/style-value-types/dist/style-value-types.es.js\n");

/***/ }),

/***/ "./node_modules/stylefire/dist/stylefire.es.js":
/*!*****************************************************!*\
  !*** ./node_modules/stylefire/dist/stylefire.es.js ***!
  \*****************************************************/
/*! exports provided: default, buildSVGAttrs, buildStyleProperty, createStylerFactory, isTransformProp, transformProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildSVGAttrs\", function() { return buildSVGAttrs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildStyleProperty\", function() { return buildStyleProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createStylerFactory\", function() { return createStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTransformProp\", function() { return isTransformProp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformProps\", function() { return transformProps; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! framesync */ \"./node_modules/framesync/dist/framesync.es.js\");\n/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! style-value-types */ \"./node_modules/style-value-types/dist/style-value-types.es.js\");\n/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hey-listen */ \"./node_modules/hey-listen/dist/hey-listen.es.js\");\n\n\n\n\n\nvar createStyler = function (_a) {\n    var onRead = _a.onRead,\n        onRender = _a.onRender,\n        _b = _a.uncachedValues,\n        uncachedValues = _b === void 0 ? new Set() : _b,\n        _c = _a.useCache,\n        useCache = _c === void 0 ? true : _c;\n    return function (_a) {\n        if (_a === void 0) {\n            _a = {};\n        }\n        var props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, []);\n        var state = {};\n        var changedValues = [];\n        var hasChanged = false;\n        function setValue(key, value) {\n            if (key.startsWith('--')) {\n                props.hasCSSVariable = true;\n            }\n            var currentValue = state[key];\n            state[key] = value;\n            if (state[key] === currentValue) return;\n            if (changedValues.indexOf(key) === -1) {\n                changedValues.push(key);\n            }\n            if (!hasChanged) {\n                hasChanged = true;\n                framesync__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render(styler.render);\n            }\n        }\n        var styler = {\n            get: function (key, forceRead) {\n                if (forceRead === void 0) {\n                    forceRead = false;\n                }\n                var useCached = !forceRead && useCache && !uncachedValues.has(key) && state[key] !== undefined;\n                return useCached ? state[key] : onRead(key, props);\n            },\n            set: function (values, value) {\n                if (typeof values === 'string') {\n                    setValue(values, value);\n                } else {\n                    for (var key in values) {\n                        setValue(key, values[key]);\n                    }\n                }\n                return this;\n            },\n            render: function (forceRender) {\n                if (forceRender === void 0) {\n                    forceRender = false;\n                }\n                if (hasChanged || forceRender === true) {\n                    onRender(state, props, changedValues);\n                    hasChanged = false;\n                    changedValues.length = 0;\n                }\n                return this;\n            }\n        };\n        return styler;\n    };\n};\n\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = '$1-$2';\nvar camelToDash = function (str) {\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\nvar camelCache = /*#__PURE__*/new Map();\nvar dashCache = /*#__PURE__*/new Map();\nvar prefixes = ['Webkit', 'Moz', 'O', 'ms', ''];\nvar numPrefixes = prefixes.length;\nvar isBrowser = typeof document !== 'undefined';\nvar testElement;\nvar setDashPrefix = function (key, prefixed) {\n    return dashCache.set(key, camelToDash(prefixed));\n};\nvar testPrefix = function (key) {\n    testElement = testElement || document.createElement('div');\n    for (var i = 0; i < numPrefixes; i++) {\n        var prefix = prefixes[i];\n        var noPrefix = prefix === '';\n        var prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n        if (prefixedPropertyName in testElement.style || noPrefix) {\n            if (noPrefix && key === 'clipPath' && dashCache.has(key)) {\n                return;\n            }\n            camelCache.set(key, prefixedPropertyName);\n            setDashPrefix(key, \"\" + (noPrefix ? '' : '-') + camelToDash(prefixedPropertyName));\n        }\n    }\n};\nvar setServerProperty = function (key) {\n    return setDashPrefix(key, key);\n};\nvar prefixer = function (key, asDashCase) {\n    if (asDashCase === void 0) {\n        asDashCase = false;\n    }\n    var cache = asDashCase ? dashCache : camelCache;\n    if (!cache.has(key)) {\n        isBrowser ? testPrefix(key) : setServerProperty(key);\n    }\n    return cache.get(key) || key;\n};\n\nvar axes = ['', 'X', 'Y', 'Z'];\nvar order = ['translate', 'scale', 'rotate', 'skew', 'transformPerspective'];\nvar transformProps = /*#__PURE__*/order.reduce(function (acc, key) {\n    return axes.reduce(function (axesAcc, axesKey) {\n        axesAcc.push(key + axesKey);\n        return axesAcc;\n    }, acc);\n}, ['x', 'y', 'z']);\nvar transformPropDictionary = /*#__PURE__*/transformProps.reduce(function (dict, key) {\n    dict[key] = true;\n    return dict;\n}, {});\nfunction isTransformProp(key) {\n    return transformPropDictionary[key] === true;\n}\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\nvar transformOriginProps = /*#__PURE__*/new Set(['originX', 'originY', 'originZ']);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nvar int = /*#__PURE__*/Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])( /*#__PURE__*/Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"number\"]), { transform: Math.round });\nvar valueTypes = {\n    color: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    backgroundColor: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    outlineColor: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    fill: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    stroke: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    borderColor: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    borderTopColor: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    borderRightColor: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    borderBottomColor: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    borderLeftColor: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"color\"],\n    borderWidth: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderTopWidth: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderRightWidth: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderBottomWidth: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderLeftWidth: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderRadius: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    radius: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderTopLeftRadius: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderTopRightRadius: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderBottomRightRadius: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    borderBottomLeftRadius: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    width: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    maxWidth: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    height: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    maxHeight: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    size: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    top: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    right: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    bottom: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    left: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    padding: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    paddingTop: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    paddingRight: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    paddingBottom: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    paddingLeft: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    margin: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    marginTop: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    marginRight: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    marginBottom: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    marginLeft: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    rotate: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"degrees\"],\n    rotateX: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"degrees\"],\n    rotateY: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"degrees\"],\n    rotateZ: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"degrees\"],\n    scale: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"scale\"],\n    scaleX: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"scale\"],\n    scaleY: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"scale\"],\n    scaleZ: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"scale\"],\n    skew: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"degrees\"],\n    skewX: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"degrees\"],\n    skewY: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"degrees\"],\n    distance: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    translateX: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    translateY: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    translateZ: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    x: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    y: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    z: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    perspective: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    opacity: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"alpha\"],\n    originX: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"progressPercentage\"],\n    originY: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"progressPercentage\"],\n    originZ: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"],\n    zIndex: int,\n    fillOpacity: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"alpha\"],\n    strokeOpacity: style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"alpha\"],\n    numOctaves: int\n};\nvar getValueType = function (key) {\n    return valueTypes[key];\n};\nvar getValueAsType = function (value, type) {\n    return type && typeof value === 'number' ? type.transform(value) : value;\n};\n\nvar SCROLL_LEFT = 'scrollLeft';\nvar SCROLL_TOP = 'scrollTop';\nvar scrollKeys = /*#__PURE__*/new Set([SCROLL_LEFT, SCROLL_TOP]);\n\nvar blacklist = /*#__PURE__*/new Set([SCROLL_LEFT, SCROLL_TOP, 'transform']);\nvar translateAlias = {\n    x: 'translateX',\n    y: 'translateY',\n    z: 'translateZ'\n};\nfunction isCustomTemplate(v) {\n    return typeof v === 'function';\n}\nfunction buildTransform(state, transform, transformKeys, transformIsDefault, enableHardwareAcceleration, allowTransformNone) {\n    if (allowTransformNone === void 0) {\n        allowTransformNone = true;\n    }\n    var transformString = '';\n    var transformHasZ = false;\n    transformKeys.sort(sortTransformProps);\n    var numTransformKeys = transformKeys.length;\n    for (var i = 0; i < numTransformKeys; i++) {\n        var key = transformKeys[i];\n        transformString += (translateAlias[key] || key) + \"(\" + transform[key] + \") \";\n        transformHasZ = key === 'z' ? true : transformHasZ;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += 'translateZ(0)';\n    } else {\n        transformString = transformString.trim();\n    }\n    if (isCustomTemplate(state.transform)) {\n        transformString = state.transform(transform, transformIsDefault ? '' : transformString);\n    } else if (allowTransformNone && transformIsDefault) {\n        transformString = 'none';\n    }\n    return transformString;\n}\nfunction buildStyleProperty(state, enableHardwareAcceleration, styles, transform, transformOrigin, transformKeys, isDashCase, allowTransformNone) {\n    if (enableHardwareAcceleration === void 0) {\n        enableHardwareAcceleration = true;\n    }\n    if (styles === void 0) {\n        styles = {};\n    }\n    if (transform === void 0) {\n        transform = {};\n    }\n    if (transformOrigin === void 0) {\n        transformOrigin = {};\n    }\n    if (transformKeys === void 0) {\n        transformKeys = [];\n    }\n    if (isDashCase === void 0) {\n        isDashCase = false;\n    }\n    if (allowTransformNone === void 0) {\n        allowTransformNone = true;\n    }\n    var transformIsDefault = true;\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    for (var key in state) {\n        var value = state[key];\n        var valueType = getValueType(key);\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            if (transformIsDefault) {\n                if (valueType.default && value !== valueType.default || !valueType.default && value !== 0) {\n                    transformIsDefault = false;\n                }\n            }\n        } else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            hasTransformOrigin = true;\n        } else if (!blacklist.has(key) || !isCustomTemplate(valueAsType)) {\n            styles[prefixer(key, isDashCase)] = valueAsType;\n        }\n    }\n    if (hasTransform || typeof state.transform === 'function') {\n        styles.transform = buildTransform(state, transform, transformKeys, transformIsDefault, enableHardwareAcceleration, allowTransformNone);\n    }\n    if (hasTransformOrigin) {\n        styles.transformOrigin = (transformOrigin.originX || '50%') + \" \" + (transformOrigin.originY || '50%') + \" \" + (transformOrigin.originZ || 0);\n    }\n    return styles;\n}\nfunction createStyleBuilder(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.enableHardwareAcceleration,\n        enableHardwareAcceleration = _c === void 0 ? true : _c,\n        _d = _b.isDashCase,\n        isDashCase = _d === void 0 ? true : _d,\n        _e = _b.allowTransformNone,\n        allowTransformNone = _e === void 0 ? true : _e;\n    var styles = {};\n    var transform = {};\n    var transformOrigin = {};\n    var transformKeys = [];\n    return function (state) {\n        transformKeys.length = 0;\n        buildStyleProperty(state, enableHardwareAcceleration, styles, transform, transformOrigin, transformKeys, isDashCase, allowTransformNone);\n        return styles;\n    };\n}\n\nfunction onRead(key, options) {\n    var element = options.element,\n        preparseOutput = options.preparseOutput;\n    var defaultValueType = getValueType(key);\n    if (isTransformProp(key)) {\n        return defaultValueType ? defaultValueType.default || 0 : 0;\n    } else if (scrollKeys.has(key)) {\n        return element[key];\n    } else {\n        var domValue = window.getComputedStyle(element, null).getPropertyValue(prefixer(key, true)) || 0;\n        return preparseOutput && defaultValueType && defaultValueType.test(domValue) && defaultValueType.parse ? defaultValueType.parse(domValue) : domValue;\n    }\n}\nfunction onRender(state, _a, changedValues) {\n    var element = _a.element,\n        buildStyles = _a.buildStyles,\n        hasCSSVariable = _a.hasCSSVariable;\n    Object.assign(element.style, buildStyles(state));\n    if (hasCSSVariable) {\n        var numChangedValues = changedValues.length;\n        for (var i = 0; i < numChangedValues; i++) {\n            var key = changedValues[i];\n            if (key.startsWith('--')) {\n                element.style.setProperty(key, state[key]);\n            }\n        }\n    }\n    if (changedValues.indexOf(SCROLL_LEFT) !== -1) {\n        element[SCROLL_LEFT] = state[SCROLL_LEFT];\n    }\n    if (changedValues.indexOf(SCROLL_TOP) !== -1) {\n        element[SCROLL_TOP] = state[SCROLL_TOP];\n    }\n}\nvar cssStyler = /*#__PURE__*/createStyler({\n    onRead: onRead,\n    onRender: onRender,\n    uncachedValues: scrollKeys\n});\nfunction createCssStyler(element, _a) {\n    if (_a === void 0) {\n        _a = {};\n    }\n    var enableHardwareAcceleration = _a.enableHardwareAcceleration,\n        allowTransformNone = _a.allowTransformNone,\n        props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"enableHardwareAcceleration\", \"allowTransformNone\"]);\n    return cssStyler(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({ element: element, buildStyles: createStyleBuilder({\n            enableHardwareAcceleration: enableHardwareAcceleration,\n            allowTransformNone: allowTransformNone\n        }), preparseOutput: true }, props));\n}\n\nvar camelCaseAttributes = /*#__PURE__*/new Set(['baseFrequency', 'diffuseConstant', 'kernelMatrix', 'kernelUnitLength', 'keySplines', 'keyTimes', 'limitingConeAngle', 'markerHeight', 'markerWidth', 'numOctaves', 'targetX', 'targetY', 'surfaceScale', 'specularConstant', 'specularExponent', 'stdDeviation', 'tableValues']);\n\nvar defaultOrigin = 0.5;\nvar svgAttrsTemplate = function () {\n    return {\n        style: {}\n    };\n};\nvar progressToPixels = function (progress, length) {\n    return style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"].transform(progress * length);\n};\nvar unmeasured = { x: 0, y: 0, width: 0, height: 0 };\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === 'string' ? origin : style_value_types__WEBPACK_IMPORTED_MODULE_2__[\"px\"].transform(offset + size * origin);\n}\nfunction calculateSVGTransformOrigin(dimensions, originX, originY) {\n    return calcOrigin(originX, dimensions.x, dimensions.width) + \" \" + calcOrigin(originY, dimensions.y, dimensions.height);\n}\nvar svgStyleConfig = {\n    enableHardwareAcceleration: false,\n    isDashCase: false\n};\nfunction buildSVGAttrs(_a, dimensions, totalPathLength, cssBuilder, attrs, isDashCase) {\n    if (dimensions === void 0) {\n        dimensions = unmeasured;\n    }\n    if (cssBuilder === void 0) {\n        cssBuilder = createStyleBuilder(svgStyleConfig);\n    }\n    if (attrs === void 0) {\n        attrs = svgAttrsTemplate();\n    }\n    if (isDashCase === void 0) {\n        isDashCase = true;\n    }\n    var attrX = _a.attrX,\n        attrY = _a.attrY,\n        originX = _a.originX,\n        originY = _a.originY,\n        pathLength = _a.pathLength,\n        _b = _a.pathSpacing,\n        pathSpacing = _b === void 0 ? 1 : _b,\n        _c = _a.pathOffset,\n        pathOffset = _c === void 0 ? 0 : _c,\n        state = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__rest\"])(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    var style = cssBuilder(state);\n    for (var key in style) {\n        if (key === 'transform') {\n            attrs.style.transform = style[key];\n        } else {\n            var attrKey = isDashCase && !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n            attrs[attrKey] = style[key];\n        }\n    }\n    if (originX !== undefined || originY !== undefined || style.transform) {\n        attrs.style.transformOrigin = calculateSVGTransformOrigin(dimensions, originX !== undefined ? originX : defaultOrigin, originY !== undefined ? originY : defaultOrigin);\n    }\n    if (attrX !== undefined) attrs.x = attrX;\n    if (attrY !== undefined) attrs.y = attrY;\n    if (totalPathLength !== undefined && pathLength !== undefined) {\n        attrs[isDashCase ? 'stroke-dashoffset' : 'strokeDashoffset'] = progressToPixels(-pathOffset, totalPathLength);\n        attrs[isDashCase ? 'stroke-dasharray' : 'strokeDasharray'] = progressToPixels(pathLength, totalPathLength) + \" \" + progressToPixels(pathSpacing, totalPathLength);\n    }\n    return attrs;\n}\nfunction createAttrBuilder(dimensions, totalPathLength, isDashCase) {\n    if (isDashCase === void 0) {\n        isDashCase = true;\n    }\n    var attrs = svgAttrsTemplate();\n    var cssBuilder = createStyleBuilder(svgStyleConfig);\n    return function (state) {\n        return buildSVGAttrs(state, dimensions, totalPathLength, cssBuilder, attrs, isDashCase);\n    };\n}\n\nvar getDimensions = function (element) {\n    return typeof element.getBBox === 'function' ? element.getBBox() : element.getBoundingClientRect();\n};\nvar getSVGElementDimensions = function (element) {\n    try {\n        return getDimensions(element);\n    } catch (e) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n};\n\nvar isPath = function (element) {\n    return element.tagName === 'path';\n};\nvar svgStyler = /*#__PURE__*/createStyler({\n    onRead: function (key, _a) {\n        var element = _a.element;\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        if (!isTransformProp(key)) {\n            return element.getAttribute(key);\n        } else {\n            var valueType = getValueType(key);\n            return valueType ? valueType.default || 0 : 0;\n        }\n    },\n    onRender: function (state, _a) {\n        var element = _a.element,\n            buildAttrs = _a.buildAttrs;\n        var attrs = buildAttrs(state);\n        for (var key in attrs) {\n            if (key === 'style') {\n                Object.assign(element.style, attrs.style);\n            } else {\n                element.setAttribute(key, attrs[key]);\n            }\n        }\n    }\n});\nvar svg = function (element) {\n    var dimensions = getSVGElementDimensions(element);\n    var pathLength = isPath(element) && element.getTotalLength ? element.getTotalLength() : undefined;\n    return svgStyler({\n        element: element,\n        buildAttrs: createAttrBuilder(dimensions, pathLength)\n    });\n};\n\nvar viewport = /*#__PURE__*/createStyler({\n    useCache: false,\n    onRead: function (key) {\n        return key === 'scrollTop' ? window.pageYOffset : window.pageXOffset;\n    },\n    onRender: function (_a) {\n        var _b = _a.scrollTop,\n            scrollTop = _b === void 0 ? 0 : _b,\n            _c = _a.scrollLeft,\n            scrollLeft = _c === void 0 ? 0 : _c;\n        return window.scrollTo(scrollLeft, scrollTop);\n    }\n});\n\nvar cache = /*#__PURE__*/new WeakMap();\nvar isHTMLElement = function (node) {\n    return node instanceof HTMLElement || typeof node.click === 'function';\n};\nvar isSVGElement = function (node) {\n    return node instanceof SVGElement || 'ownerSVGElement' in node;\n};\nvar createDOMStyler = function (node, props) {\n    var styler;\n    if (node === window) {\n        styler = viewport(node);\n    } else if (isHTMLElement(node)) {\n        styler = createCssStyler(node, props);\n    } else if (isSVGElement(node)) {\n        styler = svg(node);\n    }\n    Object(hey_listen__WEBPACK_IMPORTED_MODULE_3__[\"invariant\"])(styler !== undefined, 'No valid node provided. Node must be HTMLElement, SVGElement or window.');\n    cache.set(node, styler);\n    return styler;\n};\nvar getStyler = function (node, props) {\n    return cache.has(node) ? cache.get(node) : createDOMStyler(node, props);\n};\nfunction index(nodeOrSelector, props) {\n    var node = typeof nodeOrSelector === 'string' ? document.querySelector(nodeOrSelector) : nodeOrSelector;\n    return getStyler(node, props);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/stylefire/dist/stylefire.es.js\n");

/***/ }),

/***/ "./node_modules/tiny-invariant/dist/tiny-invariant.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar isProduction = \"development\" === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (invariant);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanM/ZjUxZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLG1CQUFtQixhQUFvQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZSx3RUFBUyxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\n");

/***/ }),

/***/ "./node_modules/tiny-warning/dist/tiny-warning.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/tiny-warning/dist/tiny-warning.esm.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar isProduction = \"development\" === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (warning);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGlueS13YXJuaW5nL2Rpc3QvdGlueS13YXJuaW5nLmVzbS5qcz8yZDQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsbUJBQW1CLGFBQW9CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFZSxzRUFBTyxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Rpbnktd2FybmluZy9kaXN0L3Rpbnktd2FybmluZy5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbmZ1bmN0aW9uIHdhcm5pbmcoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmICghaXNQcm9kdWN0aW9uKSB7XG4gICAgaWYgKGNvbmRpdGlvbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB0ZXh0ID0gXCJXYXJuaW5nOiBcIiArIG1lc3NhZ2U7XG5cbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLndhcm4odGV4dCk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIHRocm93IEVycm9yKHRleHQpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2FybmluZztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/tiny-warning/dist/tiny-warning.esm.js\n");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__createBinding\", function() { return __createBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spreadArrays\", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldGet\", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__classPrivateFieldSet\", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "./node_modules/value-equal/esm/value-equal.js":
/*!*****************************************************!*\
  !*** ./node_modules/value-equal/esm/value-equal.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction valueOf(obj) {\n  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);\n}\n\nfunction valueEqual(a, b) {\n  // Test for strict equality first.\n  if (a === b) return true;\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index]);\n      })\n    );\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a);\n    var bValue = valueOf(b);\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (valueEqual);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvZXNtL3ZhbHVlLWVxdWFsLmpzP2M2MTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLHVDQUF1QztBQUN2QztBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVlLHlFQUFVLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvZXNtL3ZhbHVlLWVxdWFsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdmFsdWVPZihvYmopIHtcbiAgcmV0dXJuIG9iai52YWx1ZU9mID8gb2JqLnZhbHVlT2YoKSA6IE9iamVjdC5wcm90b3R5cGUudmFsdWVPZi5jYWxsKG9iaik7XG59XG5cbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xuICAvLyBUZXN0IGZvciBzdHJpY3QgZXF1YWxpdHkgZmlyc3QuXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICAvLyBPdGhlcndpc2UsIGlmIGVpdGhlciBvZiB0aGVtID09IG51bGwgdGhleSBhcmUgbm90IGVxdWFsLlxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIEFycmF5LmlzQXJyYXkoYikgJiZcbiAgICAgIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJlxuICAgICAgYS5ldmVyeShmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBpZiAodHlwZW9mIGEgPT09ICdvYmplY3QnIHx8IHR5cGVvZiBiID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSB2YWx1ZU9mKGEpO1xuICAgIHZhciBiVmFsdWUgPSB2YWx1ZU9mKGIpO1xuXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcblxuICAgIHJldHVybiBPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCBhLCBiKSkuZXZlcnkoZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/value-equal/esm/value-equal.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanM/ODJiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2hhcm1vbnktbW9kdWxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/harmony-module.js\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! framer-motion */ \"./node_modules/framer-motion/dist/framer-motion.es.js\");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/esm/react-router-dom.js\");\n/* harmony import */ var react_progressive_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-progressive-image */ \"./node_modules/react-progressive-image/dist.js\");\n/* harmony import */ var react_progressive_image__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_progressive_image__WEBPACK_IMPORTED_MODULE_3__);\nvar _this = undefined,\n    _jsxFileName = \"/Users/dimitripl/Developer/framer-next/pages/index.js\";\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\n\n\nvar transition = {\n  duration: 0.6,\n  ease: [0.43, 0.13, 0.23, 0.96]\n};\n\nvar HomePage = function HomePage() {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"image-and-subtext\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"main-image-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(react_progressive_image__WEBPACK_IMPORTED_MODULE_3___default.a, {\n    src: \"/pink.jpg\",\n    placeholder: \"/pinkprog.jpg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, function (src) {\n    return __jsx(framer_motion__WEBPACK_IMPORTED_MODULE_1__[\"motion\"].img, {\n      className: \"main-image\",\n      src: src,\n      alt: \"Ava Sweet\",\n      whileHover: {\n        scale: 1.3\n      },\n      transition: transition,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    });\n  })), __jsx(framer_motion__WEBPACK_IMPORTED_MODULE_1__[\"motion\"].div, {\n    className: \"subtext-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"artist-name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Ava Sweet\"), __jsx(\"div\", {\n    className: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"42.4387\\xB0 N, 71.3401\\xB0 W\"))));\n};\n\n_c = HomePage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (HomePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWdlcy9pbmRleC5qcz80NGQ4Il0sIm5hbWVzIjpbInRyYW5zaXRpb24iLCJkdXJhdGlvbiIsImVhc2UiLCJIb21lUGFnZSIsInNyYyIsInNjYWxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBRUEsSUFBTUEsVUFBVSxHQUFHO0FBQUVDLFVBQVEsRUFBRSxHQUFaO0FBQWlCQyxNQUFJLEVBQUUsQ0FBQyxJQUFELEVBQU8sSUFBUCxFQUFhLElBQWIsRUFBbUIsSUFBbkI7QUFBdkIsQ0FBbkI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVcsR0FBTTtBQUNyQixTQUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FDRTtBQUFLLGFBQVMsRUFBQyxtQkFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0U7QUFBSyxhQUFTLEVBQUMsc0JBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUNFLE1BQUMsOERBQUQ7QUFBa0IsT0FBRyxFQUFDLFdBQXRCO0FBQWtDLGVBQVcsRUFBQyxlQUE5QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0csVUFBQ0MsR0FBRDtBQUFBLFdBQ0MsTUFBQyxvREFBRCxDQUFRLEdBQVI7QUFDRSxlQUFTLEVBQUMsWUFEWjtBQUVFLFNBQUcsRUFBRUEsR0FGUDtBQUdFLFNBQUcsRUFBQyxXQUhOO0FBSUUsZ0JBQVUsRUFBRTtBQUFFQyxhQUFLLEVBQUU7QUFBVCxPQUpkO0FBS0UsZ0JBQVUsRUFBRUwsVUFMZDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE1BREQ7QUFBQSxHQURILENBREYsQ0FERixFQWNFLE1BQUMsb0RBQUQsQ0FBUSxHQUFSO0FBQVksYUFBUyxFQUFDLG1CQUF0QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0U7QUFBSyxhQUFTLEVBQUMsYUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQURGLEVBRUU7QUFBSyxhQUFTLEVBQUMsTUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG9DQUZGLENBZEYsQ0FERixDQURGO0FBdUJELENBeEJEOztLQUFNRyxRO0FBMEJTQSx1RUFBZiIsImZpbGUiOiIuL3BhZ2VzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgQW5pbWF0ZVByZXNlbmNlLCBtb3Rpb24gfSBmcm9tICdmcmFtZXItbW90aW9uJztcbmltcG9ydCB7IExpbmssIFJvdXRlLCBSb3V0ZXIsIFN3aXRjaCB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IFByb2dyZXNzaXZlSW1hZ2UgZnJvbSAncmVhY3QtcHJvZ3Jlc3NpdmUtaW1hZ2UnO1xuXG5jb25zdCB0cmFuc2l0aW9uID0geyBkdXJhdGlvbjogMC42LCBlYXNlOiBbMC40MywgMC4xMywgMC4yMywgMC45Nl0gfTtcblxuY29uc3QgSG9tZVBhZ2UgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW1hZ2UtYW5kLXN1YnRleHRcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYWluLWltYWdlLWNvbnRhaW5lclwiPlxuICAgICAgICAgIDxQcm9ncmVzc2l2ZUltYWdlIHNyYz1cIi9waW5rLmpwZ1wiIHBsYWNlaG9sZGVyPVwiL3Bpbmtwcm9nLmpwZ1wiPlxuICAgICAgICAgICAgeyhzcmMpID0+IChcbiAgICAgICAgICAgICAgPG1vdGlvbi5pbWdcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtYWluLWltYWdlXCJcbiAgICAgICAgICAgICAgICBzcmM9e3NyY31cbiAgICAgICAgICAgICAgICBhbHQ9XCJBdmEgU3dlZXRcIlxuICAgICAgICAgICAgICAgIHdoaWxlSG92ZXI9e3sgc2NhbGU6IDEuMyB9fVxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb249e3RyYW5zaXRpb259XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvUHJvZ3Jlc3NpdmVJbWFnZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxtb3Rpb24uZGl2IGNsYXNzTmFtZT1cInN1YnRleHQtY29udGFpbmVyXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhcnRpc3QtbmFtZVwiPkF2YSBTd2VldDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGF0ZVwiPjQyLjQzODfCsCBOLCA3MS4zNDAxwrAgVzwvZGl2PlxuICAgICAgICA8L21vdGlvbi5kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEhvbWVQYWdlO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ 5:
/*!**********************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F&absolutePagePath=%2FUsers%2Fdimitripl%2FDeveloper%2Fframer-next%2Fpages%2Findex.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! next-client-pages-loader?page=%2F&absolutePagePath=%2FUsers%2Fdimitripl%2FDeveloper%2Fframer-next%2Fpages%2Findex.js! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fdimitripl%2FDeveloper%2Fframer-next%2Fpages%2Findex.js!./");


/***/ }),

/***/ "dll-reference dll_5030f387d328e4415785":
/*!*******************************************!*\
  !*** external "dll_5030f387d328e4415785" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = dll_5030f387d328e4415785;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODVcIj9mZDIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImRsbC1yZWZlcmVuY2UgZGxsXzUwMzBmMzg3ZDMyOGU0NDE1Nzg1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBkbGxfNTAzMGYzODdkMzI4ZTQ0MTU3ODU7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///dll-reference dll_5030f387d328e4415785\n");

/***/ })

},[[5,"static/runtime/webpack.js"]]]);